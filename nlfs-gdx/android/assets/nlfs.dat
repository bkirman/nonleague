{fixtures:[{has_run:true,home_name:Horsforth,week:1,away_name:"Wheatley Harriers",result:{home_goals:[{time:71,scorer_id:"Owain Witte"},{time:52,scorer_id:"Matthew Allen"},{time:12,scorer_id:"Owain Witte"}],first_half_length:49,second_half_length:50,gate:213,away_goals:[{time:59,scorer_id:"Ryan Bennett"},{time:73,scorer_id:"Jacob Stone"},{time:59,scorer_id:"Finn Gordon"}],match_events:[{minute:3,type:GENERIC,description:"Defender Stone (Wheatley Harriers) hoofs the ball upfield"},{minute:8,type:GENERIC,description:"Burly Wheatley Harriers defender Dissanayake cuts out the attack with a mean sliding tackle"},{minute:10,type:INJURY,description:"Gordon (Wheatley Harriers) has broken his nose but is playing on"},{minute:14,type:GENERIC,description:"Meaty Wheatley Harriers defender Hamilton heads the ball clear"},{minute:18,type:INJURY,description:"The physio comes on to see to Witte (Horsforth)"},{minute:20,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:39,type:GENERIC,description:"Stone (Wheatley Harriers) given a lecture by the ref"},{minute:46,type:GENERIC,description:"The Wheatley Harriers manager points angrily at keeper Burns"},{minute:49,type:INJURY,description:"Stone (Wheatley Harriers) seems to be limping slightly"},{minute:54,type:GENERIC,description:"Burly Wheatley Harriers defender Hamilton cuts out the attack with a mean sliding tackle"},{minute:65,type:INJURY,description:"Hoffman (Wheatley Harriers) goes down after colliding with the opposing defender"},{minute:71,type:INJURY,description:"Stone (Wheatley Harriers) is calling for the physio"},{minute:72,type:YELLOWCARD,description:"Yellow card for Cole (Horsforth)"},{minute:89,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Dua starts warming up"},{minute:92,type:GENERIC,description:"Stone (Wheatley Harriers) given a lecture by the ref"}]}},{has_run:true,home_name:"Cross Heath",week:1,away_name:"Hexham Borough",result:{home_goals:[{time:43,scorer_id:"Gethin Ferguson"}],first_half_length:50,second_half_length:49,gate:263,away_goals:[{time:32,scorer_id:"Oliver Cole"}],match_events:[{minute:35,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:38,type:GENERIC,description:"Striker Cole is brought down by the big centre half, but the ref waves it away"},{minute:38,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:40,type:GENERIC,description:"Cross Heath sub Spencer seems to be tucking into a pie!"},{minute:41,type:GENERIC,description:"Cross Heath's manager Sam Ellis is furious with the referee"},{minute:49,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:58,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:58,type:GENERIC,description:"Cross Heath's Gonzales jogs up the channel"},{minute:61,type:GENERIC,description:"Mcquillen (Hexham Borough) given a lecture by the ref"},{minute:65,type:GENERIC,description:"Meaty Cross Heath defender Daniels heads the ball clear"},{minute:69,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:78,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Castillo some instructions"},{minute:79,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:80,type:YELLOWCARD,description:"Yellow card for Flores (Cross Heath)"},{minute:98,type:GENERIC,description:"Cross Heath's manager Sam Ellis is furious with the referee"}]}},{has_run:true,home_name:"Shirdley Hill",week:1,away_name:"Chapel Olympic",result:{home_goals:[{time:47,scorer_id:"Kian Mc Cart"},{time:1,scorer_id:"Jayden Gonzales"},{time:82,scorer_id:"Callum Ellis"},{time:1,scorer_id:"Callum Ellis"}],first_half_length:46,second_half_length:51,gate:250,away_goals:[],match_events:[{type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"},{minute:3,type:GENERIC,description:"Ellis (Shirdley Hill) seems to be getting a stern warning from the ref"},{minute:5,type:YELLOWCARD,description:"Yellow card for Pierce (Chapel Olympic)"},{minute:21,type:INJURY,description:"Bennett (Chapel Olympic) is calling for the physio"},{minute:40,type:GENERIC,description:"A long ball from Shirdley Hill but Gonzales can't quite get to it"},{minute:47,type:YELLOWCARD,description:"Yellow card for Patel (Chapel Olympic)"},{minute:54,type:GENERIC,description:"Lee (Chapel Olympic) given a lecture by the ref"},{minute:55,type:INJURY,description:"Domville (Chapel Olympic) is calling for the physio"},{minute:74,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:80,type:INJURY,description:"Domville (Chapel Olympic) is calling for the physio"},{minute:87,type:GENERIC,description:"The ref is talking to Henry (Shirdley Hill) after a vicious tackle"},{minute:88,type:INJURY,description:"The physio comes on to see to Fernandez (Chapel Olympic)"},{minute:88,type:GENERIC,description:"Reynolds (Shirdley Hill) given a lecture by the ref"}]}},{has_run:true,home_name:"Hadleigh Albion",week:1,away_name:"Saffron Olympic",result:{home_goals:[{time:46,scorer_id:"Leon Gordon"},{time:46,scorer_id:"Morgan Mc Cart"}],first_half_length:47,second_half_length:50,gate:228,away_goals:[{time:77,scorer_id:"Blake Thompson"},{time:60,scorer_id:"Harry Flores"}],match_events:[{minute:9,type:GENERIC,description:"Garcia (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:15,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:17,type:GENERIC,description:"Saffron Olympic's Garcia jogs up the channel"},{minute:21,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:25,type:GENERIC,description:"Burly Hadleigh Albion defender Edeson cuts out the attack with a mean sliding tackle"},{minute:26,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:38,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:56,type:GENERIC,description:"Defender Garcia (Saffron Olympic) hoofs the ball upfield"},{minute:62,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:87,type:GENERIC,description:"The ref is talking to Thompson (Saffron Olympic) after a vicious tackle"},{minute:88,type:GENERIC,description:"Meaty Hadleigh Albion defender Bungard heads the ball clear"},{minute:90,type:GENERIC,description:"A cheer from the Hadleigh Albion fans as a rude inflatable is thrown on the pitch"},{minute:91,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"}]}},{has_run:true,home_name:Burscough,week:1,away_name:Wroxeter,result:{home_goals:[{time:82,scorer_id:"Cian Medina"},{time:39,scorer_id:"Jake Sanders"}],first_half_length:46,second_half_length:47,gate:202,away_goals:[{time:62,scorer_id:"Joseph Perdue"}],match_events:[{minute:6,type:GENERIC,description:"Some activity on the Burscough bench as Kinlan starts warming up"},{minute:20,type:GENERIC,description:"Wroxeter sub Rogers seems to be tucking into a pie!"},{minute:23,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:28,type:GENERIC,description:"Burly Wroxeter defender Jackson cuts out the attack with a mean sliding tackle"},{minute:40,type:GENERIC,description:"Meaty Burscough defender Marshall heads the ball clear"},{minute:48,type:GENERIC,description:"Woods (Wroxeter) given a lecture by the ref"},{minute:66,type:GENERIC,description:"Some activity on the Wroxeter bench as Turner starts warming up"},{minute:73,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:78,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:88,type:GENERIC,description:"Flores (Wroxeter) given a lecture by the ref"},{minute:92,type:GENERIC,description:"Burscough's Marshall jogs up the channel"}]}},{has_run:true,home_name:Melton,week:1,away_name:"Alsager Town",result:{home_goals:[{time:62,scorer_id:"Jude Wallace"},{time:51,scorer_id:"Blake Griffin"}],first_half_length:45,second_half_length:47,gate:166,away_goals:[{time:11,scorer_id:"Toby Khambaita"},{time:61,scorer_id:"Toby Khambaita"}],match_events:[{minute:4,type:GENERIC,description:"Khambaita (Alsager Town) seems to be getting a stern warning from the ref"},{minute:7,type:YELLOWCARD,description:"Yellow card for Butler (Alsager Town)"},{minute:7,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:15,type:GENERIC,description:"Melton's Upadhyad jogs up the channel"},{minute:18,type:GENERIC,description:"Some activity on the Melton bench as Vasquez starts warming up"},{minute:19,type:GENERIC,description:"Some activity on the Melton bench as Hawkins starts warming up"},{minute:42,type:GENERIC,description:"Melton's Williams jogs up the channel"},{minute:43,type:INJURY,description:"Taylor (Melton) has broken his nose but is playing on"},{minute:49,type:INJURY,description:"Turner (Alsager Town) has broken his nose but is playing on"},{minute:59,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:63,type:GENERIC,description:"Melton Striker Dixon is caught offside"},{minute:74,type:INJURY,description:"James (Melton) is calling for the physio"},{minute:78,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:85,type:GENERIC,description:"Williams (Melton) given a lecture by the ref"}]}},{has_run:true,home_name:"Cross Heath",week:2,away_name:Horsforth,result:{home_goals:[],first_half_length:49,second_half_length:46,gate:256,away_goals:[{time:61,scorer_id:"Owain Witte"}],match_events:[{minute:11,type:GENERIC,description:"Some activity on the Horsforth bench as Pepall starts warming up"},{minute:13,type:GENERIC,description:"Defender Flores (Cross Heath) clears the ball for a throw-in"},{minute:20,type:GENERIC,description:"Some activity on the Horsforth bench as Pepall starts warming up"},{minute:24,type:GENERIC,description:"Cross Heath sub Cabrera seems to be tucking into a pie!"},{minute:31,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Pepall some instructions"},{minute:38,type:INJURY,description:"Edwards (Horsforth) seems to be limping slightly"},{minute:41,type:INJURY,description:"Grant (Cross Heath) writhes on the floor after tripping over the ball"},{minute:44,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:46,type:GENERIC,description:"Horsforth's Pierce jogs up the channel"},{minute:49,type:GENERIC,description:"Nelson (Horsforth) given a lecture by the ref"},{minute:51,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"},{minute:55,type:YELLOWCARD,description:"Yellow card for Allen (Horsforth)"},{minute:76,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"}]}},{has_run:true,home_name:"Wheatley Harriers",week:2,away_name:"Shirdley Hill",result:{home_goals:[{time:36,scorer_id:"Ryan Bennett"},{time:57,scorer_id:"Jacob Stone"}],first_half_length:47,second_half_length:46,gate:219,away_goals:[],match_events:[{minute:17,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:28,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:42,type:GENERIC,description:"Shirdley Hill sub Stephens seems to be tucking into a pie!"},{minute:66,type:GENERIC,description:"Burly Wheatley Harriers defender Dissanayake cuts out the attack with a mean sliding tackle"},{minute:73,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Khambaita starts warming up"},{minute:79,type:GENERIC,description:"The ref is talking to Rice (Wheatley Harriers) after a vicious tackle"},{minute:80,type:YELLOWCARD,description:"Yellow card for Wood (Wheatley Harriers)"},{minute:85,type:GENERIC,description:"The ref is talking to Ellis (Shirdley Hill) after a vicious tackle"},{minute:85,type:GENERIC,description:"Striker Ellis is brought down by the big centre half, but the ref waves it away"},{minute:86,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"}]}},{has_run:true,home_name:"Hexham Borough",week:2,away_name:"Hadleigh Albion",result:{home_goals:[{time:26,scorer_id:"Oliver Cole"},{time:23,scorer_id:"Lewis Diaz"},{time:67,scorer_id:"Oliver Cole"},{time:24,scorer_id:"Oliver Cole"}],first_half_length:49,second_half_length:47,gate:241,away_goals:[],match_events:[{minute:10,type:GENERIC,description:"A burst of noise from the stands to encourage the Hexham Borough players"},{minute:12,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:22,type:YELLOWCARD,description:"Yellow card for Meath (Hadleigh Albion)"},{minute:22,type:GENERIC,description:"Some activity on the Hexham Borough bench as Castillo starts warming up"},{minute:30,type:INJURY,description:"Cole (Hexham Borough) has broken his nose but is playing on"},{minute:34,type:INJURY,description:"Mitchell (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:53,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"},{minute:62,type:GENERIC,description:"Hadleigh Albion Striker Mc Cart is caught offside"},{minute:62,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:69,type:GENERIC,description:"A cheer from the Hadleigh Albion fans as a rude inflatable is thrown on the pitch"},{minute:93,type:INJURY,description:"The physio comes on to see to Sanchez (Hexham Borough)"}]}},{has_run:true,home_name:"Chapel Olympic",week:2,away_name:Burscough,result:{home_goals:[],first_half_length:48,second_half_length:51,gate:153,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Burly Burscough defender Lowsley cuts out the attack with a mean sliding tackle"},{minute:7,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:16,type:GENERIC,description:"The ref is talking to Patel (Chapel Olympic) after a vicious tackle"},{minute:17,type:GENERIC,description:"Defender Howard (Burscough) clears the ball for a throw-in"},{minute:40,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:43,type:GENERIC,description:"Chapel Olympic sub Fisher seems to be tucking into a pie!"},{minute:49,type:INJURY,description:"Lowsley (Burscough) has broken his nose but is playing on"},{minute:67,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is holding his head in frustration"},{minute:71,type:GENERIC,description:"Defender Howard (Burscough) clears the ball for a throw-in"},{minute:73,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hoffman starts warming up"},{minute:78,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:85,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hoffman starts warming up"},{minute:96,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Alexander starts warming up"},{minute:98,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"}]}},{has_run:true,home_name:"Saffron Olympic",week:2,away_name:Melton,result:{home_goals:[{time:13,scorer_id:"Finley Garcia"}],first_half_length:51,second_half_length:48,gate:145,away_goals:[{time:15,scorer_id:"Isaac James"}],match_events:[{minute:9,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:20,type:GENERIC,description:"Upadhyad (Melton) given a lecture by the ref"},{minute:46,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:56,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:60,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:68,type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:71,type:GENERIC,description:"Southway (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:72,type:YELLOWCARD,description:"Yellow card for Rogers (Melton)"},{minute:77,type:YELLOWCARD,description:"Yellow card for Griffin (Melton)"},{minute:86,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:89,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:90,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:91,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"}]}},{has_run:true,home_name:Wroxeter,week:2,away_name:"Alsager Town",result:{home_goals:[{time:1,scorer_id:"Matthew Mcquillen"},{time:61,scorer_id:"Harrison Jackson"}],first_half_length:52,second_half_length:46,gate:164,away_goals:[{time:37,scorer_id:"Toby Khambaita"},{time:40,scorer_id:"Ibrahim Turner"}],match_events:[{minute:16,type:GENERIC,description:"Some activity on the Wroxeter bench as Shelsher starts warming up"},{minute:21,type:INJURY,description:"Bailey (Wroxeter) writhes on the floor after tripping over the ball"},{minute:22,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:28,type:INJURY,description:"Mcquillen (Wroxeter) is calling for the physio"},{minute:29,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:40,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:63,type:GENERIC,description:"Striker Selvaratnam is brought down by the big centre half, but the ref waves it away"},{minute:74,type:INJURY,description:"Wood (Wroxeter) has broken his nose but is playing on"},{minute:74,type:YELLOWCARD,description:"Yellow card for Hill (Alsager Town)"},{minute:86,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:88,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"},{minute:94,type:GENERIC,description:"Wroxeter's manager Jayden Martin is furious with the referee"},{minute:94,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:97,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is furious with the referee"}]}},{has_run:true,home_name:Horsforth,week:3,away_name:"Shirdley Hill",result:{home_goals:[{time:52,scorer_id:"Owain Witte"},{time:52,scorer_id:"Matthew Allen"}],first_half_length:48,second_half_length:46,gate:234,away_goals:[{time:2,scorer_id:"Jayden Gonzales"},{time:36,scorer_id:"Jayden Gonzales"}],match_events:[{minute:12,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:12,type:GENERIC,description:"Some activity on the Horsforth bench as Pepall starts warming up"},{minute:24,type:GENERIC,description:"Meaty Shirdley Hill defender Lopez heads the ball clear"},{minute:30,type:GENERIC,description:"Shirdley Hill sub Hawa seems to be tucking into a pie!"},{minute:39,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:43,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:55,type:GENERIC,description:"Shirdley Hill Striker Ellis is caught offside"},{minute:61,type:GENERIC,description:"Defender Martinez (Shirdley Hill) clears the ball for a throw-in"},{minute:79,type:GENERIC,description:"Shirdley Hill Striker Ellis is caught offside"},{minute:85,type:GENERIC,description:"The travelling Shirdley Hill supporters are shouting abuse at the home fans"},{minute:92,type:GENERIC,description:"Meaty Horsforth defender Cole heads the ball clear"},{minute:93,type:GENERIC,description:"Horsforth Striker Witte is caught offside"}]}},{has_run:true,home_name:"Hadleigh Albion",week:3,away_name:"Cross Heath",result:{home_goals:[],first_half_length:52,second_half_length:46,gate:120,away_goals:[{time:61,scorer_id:"Cole Cox"},{time:62,scorer_id:"Elijah Clark"}],match_events:[{type:GENERIC,description:"The ref is talking to Scott (Cross Heath) after a vicious tackle"},{minute:4,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Spencer some instructions"},{minute:5,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:6,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:12,type:GENERIC,description:"Marshall (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:17,type:GENERIC,description:"The travelling Cross Heath supporters are shouting abuse at the home fans"},{minute:20,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:23,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as James starts warming up"},{minute:38,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:56,type:GENERIC,description:"Cross Heath's manager Sam Ellis is furious with the referee"},{minute:61,type:GENERIC,description:"Burly Cross Heath defender Moore cuts out the attack with a mean sliding tackle"},{minute:66,type:GENERIC,description:"Burly Cross Heath defender Daniels cuts out the attack with a mean sliding tackle"},{minute:79,type:INJURY,description:"Scott (Cross Heath) goes down after colliding with the opposing defender"},{minute:82,type:GENERIC,description:"Defender Gonzales (Cross Heath) hoofs the ball upfield"},{minute:83,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:93,type:GENERIC,description:"Burly Hadleigh Albion defender Edeson cuts out the attack with a mean sliding tackle"},{minute:93,type:INJURY,description:"The physio comes on to see to Daniels (Cross Heath)"}]}},{has_run:true,home_name:Burscough,week:3,away_name:"Wheatley Harriers",result:{home_goals:[],first_half_length:47,second_half_length:47,gate:225,away_goals:[{time:83,scorer_id:"Finn Gordon"}],match_events:[{minute:2,type:GENERIC,description:"Wheatley Harriers's Hamilton jogs up the channel"},{minute:22,type:INJURY,description:"The physio comes on to see to Bryant (Burscough)"},{minute:23,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) clears the ball for a throw-in"},{minute:35,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:38,type:INJURY,description:"Nguyen (Burscough) seems to be limping slightly"},{minute:39,type:GENERIC,description:"Meaty Burscough defender Howard heads the ball clear"},{minute:42,type:GENERIC,description:"Wheatley Harriers's Dissanayake jogs up the channel"},{minute:44,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:44,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:63,type:GENERIC,description:"A long ball from Wheatley Harriers but Stone can't quite get to it"},{minute:68,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:88,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) clears the ball for a throw-in"},{minute:90,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"}]}},{has_run:true,home_name:Melton,week:3,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:48,second_half_length:52,gate:220,away_goals:[{time:48,scorer_id:"Cian Meath"}],match_events:[{minute:15,type:GENERIC,description:"Melton sub Vasquez seems to be tucking into a pie!"},{minute:17,type:GENERIC,description:"Some activity on the Hexham Borough bench as Foster starts warming up"},{minute:24,type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:24,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:38,type:GENERIC,description:"A burst of noise from the stands to encourage the Hexham Borough players"},{minute:45,type:GENERIC,description:"Some activity on the Hexham Borough bench as Wallace starts warming up"},{minute:61,type:GENERIC,description:"A cheer from the Melton fans as a rude inflatable is thrown on the pitch"},{minute:66,type:INJURY,description:"The physio comes on to see to Diaz (Hexham Borough)"},{minute:71,type:GENERIC,description:"Meaty Melton defender Williams heads the ball clear"},{minute:87,type:GENERIC,description:"Melton Striker James is caught offside"}]}},{has_run:true,home_name:"Alsager Town",week:3,away_name:"Chapel Olympic",result:{home_goals:[{time:41,scorer_id:"Toby Khambaita"}],first_half_length:47,second_half_length:51,gate:180,away_goals:[{time:70,scorer_id:"Anthony Lee"},{time:19,scorer_id:"Iwan Bennett"}],match_events:[{minute:31,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:32,type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:32,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:39,type:GENERIC,description:"Striker Khambaita is brought down by the big centre half, but the ref waves it away"},{minute:42,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:45,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:45,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:55,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Hicks some instructions"},{minute:56,type:GENERIC,description:"Chapel Olympic sub Hicks seems to be tucking into a pie!"},{minute:71,type:GENERIC,description:"Burly Chapel Olympic defender Patel cuts out the attack with a mean sliding tackle"},{minute:78,type:GENERIC,description:"Alsager Town's fans are singing a rude song about Jonathan Henderson"},{minute:81,type:GENERIC,description:"The ref is talking to Hill (Alsager Town) after a vicious tackle"},{minute:90,type:GENERIC,description:"Alsager Town sub Howard seems to be tucking into a pie!"},{minute:91,type:GENERIC,description:"Burly Chapel Olympic defender Shaw cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:Wroxeter,week:3,away_name:"Saffron Olympic",result:{home_goals:[{time:23,scorer_id:"Morgan Flores"}],first_half_length:49,second_half_length:46,gate:90,away_goals:[],match_events:[{type:GENERIC,description:"Defender Bailey (Wroxeter) hoofs the ball upfield"},{minute:2,type:GENERIC,description:"Meaty Saffron Olympic defender Hunt heads the ball clear"},{minute:6,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Mills some instructions"},{minute:11,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:21,type:GENERIC,description:"Saffron Olympic's Hunt jogs up the channel"},{minute:30,type:GENERIC,description:"Burly Wroxeter defender Jackson cuts out the attack with a mean sliding tackle"},{minute:31,type:GENERIC,description:"Defender Wilson (Wroxeter) hoofs the ball upfield"},{minute:48,type:YELLOWCARD,description:"Yellow card for Happer (Saffron Olympic)"},{minute:51,type:GENERIC,description:"Burly Saffron Olympic defender Jackson cuts out the attack with a mean sliding tackle"},{minute:54,type:GENERIC,description:"Defender Wilson (Wroxeter) clears the ball for a throw-in"},{minute:65,type:GENERIC,description:"Saffron Olympic manager Kai Gomez seems to be giving sub Mitchell some instructions"},{minute:71,type:GENERIC,description:"Wroxeter's Wood jogs up the channel"},{minute:72,type:INJURY,description:"Shaw (Saffron Olympic) has broken his nose but is playing on"},{minute:84,type:GENERIC,description:"Burly Wroxeter defender Wood cuts out the attack with a mean sliding tackle"},{minute:84,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:92,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"}]}},{has_run:true,home_name:"Hadleigh Albion",week:4,away_name:Horsforth,result:{home_goals:[],first_half_length:48,second_half_length:46,gate:119,away_goals:[],match_events:[{minute:10,type:GENERIC,description:"Meaty Horsforth defender Nelson heads the ball clear"},{minute:15,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:16,type:GENERIC,description:"A cheer from the Hadleigh Albion fans as a rude inflatable is thrown on the pitch"},{minute:32,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"},{minute:36,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"},{minute:49,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:56,type:GENERIC,description:"Hadleigh Albion Striker Mc Cart is caught offside"},{minute:70,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:71,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Alvarez some instructions"},{minute:86,type:GENERIC,description:"The ref is talking to Meath (Hadleigh Albion) after a vicious tackle"},{minute:93,type:GENERIC,description:"Striker Witte is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:"Shirdley Hill",week:4,away_name:Burscough,result:{home_goals:[{time:57,scorer_id:"Callum Ellis"},{time:83,scorer_id:"Jayden Gonzales"}],first_half_length:52,second_half_length:47,gate:255,away_goals:[{time:25,scorer_id:"Jake Sanders"}],match_events:[{minute:3,type:INJURY,description:"Sanders (Burscough) has broken his nose but is playing on"},{minute:10,type:YELLOWCARD,description:"Yellow card for Bailey (Burscough)"},{minute:24,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Khambaita starts warming up"},{minute:25,type:GENERIC,description:"Simmons (Burscough) given a lecture by the ref"},{minute:34,type:GENERIC,description:"Defender Marshall (Burscough) hoofs the ball upfield"},{minute:41,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:62,type:INJURY,description:"Lopez (Shirdley Hill) has broken his nose but is playing on"},{minute:62,type:GENERIC,description:"Burscough's Simmons jogs up the channel"},{minute:71,type:GENERIC,description:"Shirdley Hill's Reyes jogs up the channel"},{minute:88,type:GENERIC,description:"Lopez (Shirdley Hill) seems to be getting a stern warning from the ref"},{minute:92,type:INJURY,description:"The physio comes on to see to Ferguson (Shirdley Hill)"}]}},{has_run:true,home_name:"Cross Heath",week:4,away_name:Melton,result:{home_goals:[{time:4,scorer_id:"Matthew Flores"},{time:30,scorer_id:"Jude Daniels"},{time:59,scorer_id:"Elijah Clark"},{time:63,scorer_id:"Cole Cox"},{time:34,scorer_id:"Gethin Ferguson"}],first_half_length:49,second_half_length:46,gate:188,away_goals:[{time:54,scorer_id:"Owain Williams"}],match_events:[{minute:24,type:INJURY,description:"Dixon (Melton) writhes on the floor after tripping over the ball"},{minute:28,type:GENERIC,description:"Meaty Cross Heath defender Gonzales heads the ball clear"},{minute:31,type:GENERIC,description:"Some activity on the Melton bench as Vasquez starts warming up"},{minute:44,type:GENERIC,description:"Some activity on the Cross Heath bench as Cabrera starts warming up"},{minute:51,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:57,type:GENERIC,description:"Freeman (Melton) given a lecture by the ref"},{minute:58,type:GENERIC,description:"Burly Cross Heath defender Gonzales cuts out the attack with a mean sliding tackle"},{minute:59,type:GENERIC,description:"A long ball from Melton but James can't quite get to it"},{minute:59,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:83,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:85,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:88,type:GENERIC,description:"Defender Gonzales (Cross Heath) clears the ball for a throw-in"},{minute:93,type:GENERIC,description:"Griffin (Melton) given a lecture by the ref"}]}},{has_run:true,home_name:"Wheatley Harriers",week:4,away_name:"Alsager Town",result:{home_goals:[],first_half_length:49,second_half_length:50,gate:288,away_goals:[],match_events:[{minute:3,type:INJURY,description:"Bennett (Wheatley Harriers) has broken his nose but is playing on"},{minute:5,type:GENERIC,description:"A long ball from Wheatley Harriers but Stone can't quite get to it"},{minute:14,type:INJURY,description:"Schmidt (Alsager Town) seems to be limping slightly"},{minute:39,type:GENERIC,description:"Striker Khambaita is brought down by the big centre half, but the ref waves it away"},{minute:40,type:GENERIC,description:"Alsager Town's Butler jogs up the channel"},{minute:54,type:INJURY,description:"Turner (Alsager Town) is calling for the physio"},{minute:63,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:65,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:71,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:72,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:75,type:GENERIC,description:"Wood (Wheatley Harriers) given a lecture by the ref"},{minute:86,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Gelson starts warming up"},{minute:91,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:"Hexham Borough",week:4,away_name:Wroxeter,result:{home_goals:[{time:57,scorer_id:"Lewis Diaz"},{time:46,scorer_id:"Oliver Cole"},{time:17,scorer_id:"Lewis Diaz"},{time:14,scorer_id:"Lewis Diaz"},{time:42,scorer_id:"Lewis Diaz"},{time:62,scorer_id:"Leon Perez"}],first_half_length:50,second_half_length:48,gate:268,away_goals:[],match_events:[{minute:24,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Wallace some instructions"},{minute:25,type:INJURY,description:"Selvaratnam (Wroxeter) has broken his nose but is playing on"},{minute:40,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:42,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:48,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:61,type:GENERIC,description:"Some activity on the Hexham Borough bench as Richardson starts warming up"},{minute:77,type:GENERIC,description:"The Wroxeter fans are chanting Jayden Martin's name"},{minute:77,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:80,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:80,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:83,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"}]}},{has_run:true,home_name:"Chapel Olympic",week:4,away_name:"Saffron Olympic",result:{home_goals:[{time:67,scorer_id:"Iwan Bennett"}],first_half_length:48,second_half_length:46,gate:235,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Burly Chapel Olympic defender Patel cuts out the attack with a mean sliding tackle"},{minute:4,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:8,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:11,type:GENERIC,description:"The Saffron Olympic manager points angrily at keeper Happer"},{minute:11,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Bailey starts warming up"},{minute:17,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:21,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:24,type:GENERIC,description:"Defender Shaw (Chapel Olympic) hoofs the ball upfield"},{minute:24,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"},{minute:57,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:70,type:GENERIC,description:"Saffron Olympic's fans are singing a rude song about Kai Gomez"},{minute:80,type:GENERIC,description:"Chapel Olympic's fans are singing a rude song about Reece Robertson"},{minute:90,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"}]}},{has_run:true,home_name:Horsforth,week:5,away_name:Burscough,result:{home_goals:[{time:51,scorer_id:"Owain Witte"},{time:51,scorer_id:"Matthew Allen"}],first_half_length:50,second_half_length:48,gate:206,away_goals:[{time:39,scorer_id:"Ollie Howard"},{time:95,scorer_id:"Jake Sanders"}],match_events:[{type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:4,type:GENERIC,description:"Horsforth sub Alvarez seems to be tucking into a pie!"},{minute:18,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Mills some instructions"},{minute:21,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:28,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:39,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:43,type:INJURY,description:"White (Burscough) has broken his nose but is playing on"},{minute:57,type:GENERIC,description:"The ref is talking to Sanders (Burscough) after a vicious tackle"},{minute:63,type:GENERIC,description:"Striker Medina is brought down by the big centre half, but the ref waves it away"},{minute:76,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:79,type:GENERIC,description:"The ref is talking to Nguyen (Burscough) after a vicious tackle"},{minute:81,type:GENERIC,description:"Burscough's manager Louis Hansen is holding his head in frustration"},{minute:83,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Meath some instructions"},{minute:88,type:GENERIC,description:"Striker Sanders is brought down by the big centre half, but the ref waves it away"},{minute:97,type:INJURY,description:"Gonzales (Horsforth) is calling for the physio"}]}},{has_run:true,home_name:Melton,week:5,away_name:"Hadleigh Albion",result:{home_goals:[],first_half_length:46,second_half_length:51,gate:207,away_goals:[],match_events:[{minute:1,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:8,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Woods starts warming up"},{minute:19,type:GENERIC,description:"Melton sub Hernandez seems to be tucking into a pie!"},{minute:28,type:GENERIC,description:"The ref is talking to Gordon (Hadleigh Albion) after a vicious tackle"},{minute:30,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:37,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:72,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:77,type:GENERIC,description:"Burly Melton defender Upadhyad cuts out the attack with a mean sliding tackle"},{minute:82,type:GENERIC,description:"Hadleigh Albion sub James seems to be tucking into a pie!"},{minute:82,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:93,type:GENERIC,description:"Griffin (Melton) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:"Alsager Town",week:5,away_name:"Shirdley Hill",result:{home_goals:[],first_half_length:49,second_half_length:52,gate:170,away_goals:[{time:39,scorer_id:"Luca Ferguson"}],match_events:[{type:GENERIC,description:"Defender Hill (Alsager Town) hoofs the ball upfield"},{minute:2,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Harrison some instructions"},{minute:5,type:GENERIC,description:"Defender Young (Alsager Town) hoofs the ball upfield"},{minute:13,type:GENERIC,description:"Striker Schmidt is brought down by the big centre half, but the ref waves it away"},{minute:33,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"},{minute:33,type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:41,type:GENERIC,description:"Ellis (Shirdley Hill) given a lecture by the ref"},{minute:49,type:GENERIC,description:"Meaty Shirdley Hill defender Reyes heads the ball clear"},{minute:55,type:GENERIC,description:"Defender Reyes (Shirdley Hill) clears the ball for a throw-in"},{minute:66,type:GENERIC,description:"Meaty Shirdley Hill defender Martinez heads the ball clear"},{minute:81,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:81,type:GENERIC,description:"Alsager Town's Hill jogs up the channel"},{minute:83,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:90,type:GENERIC,description:"Burly Shirdley Hill defender Myers cuts out the attack with a mean sliding tackle"},{minute:90,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:92,type:GENERIC,description:"Martinez (Shirdley Hill) given a lecture by the ref"}]}},{has_run:true,home_name:Wroxeter,week:5,away_name:"Cross Heath",result:{home_goals:[],first_half_length:49,second_half_length:48,gate:190,away_goals:[],match_events:[{minute:5,type:GENERIC,description:"Wood (Wroxeter) given a lecture by the ref"},{minute:5,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:10,type:GENERIC,description:"A burst of noise from the stands to encourage the Wroxeter players"},{minute:10,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:31,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:51,type:GENERIC,description:"A burst of noise from the stands to encourage the Wroxeter players"},{minute:60,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:63,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:64,type:GENERIC,description:"Some activity on the Cross Heath bench as Cabrera starts warming up"},{minute:65,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:72,type:GENERIC,description:"The travelling Cross Heath supporters are shouting abuse at the home fans"},{minute:81,type:YELLOWCARD,description:"Yellow card for Selvaratnam (Wroxeter)"},{minute:91,type:GENERIC,description:"Meaty Cross Heath defender Gonzales heads the ball clear"},{minute:93,type:GENERIC,description:"Cross Heath's Moore jogs up the channel"}]}},{has_run:true,home_name:"Saffron Olympic",week:5,away_name:"Wheatley Harriers",result:{home_goals:[{time:44,scorer_id:"Cameron Shaw"},{time:93,scorer_id:"Louis Turner"}],first_half_length:52,second_half_length:47,gate:189,away_goals:[{time:3,scorer_id:"Maxwell Hoffman"},{time:70,scorer_id:"Jacob Stone"},{time:23,scorer_id:"Finn Gordon"}],match_events:[{minute:8,type:GENERIC,description:"Hernandez (Saffron Olympic) given a lecture by the ref"},{minute:8,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:23,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:27,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Chaisty starts warming up"},{minute:46,type:GENERIC,description:"Saffron Olympic's fans are singing a rude song about Kai Gomez"},{minute:50,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:65,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:75,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is holding his head in frustration"},{minute:82,type:GENERIC,description:"Turner (Saffron Olympic) given a lecture by the ref"},{minute:88,type:GENERIC,description:"Wheatley Harriers Striker Gordon is caught offside"},{minute:91,type:GENERIC,description:"Thompson (Saffron Olympic) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:"Chapel Olympic",week:5,away_name:"Hexham Borough",result:{home_goals:[{time:91,scorer_id:"Cody Mcquillen"},{time:73,scorer_id:"Anthony Lee"}],first_half_length:49,second_half_length:51,gate:161,away_goals:[],match_events:[{minute:4,type:GENERIC,description:"Some activity on the Hexham Borough bench as Wallace starts warming up"},{minute:42,type:GENERIC,description:"Hexham Borough's Huth jogs up the channel"},{minute:42,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"},{minute:44,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:48,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"},{minute:48,type:YELLOWCARD,description:"Yellow card for Brown (Chapel Olympic)"},{minute:51,type:GENERIC,description:"The travelling Hexham Borough supporters are shouting abuse at the home fans"},{minute:55,type:INJURY,description:"Murphy (Hexham Borough) writhes on the floor after tripping over the ball"},{minute:57,type:GENERIC,description:"Striker Bennett is brought down by the big centre half, but the ref waves it away"},{minute:79,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:80,type:GENERIC,description:"Hexham Borough's Sanchez jogs up the channel"},{minute:92,type:GENERIC,description:"Striker Cole is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:Melton,week:6,away_name:Horsforth,result:{home_goals:[],first_half_length:49,second_half_length:51,gate:186,away_goals:[{time:31,scorer_id:"Owain Witte"},{time:52,scorer_id:"Matthew Allen"}],match_events:[{minute:3,type:INJURY,description:"Dixon (Melton) goes down after colliding with the opposing defender"},{minute:13,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"},{minute:31,type:YELLOWCARD,description:"Yellow card for Washington (Horsforth)"},{minute:40,type:GENERIC,description:"Horsforth Striker Burns is caught offside"},{minute:52,type:YELLOWCARD,description:"Yellow card for Dixon (Melton)"},{minute:77,type:GENERIC,description:"Melton Striker Dixon is caught offside"},{minute:77,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:79,type:GENERIC,description:"Some activity on the Melton bench as Murphy starts warming up"},{minute:79,type:INJURY,description:"Richardson (Melton) seems to be limping slightly"},{minute:95,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"}]}},{has_run:true,home_name:Burscough,week:6,away_name:"Alsager Town",result:{home_goals:[{time:18,scorer_id:"Jake Sanders"},{time:66,scorer_id:"Anthony Nguyen"},{time:88,scorer_id:"Ethan Simmons"}],first_half_length:46,second_half_length:46,gate:175,away_goals:[{scorer_id:"Toby Khambaita"}],match_events:[{minute:1,type:GENERIC,description:"The travelling Alsager Town supporters are shouting abuse at the home fans"},{minute:3,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:7,type:YELLOWCARD,description:"Yellow card for Wright (Alsager Town)"},{minute:8,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:47,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:48,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:52,type:INJURY,description:"Howard (Burscough) seems to be limping slightly"},{minute:56,type:INJURY,description:"Schmidt (Alsager Town) goes down after colliding with the opposing defender"},{minute:57,type:GENERIC,description:"Defender Lowsley (Burscough) clears the ball for a throw-in"},{minute:60,type:GENERIC,description:"Flores (Burscough) seems to be getting a stern warning from the ref"},{minute:62,type:GENERIC,description:"Lowsley (Burscough) seems to be getting a stern warning from the ref"},{minute:69,type:GENERIC,description:"The ref is talking to Nguyen (Burscough) after a vicious tackle"},{minute:89,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"}]}},{has_run:true,home_name:"Hadleigh Albion",week:6,away_name:Wroxeter,result:{home_goals:[{time:91,scorer_id:"Leon Gordon"}],first_half_length:49,second_half_length:46,gate:210,away_goals:[{time:80,scorer_id:"Joseph Perdue"}],match_events:[{minute:1,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as James starts warming up"},{minute:2,type:GENERIC,description:"A long ball from Wroxeter but Flores can't quite get to it"},{minute:15,type:GENERIC,description:"Meaty Hadleigh Albion defender Bungard heads the ball clear"},{minute:21,type:GENERIC,description:"A long ball from Wroxeter but Flores can't quite get to it"},{minute:31,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:34,type:GENERIC,description:"Some activity on the Wroxeter bench as Baker starts warming up"},{minute:40,type:YELLOWCARD,description:"Yellow card for Palmer (Hadleigh Albion)"},{minute:43,type:GENERIC,description:"The ref is talking to Jones (Hadleigh Albion) after a vicious tackle"},{minute:46,type:GENERIC,description:"A cheer from the Hadleigh Albion fans as a rude inflatable is thrown on the pitch"},{minute:63,type:INJURY,description:"Bungard (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:63,type:GENERIC,description:"Selvaratnam (Wroxeter) given a lecture by the ref"},{minute:70,type:GENERIC,description:"Hadleigh Albion sub Marshall seems to be tucking into a pie!"},{minute:91,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub Woods some instructions"}]}},{has_run:true,home_name:"Shirdley Hill",week:6,away_name:"Saffron Olympic",result:{home_goals:[{time:91,scorer_id:"Jayden Gonzales"}],first_half_length:49,second_half_length:48,gate:145,away_goals:[{time:9,scorer_id:"Louis Turner"},{time:91,scorer_id:"Louis Turner"},{time:66,scorer_id:"Harry Flores"}],match_events:[{minute:16,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:20,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Hawa some instructions"},{minute:28,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:28,type:GENERIC,description:"Saffron Olympic's Hunt jogs up the channel"},{minute:29,type:GENERIC,description:"Saffron Olympic's fans are singing a rude song about Kai Gomez"},{minute:56,type:GENERIC,description:"Meaty Shirdley Hill defender Reyes heads the ball clear"},{minute:58,type:GENERIC,description:"Meaty Shirdley Hill defender Myers heads the ball clear"},{minute:62,type:INJURY,description:"The physio comes on to see to Jackson (Saffron Olympic)"},{minute:78,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:88,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:89,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"}]}},{has_run:true,home_name:"Cross Heath",week:6,away_name:"Chapel Olympic",result:{home_goals:[{time:65,scorer_id:"Elijah Clark"}],first_half_length:52,second_half_length:49,gate:205,away_goals:[{time:17,scorer_id:"Anthony Lee"}],match_events:[{minute:34,type:GENERIC,description:"A long ball from Cross Heath but Clark can't quite get to it"},{minute:34,type:GENERIC,description:"Meaty Chapel Olympic defender Patel heads the ball clear"},{minute:39,type:GENERIC,description:"Pierce (Cross Heath) given a lecture by the ref"},{minute:46,type:GENERIC,description:"The ref is talking to Pierce (Chapel Olympic) after a vicious tackle"},{minute:52,type:GENERIC,description:"Burly Cross Heath defender Flores cuts out the attack with a mean sliding tackle"},{minute:61,type:GENERIC,description:"Burly Chapel Olympic defender Patel cuts out the attack with a mean sliding tackle"},{minute:61,type:GENERIC,description:"Defender Gonzales (Cross Heath) clears the ball for a throw-in"},{minute:76,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:83,type:GENERIC,description:"Cross Heath sub Virji seems to be tucking into a pie!"},{minute:92,type:GENERIC,description:"Defender Domville (Chapel Olympic) hoofs the ball upfield"},{minute:96,type:GENERIC,description:"Meaty Cross Heath defender Moore heads the ball clear"}]}},{has_run:true,home_name:"Wheatley Harriers",week:6,away_name:"Hexham Borough",result:{home_goals:[{time:32,scorer_id:"Jacob Stone"},{time:30,scorer_id:"Ryan Bennett"},{time:80,scorer_id:"Tomos Wood"},{time:22,scorer_id:"Tommy Rice"},{time:3,scorer_id:"Jacob Stone"},{time:85,scorer_id:"Maxwell Hoffman"}],first_half_length:52,second_half_length:46,gate:273,away_goals:[],match_events:[{minute:1,type:INJURY,description:"Meath (Hexham Borough) is calling for the physio"},{minute:20,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:38,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:40,type:GENERIC,description:"Some activity on the Hexham Borough bench as Richardson starts warming up"},{minute:48,type:GENERIC,description:"Wheatley Harriers's fans are singing a rude song about Toby Cabrera"},{minute:60,type:GENERIC,description:"Burly Hexham Borough defender Ruiz cuts out the attack with a mean sliding tackle"},{minute:64,type:INJURY,description:"Meath (Hexham Borough) goes down after colliding with the opposing defender"},{minute:65,type:INJURY,description:"Murphy (Hexham Borough) has broken his nose but is playing on"},{minute:66,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) hoofs the ball upfield"},{minute:79,type:YELLOWCARD,description:"Yellow card for Murphy (Hexham Borough)"},{minute:83,type:GENERIC,description:"Some activity on the Hexham Borough bench as Foster starts warming up"},{minute:94,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"}]}},{has_run:true,home_name:Horsforth,week:7,away_name:"Alsager Town",result:{home_goals:[{time:57,scorer_id:"Owain Witte"}],first_half_length:51,second_half_length:47,gate:246,away_goals:[{time:50,scorer_id:"Toby Khambaita"},{time:14,scorer_id:"Owain Howard"},{time:42,scorer_id:"Gabriel Wright"}],match_events:[{minute:13,type:GENERIC,description:"Horsforth's Nelson jogs up the channel"},{minute:18,type:GENERIC,description:"Horsforth's Washington jogs up the channel"},{minute:20,type:GENERIC,description:"Alsager Town sub Davis seems to be tucking into a pie!"},{minute:33,type:GENERIC,description:"Horsforth's Pierce jogs up the channel"},{minute:38,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"},{minute:41,type:GENERIC,description:"Some activity on the Horsforth bench as Bailey starts warming up"},{minute:45,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"},{minute:62,type:GENERIC,description:"The ref is talking to Khambaita (Alsager Town) after a vicious tackle"},{minute:65,type:INJURY,description:"Khambaita (Alsager Town) has broken his nose but is playing on"},{minute:69,type:GENERIC,description:"Burly Alsager Town defender Hill cuts out the attack with a mean sliding tackle"},{minute:74,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:76,type:INJURY,description:"Butler (Alsager Town) goes down after colliding with the opposing defender"},{minute:77,type:INJURY,description:"Witte (Horsforth) writhes on the floor after tripping over the ball"},{minute:79,type:GENERIC,description:"Alsager Town's Butler jogs up the channel"},{minute:80,type:GENERIC,description:"Cole (Horsforth) given a lecture by the ref"},{minute:97,type:GENERIC,description:"Some activity on the Horsforth bench as Romero starts warming up"}]}},{has_run:true,home_name:Wroxeter,week:7,away_name:Melton,result:{home_goals:[],first_half_length:47,second_half_length:47,gate:135,away_goals:[],match_events:[{minute:1,type:GENERIC,description:"Some activity on the Melton bench as Vasquez starts warming up"},{minute:5,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:19,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:36,type:GENERIC,description:"Melton's fans are singing a rude song about Gabriel Kennedy"},{minute:41,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:42,type:INJURY,description:"Upadhyad (Melton) is calling for the physio"},{minute:61,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Turner some instructions"},{minute:70,type:GENERIC,description:"Wroxeter sub Shelsher seems to be tucking into a pie!"},{minute:71,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Hawkins some instructions"},{minute:81,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:92,type:GENERIC,description:"Striker Selvaratnam is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:"Saffron Olympic",week:7,away_name:Burscough,result:{home_goals:[{time:83,scorer_id:"Harry Flores"},{time:30,scorer_id:"Louis Turner"}],first_half_length:49,second_half_length:46,gate:119,away_goals:[],match_events:[{minute:1,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:12,type:GENERIC,description:"Some activity on the Burscough bench as Peters starts warming up"},{minute:13,type:GENERIC,description:"The ref is talking to Flores (Burscough) after a vicious tackle"},{minute:15,type:GENERIC,description:"Striker Medina is brought down by the big centre half, but the ref waves it away"},{minute:19,type:YELLOWCARD,description:"Yellow card for Sanders (Burscough)"},{minute:31,type:GENERIC,description:"Burscough's manager Louis Hansen is holding his head in frustration"},{minute:31,type:GENERIC,description:"Burscough's manager Louis Hansen is furious with the referee"},{minute:32,type:GENERIC,description:"Some activity on the Burscough bench as Huth starts warming up"},{minute:34,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Daniels starts warming up"},{minute:45,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:58,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"}]}},{has_run:true,home_name:"Chapel Olympic",week:7,away_name:"Hadleigh Albion",result:{home_goals:[{time:28,scorer_id:"Kai Brown"},{time:51,scorer_id:"Sebastian Campbell"},{time:10,scorer_id:"Anthony Lee"},{time:11,scorer_id:"Cody Mcquillen"}],first_half_length:49,second_half_length:52,gate:170,away_goals:[{time:45,scorer_id:"Cole Mitchell"}],match_events:[{minute:34,type:GENERIC,description:"Defender Domville (Chapel Olympic) clears the ball for a throw-in"},{minute:42,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:43,type:GENERIC,description:"Hadleigh Albion Striker Gordon is caught offside"},{minute:58,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:72,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"},{minute:76,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:77,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:77,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Woods starts warming up"},{minute:85,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"},{minute:91,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:92,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:"Hexham Borough",week:7,away_name:"Shirdley Hill",result:{home_goals:[],first_half_length:51,second_half_length:49,gate:213,away_goals:[],match_events:[{minute:10,type:GENERIC,description:"Hexham Borough Striker Diaz is caught offside"},{minute:17,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:19,type:GENERIC,description:"Striker Cole is brought down by the big centre half, but the ref waves it away"},{minute:22,type:GENERIC,description:"Shirdley Hill's fans are singing a rude song about Kian Gonzalez"},{minute:29,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:29,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:39,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"},{minute:43,type:GENERIC,description:"Hexham Borough's Ruiz jogs up the channel"},{minute:48,type:INJURY,description:"The physio comes on to see to Gonzales (Shirdley Hill)"},{minute:50,type:GENERIC,description:"Burly Shirdley Hill defender Lopez cuts out the attack with a mean sliding tackle"},{minute:57,type:GENERIC,description:"Defender Reyes (Shirdley Hill) clears the ball for a throw-in"},{minute:60,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:60,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:77,type:INJURY,description:"Lopez (Shirdley Hill) goes down after colliding with the opposing defender"},{minute:92,type:GENERIC,description:"Meaty Shirdley Hill defender Myers heads the ball clear"}]}},{has_run:true,home_name:"Wheatley Harriers",week:7,away_name:"Cross Heath",result:{home_goals:[{time:39,scorer_id:"Maxwell Hoffman"},{time:81,scorer_id:"Maxwell Hoffman"}],first_half_length:52,second_half_length:51,gate:247,away_goals:[],match_events:[{minute:4,type:GENERIC,description:"Cross Heath Striker Clark is caught offside"},{minute:23,type:GENERIC,description:"Burly Cross Heath defender Daniels cuts out the attack with a mean sliding tackle"},{minute:29,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:53,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:62,type:INJURY,description:"Gordon (Wheatley Harriers) goes down after colliding with the opposing defender"},{minute:64,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:67,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:80,type:GENERIC,description:"Wheatley Harriers manager Toby Cabrera seems to be giving sub Kinlan some instructions"},{minute:80,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is holding his head in frustration"},{minute:82,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:84,type:GENERIC,description:"Burly Wheatley Harriers defender Gardner cuts out the attack with a mean sliding tackle"},{minute:99,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:Wroxeter,week:8,away_name:Horsforth,result:{home_goals:[{time:83,scorer_id:"Morgan Flores"},{time:23,scorer_id:"Harley Woods"}],first_half_length:52,second_half_length:49,gate:217,away_goals:[{time:72,scorer_id:"Nathan Burns"},{time:76,scorer_id:"Owain Witte"}],match_events:[{minute:1,type:GENERIC,description:"The ref is talking to Edwards (Horsforth) after a vicious tackle"},{minute:3,type:GENERIC,description:"Horsforth's Nelson jogs up the channel"},{minute:19,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:26,type:GENERIC,description:"Horsforth's manager Dexter Butler is holding his head in frustration"},{minute:28,type:GENERIC,description:"Some activity on the Wroxeter bench as Turner starts warming up"},{minute:41,type:GENERIC,description:"Cole (Horsforth) seems to be getting a stern warning from the ref"},{minute:43,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:49,type:INJURY,description:"Shelsher (Wroxeter) has broken his nose but is playing on"},{minute:77,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:84,type:GENERIC,description:"Some activity on the Horsforth bench as Bailey starts warming up"},{minute:91,type:GENERIC,description:"Horsforth sub Nichols seems to be tucking into a pie!"}]}},{has_run:true,home_name:"Alsager Town",week:8,away_name:"Saffron Olympic",result:{home_goals:[{time:4,scorer_id:"Toby Khambaita"},{time:90,scorer_id:"Andrew West"}],first_half_length:49,second_half_length:47,gate:115,away_goals:[{time:33,scorer_id:"Harry Flores"},{time:35,scorer_id:"Cameron Shaw"}],match_events:[{type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:9,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:10,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:28,type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:28,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:34,type:GENERIC,description:"Defender Carter (Saffron Olympic) clears the ball for a throw-in"},{minute:34,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:42,type:GENERIC,description:"Defender Jackson (Saffron Olympic) clears the ball for a throw-in"},{minute:43,type:GENERIC,description:"The ref is talking to Green (Alsager Town) after a vicious tackle"},{minute:48,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:66,type:GENERIC,description:"Alsager Town's Butler jogs up the channel"},{minute:69,type:GENERIC,description:"Some activity on the Alsager Town bench as Howard starts warming up"},{minute:72,type:INJURY,description:"The physio comes on to see to Southway (Saffron Olympic)"},{minute:78,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"}]}},{has_run:true,home_name:Melton,week:8,away_name:"Chapel Olympic",result:{home_goals:[{time:79,scorer_id:"Jude Wallace"},{time:71,scorer_id:"Isaac James"},{time:8,scorer_id:"Jude Wallace"}],first_half_length:51,second_half_length:50,gate:172,away_goals:[{time:6,scorer_id:"Tommy Patel"},{time:76,scorer_id:"Ellis Domville"},{time:15,scorer_id:"Anthony Lee"}],match_events:[{type:GENERIC,description:"Melton's Upadhyad jogs up the channel"},{minute:3,type:INJURY,description:"Griffin (Melton) goes down after colliding with the opposing defender"},{minute:19,type:YELLOWCARD,description:"Yellow card for Williams (Melton)"},{minute:28,type:GENERIC,description:"The Chapel Olympic fans are chanting Reece Robertson's name"},{minute:32,type:YELLOWCARD,description:"Yellow card for Taylor (Melton)"},{minute:62,type:GENERIC,description:"Burly Melton defender Williams cuts out the attack with a mean sliding tackle"},{minute:66,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:68,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:77,type:GENERIC,description:"The ref is talking to Lee (Chapel Olympic) after a vicious tackle"},{minute:81,type:GENERIC,description:"Chapel Olympic sub Fisher seems to be tucking into a pie!"},{minute:100,type:INJURY,description:"Dixon (Melton) writhes on the floor after tripping over the ball"}]}},{has_run:true,home_name:Burscough,week:8,away_name:"Hexham Borough",result:{home_goals:[{time:12,scorer_id:"Harry Bailey"},{time:51,scorer_id:"Dominic Bryant"},{time:43,scorer_id:"Jake Sanders"}],first_half_length:51,second_half_length:51,gate:247,away_goals:[{time:48,scorer_id:"Oliver Cole"}],match_events:[{minute:18,type:GENERIC,description:"Defender Simmons (Burscough) clears the ball for a throw-in"},{minute:20,type:INJURY,description:"The physio comes on to see to Bailey (Burscough)"},{minute:30,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:30,type:INJURY,description:"Weild (Hexham Borough) is calling for the physio"},{minute:35,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:39,type:GENERIC,description:"Hexham Borough Striker Cole is caught offside"},{minute:71,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is furious with the referee"},{minute:79,type:GENERIC,description:"Defender Sanchez (Hexham Borough) hoofs the ball upfield"},{minute:87,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Castillo some instructions"},{minute:95,type:GENERIC,description:"The ref is talking to Weild (Hexham Borough) after a vicious tackle"}]}},{has_run:true,home_name:"Hadleigh Albion",week:8,away_name:"Wheatley Harriers",result:{home_goals:[],first_half_length:52,second_half_length:49,gate:195,away_goals:[{time:40,scorer_id:"Maxwell Hoffman"},{time:41,scorer_id:"Jacob Stone"}],match_events:[{minute:3,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:5,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:51,type:INJURY,description:"The physio comes on to see to Hoffman (Wheatley Harriers)"},{minute:54,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:55,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Marshall starts warming up"},{minute:61,type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"},{minute:73,type:GENERIC,description:"A long ball from Hadleigh Albion but Mc Cart can't quite get to it"},{minute:77,type:GENERIC,description:"Burly Wheatley Harriers defender Dissanayake cuts out the attack with a mean sliding tackle"},{minute:78,type:GENERIC,description:"Wheatley Harriers's fans are singing a rude song about Toby Cabrera"},{minute:83,type:GENERIC,description:"The ref is talking to Palmer (Hadleigh Albion) after a vicious tackle"},{minute:86,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Marshall starts warming up"}]}},{has_run:true,home_name:"Shirdley Hill",week:8,away_name:"Cross Heath",result:{home_goals:[],first_half_length:49,second_half_length:46,gate:227,away_goals:[],match_events:[{minute:5,type:GENERIC,description:"A cheer from the Shirdley Hill fans as a rude inflatable is thrown on the pitch"},{minute:9,type:GENERIC,description:"Some activity on the Cross Heath bench as Virji starts warming up"},{minute:15,type:GENERIC,description:"A long ball from Shirdley Hill but Gonzales can't quite get to it"},{minute:19,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:21,type:GENERIC,description:"A long ball from Cross Heath but Clark can't quite get to it"},{minute:23,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:29,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:32,type:GENERIC,description:"Shirdley Hill's Lopez jogs up the channel"},{minute:60,type:INJURY,description:"Flores (Cross Heath) goes down after colliding with the opposing defender"},{minute:64,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:85,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:89,type:YELLOWCARD,description:"Yellow card for Henry (Shirdley Hill)"}]}},{has_run:true,home_name:Horsforth,week:9,away_name:"Saffron Olympic",result:{home_goals:[{time:5,scorer_id:"Lucas Edwards"},{time:71,scorer_id:"Nathan Burns"}],first_half_length:49,second_half_length:50,gate:179,away_goals:[],match_events:[{minute:13,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:18,type:GENERIC,description:"Horsforth sub Mills seems to be tucking into a pie!"},{minute:43,type:GENERIC,description:"A long ball from Saffron Olympic but Turner can't quite get to it"},{minute:53,type:GENERIC,description:"Saffron Olympic are on the counter-attack"},{minute:62,type:GENERIC,description:"The ref is talking to Flores (Saffron Olympic) after a vicious tackle"},{minute:62,type:GENERIC,description:"Defender Cole (Horsforth) clears the ball for a throw-in"},{minute:63,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:69,type:GENERIC,description:"Some activity on the Horsforth bench as Alvarez starts warming up"},{minute:73,type:GENERIC,description:"Horsforth's manager Dexter Butler is holding his head in frustration"},{minute:74,type:GENERIC,description:"Defender Nelson (Horsforth) hoofs the ball upfield"},{minute:76,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:91,type:GENERIC,description:"A long ball from Horsforth but Witte can't quite get to it"},{minute:94,type:GENERIC,description:"Burly Saffron Olympic defender Jackson cuts out the attack with a mean sliding tackle"},{minute:98,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"}]}},{has_run:true,home_name:"Chapel Olympic",week:9,away_name:Wroxeter,result:{home_goals:[{time:74,scorer_id:"Cody Mcquillen"},{time:67,scorer_id:"Cody Mcquillen"},{time:37,scorer_id:"Iwan Bennett"},{time:33,scorer_id:"Cody Mcquillen"},{time:73,scorer_id:"Ellis Domville"}],first_half_length:50,second_half_length:49,gate:211,away_goals:[{time:18,scorer_id:"Joseph Perdue"},{time:72,scorer_id:"Harrison Jackson"},{time:63,scorer_id:"Matthew Mcquillen"}],match_events:[{minute:13,type:INJURY,description:"Patel (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:17,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hoffman starts warming up"},{minute:23,type:INJURY,description:"Shaw (Chapel Olympic) has broken his nose but is playing on"},{minute:48,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:59,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"},{minute:60,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:63,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:66,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"},{minute:68,type:INJURY,description:"Bennett (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:88,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:89,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Mills some instructions"},{minute:90,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:91,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hoffman starts warming up"}]}},{has_run:true,home_name:"Hexham Borough",week:9,away_name:"Alsager Town",result:{home_goals:[],first_half_length:52,second_half_length:50,gate:319,away_goals:[],match_events:[{minute:4,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:23,type:INJURY,description:"West (Alsager Town) goes down after colliding with the opposing defender"},{minute:30,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:32,type:GENERIC,description:"Some activity on the Hexham Borough bench as Castillo starts warming up"},{minute:40,type:GENERIC,description:"Some activity on the Alsager Town bench as Howard starts warming up"},{minute:48,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:69,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:96,type:GENERIC,description:"Defender Huth (Hexham Borough) clears the ball for a throw-in"},{minute:98,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Wallace some instructions"},{minute:99,type:GENERIC,description:"Burly Alsager Town defender Young cuts out the attack with a mean sliding tackle"},{minute:101,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"}]}},{has_run:true,home_name:"Wheatley Harriers",week:9,away_name:Melton,result:{home_goals:[],first_half_length:46,second_half_length:51,gate:257,away_goals:[{time:41,scorer_id:"Elliott Dixon"},{time:8,scorer_id:"Owain Williams"}],match_events:[{minute:13,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:29,type:GENERIC,description:"Dixon (Melton) given a lecture by the ref"},{minute:32,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:44,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:49,type:INJURY,description:"The physio comes on to see to Bennett (Wheatley Harriers)"},{minute:60,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:68,type:GENERIC,description:"Burly Wheatley Harriers defender Hamilton cuts out the attack with a mean sliding tackle"},{minute:69,type:INJURY,description:"Dissanayake (Wheatley Harriers) is calling for the physio"},{minute:85,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"},{minute:86,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:90,type:GENERIC,description:"Defender Rogers (Melton) clears the ball for a throw-in"}]}},{has_run:true,home_name:"Cross Heath",week:9,away_name:Burscough,result:{home_goals:[{time:40,scorer_id:"Albert Pierce"},{time:44,scorer_id:"Elijah Clark"},{time:13,scorer_id:"Elijah Clark"}],first_half_length:50,second_half_length:48,gate:160,away_goals:[],match_events:[{minute:2,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:18,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:20,type:GENERIC,description:"Burscough's Howard jogs up the channel"},{minute:21,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:40,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:50,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:51,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:59,type:YELLOWCARD,description:"Yellow card for Clark (Cross Heath)"},{minute:63,type:GENERIC,description:"Defender Simmons (Burscough) clears the ball for a throw-in"},{minute:72,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:81,type:GENERIC,description:"Burscough's manager Louis Hansen is furious with the referee"}]}},{has_run:true,home_name:"Shirdley Hill",week:9,away_name:"Hadleigh Albion",result:{home_goals:[{time:67,scorer_id:"Callum Ellis"},{time:43,scorer_id:"Muhammad Reynolds"}],first_half_length:52,second_half_length:51,gate:198,away_goals:[{time:95,scorer_id:"Morgan Mc Cart"},{time:60,scorer_id:"Morgan Mc Cart"}],match_events:[{type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is furious with the referee"},{minute:7,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Henderson starts warming up"},{minute:33,type:GENERIC,description:"Gordon (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:34,type:INJURY,description:"Mc Cart (Hadleigh Albion) writhes on the floor after tripping over the ball"},{minute:46,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:48,type:GENERIC,description:"Hadleigh Albion Striker Gordon is caught offside"},{minute:60,type:GENERIC,description:"Striker Gonzales is brought down by the big centre half, but the ref waves it away"},{minute:67,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:70,type:GENERIC,description:"Defender Wright (Hadleigh Albion) hoofs the ball upfield"},{minute:72,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:76,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:84,type:GENERIC,description:"Striker Gonzales is brought down by the big centre half, but the ref waves it away"},{minute:99,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub Kennedy some instructions"}]}},{has_run:true,home_name:"Chapel Olympic",week:10,away_name:Horsforth,result:{home_goals:[],first_half_length:49,second_half_length:48,gate:300,away_goals:[{time:15,scorer_id:"Charles Gonzales"}],match_events:[{minute:1,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:3,type:INJURY,description:"The physio comes on to see to Pierce (Horsforth)"},{minute:14,type:YELLOWCARD,description:"Yellow card for Shaw (Chapel Olympic)"},{minute:23,type:GENERIC,description:"Defender Washington (Horsforth) clears the ball for a throw-in"},{minute:35,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:39,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:43,type:GENERIC,description:"Some activity on the Horsforth bench as Nichols starts warming up"},{minute:54,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:76,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:79,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:81,type:INJURY,description:"Gonzales (Horsforth) writhes on the floor after tripping over the ball"},{minute:82,type:INJURY,description:"Domville (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:91,type:GENERIC,description:"A long ball from Horsforth but Witte can't quite get to it"},{minute:91,type:GENERIC,description:"Some activity on the Horsforth bench as Nichols starts warming up"},{minute:95,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:"Saffron Olympic",week:10,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:51,second_half_length:52,gate:282,away_goals:[],match_events:[{minute:8,type:GENERIC,description:"The travelling Hexham Borough supporters are shouting abuse at the home fans"},{minute:14,type:GENERIC,description:"Saffron Olympic manager Kai Gomez seems to be giving sub Stephens some instructions"},{minute:16,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:19,type:GENERIC,description:"Bennett (Hexham Borough) seems to be getting a stern warning from the ref"},{minute:28,type:YELLOWCARD,description:"Yellow card for Turner (Saffron Olympic)"},{minute:32,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:55,type:GENERIC,description:"Burly Hexham Borough defender Huth cuts out the attack with a mean sliding tackle"},{minute:61,type:GENERIC,description:"Some activity on the Hexham Borough bench as Patterson starts warming up"},{minute:67,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:69,type:GENERIC,description:"The ref is talking to Perez (Hexham Borough) after a vicious tackle"},{minute:95,type:GENERIC,description:"The ref is talking to Garcia (Saffron Olympic) after a vicious tackle"},{minute:100,type:GENERIC,description:"Meath (Hexham Borough) given a lecture by the ref"},{minute:101,type:GENERIC,description:"Burly Hexham Borough defender Ruiz cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:Wroxeter,week:10,away_name:"Wheatley Harriers",result:{home_goals:[],first_half_length:50,second_half_length:46,gate:270,away_goals:[{time:95,scorer_id:"Finn Gordon"},{time:67,scorer_id:"Tommy Rice"},{time:63,scorer_id:"Finn Gordon"},{time:85,scorer_id:"Jacob Stone"},{time:1,scorer_id:"Finn Gordon"}],match_events:[{minute:4,type:GENERIC,description:"Burly Wheatley Harriers defender Stone cuts out the attack with a mean sliding tackle"},{minute:25,type:GENERIC,description:"Gordon (Wheatley Harriers) seems to be getting a stern warning from the ref"},{minute:30,type:GENERIC,description:"A long ball from Wroxeter but Flores can't quite get to it"},{minute:32,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:39,type:GENERIC,description:"The ref is talking to Mcquillen (Wroxeter) after a vicious tackle"},{minute:61,type:GENERIC,description:"The ref is talking to Rice (Wheatley Harriers) after a vicious tackle"},{minute:62,type:GENERIC,description:"Meaty Wroxeter defender Wilson heads the ball clear"},{minute:65,type:GENERIC,description:"Wheatley Harriers sub Perry seems to be tucking into a pie!"},{minute:66,type:INJURY,description:"Shelsher (Wroxeter) is calling for the physio"},{minute:81,type:INJURY,description:"Selvaratnam (Wroxeter) goes down after colliding with the opposing defender"},{minute:82,type:GENERIC,description:"Wroxeter's manager Jayden Martin is holding his head in frustration"},{minute:92,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"}]}},{has_run:true,home_name:"Alsager Town",week:10,away_name:"Cross Heath",result:{home_goals:[{time:88,scorer_id:"Toby Khambaita"}],first_half_length:50,second_half_length:50,gate:285,away_goals:[{time:46,scorer_id:"Cole Cox"}],match_events:[{minute:31,type:GENERIC,description:"Defender Young (Alsager Town) clears the ball for a throw-in"},{minute:32,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Southway some instructions"},{minute:36,type:GENERIC,description:"Alsager Town manager Jonathan Henderson seems to be giving sub Kennedy some instructions"},{minute:40,type:GENERIC,description:"Defender Moore (Cross Heath) clears the ball for a throw-in"},{minute:63,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:74,type:GENERIC,description:"The ref is talking to Moore (Cross Heath) after a vicious tackle"},{minute:77,type:GENERIC,description:"A long ball from Cross Heath but Clark can't quite get to it"},{minute:80,type:GENERIC,description:"Some activity on the Cross Heath bench as Virji starts warming up"},{minute:83,type:GENERIC,description:"Cross Heath's Gonzales jogs up the channel"},{minute:84,type:GENERIC,description:"Cross Heath sub Virji seems to be tucking into a pie!"},{minute:92,type:GENERIC,description:"Cross Heath's Gonzales jogs up the channel"}]}},{has_run:true,home_name:Melton,week:10,away_name:"Shirdley Hill",result:{home_goals:[{time:47,scorer_id:"Kian Taylor"}],first_half_length:48,second_half_length:49,gate:205,away_goals:[],match_events:[{minute:8,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:8,type:YELLOWCARD,description:"Yellow card for Smith (Shirdley Hill)"},{minute:14,type:GENERIC,description:"Myers (Shirdley Hill) given a lecture by the ref"},{minute:23,type:GENERIC,description:"Wallace (Melton) given a lecture by the ref"},{minute:25,type:YELLOWCARD,description:"Yellow card for Gonzales (Shirdley Hill)"},{minute:38,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:43,type:INJURY,description:"Griffin (Melton) is calling for the physio"},{minute:54,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Hawkins some instructions"},{minute:74,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:76,type:GENERIC,description:"Melton are on the counter-attack"},{minute:84,type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:93,type:GENERIC,description:"Shirdley Hill's Martinez jogs up the channel"},{minute:95,type:GENERIC,description:"The ref is talking to Myers (Shirdley Hill) after a vicious tackle"}]}},{has_run:true,home_name:Burscough,week:10,away_name:"Hadleigh Albion",result:{home_goals:[{time:73,scorer_id:"Ollie Howard"}],first_half_length:47,second_half_length:51,gate:271,away_goals:[],match_events:[{minute:14,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:15,type:YELLOWCARD,description:"Yellow card for Bungard (Hadleigh Albion)"},{minute:16,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:17,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:18,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"},{minute:20,type:GENERIC,description:"Lowsley (Burscough) given a lecture by the ref"},{minute:35,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:38,type:GENERIC,description:"A long ball from Burscough but Sanders can't quite get to it"},{minute:43,type:GENERIC,description:"Bryant (Burscough) seems to be getting a stern warning from the ref"},{minute:54,type:INJURY,description:"Bryant (Burscough) goes down after colliding with the opposing defender"},{minute:61,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:62,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:74,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:85,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"}]}},{has_run:true,home_name:Horsforth,week:11,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:50,second_half_length:50,gate:257,away_goals:[],match_events:[{minute:13,type:GENERIC,description:"Horsforth's Washington jogs up the channel"},{minute:17,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:35,type:INJURY,description:"Diaz (Hexham Borough) goes down after colliding with the opposing defender"},{minute:38,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:46,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:49,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:59,type:GENERIC,description:"Horsforth's manager Dexter Butler is holding his head in frustration"},{minute:71,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:94,type:YELLOWCARD,description:"Yellow card for Cole (Horsforth)"},{minute:99,type:INJURY,description:"Huth (Hexham Borough) seems to be limping slightly"}]}},{has_run:true,home_name:"Wheatley Harriers",week:11,away_name:"Chapel Olympic",result:{home_goals:[],first_half_length:47,second_half_length:47,gate:193,away_goals:[{time:85,scorer_id:"Iwan Bennett"}],match_events:[{minute:9,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:11,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"},{minute:24,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Fisher starts warming up"},{minute:32,type:GENERIC,description:"The ref is talking to Lee (Chapel Olympic) after a vicious tackle"},{minute:54,type:INJURY,description:"Mcquillen (Chapel Olympic) is calling for the physio"},{minute:62,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"},{minute:69,type:GENERIC,description:"Defender Stone (Wheatley Harriers) hoofs the ball upfield"},{minute:70,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:70,type:GENERIC,description:"Defender Shaw (Chapel Olympic) hoofs the ball upfield"},{minute:81,type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"},{minute:85,type:GENERIC,description:"Defender Domville (Chapel Olympic) hoofs the ball upfield"},{minute:86,type:GENERIC,description:"Chapel Olympic's fans are singing a rude song about Reece Robertson"},{minute:89,type:GENERIC,description:"Meaty Wheatley Harriers defender Hamilton heads the ball clear"}]}},{has_run:true,home_name:"Cross Heath",week:11,away_name:"Saffron Olympic",result:{home_goals:[{time:87,scorer_id:"Gethin Ferguson"},{time:21,scorer_id:"Ellis Scott"},{time:26,scorer_id:"Ellis Scott"},{time:45,scorer_id:"Gethin Ferguson"},{time:65,scorer_id:"Elijah Clark"}],first_half_length:51,second_half_length:48,gate:244,away_goals:[{time:80,scorer_id:"Finley Garcia"}],match_events:[{minute:1,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Chaisty starts warming up"},{minute:7,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:24,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is holding his head in frustration"},{minute:27,type:GENERIC,description:"Daniels (Cross Heath) given a lecture by the ref"},{minute:39,type:GENERIC,description:"Scott (Cross Heath) given a lecture by the ref"},{minute:39,type:INJURY,description:"Moore (Cross Heath) seems to be limping slightly"},{minute:44,type:GENERIC,description:"Southway (Saffron Olympic) given a lecture by the ref"},{minute:58,type:GENERIC,description:"Turner (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:73,type:INJURY,description:"The physio comes on to see to Southway (Saffron Olympic)"},{minute:73,type:GENERIC,description:"Cox (Cross Heath) seems to be getting a stern warning from the ref"},{minute:77,type:GENERIC,description:"Saffron Olympic manager Kai Gomez seems to be giving sub Chaisty some instructions"},{minute:82,type:GENERIC,description:"Saffron Olympic sub Bailey seems to be tucking into a pie!"}]}},{has_run:true,home_name:"Shirdley Hill",week:11,away_name:Wroxeter,result:{home_goals:[{time:79,scorer_id:"Jayden Gonzales"}],first_half_length:49,second_half_length:47,gate:180,away_goals:[{time:63,scorer_id:"Morgan Flores"}],match_events:[{minute:2,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:2,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:5,type:GENERIC,description:"Defender Jackson (Wroxeter) hoofs the ball upfield"},{minute:20,type:GENERIC,description:"Shirdley Hill are on the counter-attack"},{minute:44,type:GENERIC,description:"The Wroxeter fans are chanting Jayden Martin's name"},{minute:44,type:GENERIC,description:"Defender Lopez (Shirdley Hill) hoofs the ball upfield"},{minute:47,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:50,type:GENERIC,description:"Some activity on the Wroxeter bench as Rogers starts warming up"},{minute:51,type:GENERIC,description:"Defender Martinez (Shirdley Hill) clears the ball for a throw-in"},{minute:55,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:60,type:GENERIC,description:"Wroxeter sub Baker seems to be tucking into a pie!"},{minute:62,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:62,type:YELLOWCARD,description:"Yellow card for Wood (Wroxeter)"},{minute:86,type:GENERIC,description:"Gonzales (Shirdley Hill) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:"Hadleigh Albion",week:11,away_name:"Alsager Town",result:{home_goals:[],first_half_length:47,second_half_length:52,gate:199,away_goals:[],match_events:[{minute:15,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:21,type:INJURY,description:"West (Alsager Town) goes down after colliding with the opposing defender"},{minute:30,type:INJURY,description:"Stone (Alsager Town) writhes on the floor after tripping over the ball"},{minute:36,type:GENERIC,description:"Wright (Alsager Town) seems to be getting a stern warning from the ref"},{minute:43,type:GENERIC,description:"Burly Hadleigh Albion defender Bungard cuts out the attack with a mean sliding tackle"},{minute:44,type:GENERIC,description:"Mc Cart (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:45,type:GENERIC,description:"A long ball from Hadleigh Albion but Mc Cart can't quite get to it"},{minute:49,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:70,type:GENERIC,description:"Defender Hill (Alsager Town) clears the ball for a throw-in"},{minute:72,type:GENERIC,description:"Meaty Hadleigh Albion defender Bungard heads the ball clear"},{minute:88,type:GENERIC,description:"Hadleigh Albion are on the counter-attack"},{minute:94,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub Woods some instructions"},{minute:95,type:YELLOWCARD,description:"Yellow card for Mitchell (Hadleigh Albion)"},{minute:96,type:GENERIC,description:"Rukin (Hadleigh Albion) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:Burscough,week:11,away_name:Melton,result:{home_goals:[{time:3,scorer_id:"Cian Medina"}],first_half_length:50,second_half_length:47,gate:251,away_goals:[{time:75,scorer_id:"Jude Wallace"},{time:55,scorer_id:"Elliott Dixon"},{time:67,scorer_id:"Blake Griffin"}],match_events:[{minute:3,type:GENERIC,description:"Sanders (Burscough) given a lecture by the ref"},{minute:4,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:6,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:8,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:10,type:GENERIC,description:"Burscough's manager Louis Hansen is furious with the referee"},{minute:12,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Hernandez some instructions"},{minute:16,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Meath some instructions"},{minute:32,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:41,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"},{minute:58,type:GENERIC,description:"A long ball from Burscough but Sanders can't quite get to it"},{minute:69,type:GENERIC,description:"Defender Lowsley (Burscough) hoofs the ball upfield"},{minute:77,type:YELLOWCARD,description:"Yellow card for Bryant (Burscough)"},{minute:80,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Peters some instructions"},{minute:94,type:GENERIC,description:"Freeman (Melton) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:"Wheatley Harriers",week:12,away_name:Horsforth,result:{home_goals:[{time:16,scorer_id:"Tomos Wood"},{time:81,scorer_id:"Ryan Bennett"},{time:63,scorer_id:"Jacob Stone"}],first_half_length:47,second_half_length:49,gate:179,away_goals:[],match_events:[{minute:1,type:YELLOWCARD,description:"Yellow card for Hoffman (Wheatley Harriers)"},{minute:2,type:INJURY,description:"Allen (Horsforth) has broken his nose but is playing on"},{minute:12,type:GENERIC,description:"The ref is talking to Burns (Wheatley Harriers) after a vicious tackle"},{minute:13,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) clears the ball for a throw-in"},{minute:14,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:42,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:45,type:GENERIC,description:"Striker Burns is brought down by the big centre half, but the ref waves it away"},{minute:71,type:GENERIC,description:"The Wheatley Harriers manager points angrily at keeper Burns"},{minute:73,type:GENERIC,description:"Meaty Horsforth defender Nelson heads the ball clear"},{minute:78,type:GENERIC,description:"Meaty Horsforth defender Pierce heads the ball clear"},{minute:86,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:87,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:91,type:GENERIC,description:"Some activity on the Horsforth bench as Bailey starts warming up"},{minute:93,type:GENERIC,description:"A long ball from Wheatley Harriers but Stone can't quite get to it"}]}},{has_run:true,home_name:"Hexham Borough",week:12,away_name:"Cross Heath",result:{home_goals:[{time:94,scorer_id:"Oliver Cole"},{time:49,scorer_id:"Oliver Cole"},{time:61,scorer_id:"Frederick Bennett"}],first_half_length:51,second_half_length:49,gate:143,away_goals:[{time:54,scorer_id:"Albert Pierce"},{time:19,scorer_id:"Albert Pierce"},{time:28,scorer_id:"Seth Ruiz"}],match_events:[{minute:5,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:8,type:YELLOWCARD,description:"Yellow card for Gonzales (Cross Heath)"},{minute:21,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:25,type:GENERIC,description:"Burly Hexham Borough defender Sanchez cuts out the attack with a mean sliding tackle"},{minute:37,type:GENERIC,description:"Defender Moore (Cross Heath) hoofs the ball upfield"},{minute:45,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Clark some instructions"},{minute:57,type:GENERIC,description:"Some activity on the Cross Heath bench as Southway starts warming up"},{minute:74,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:79,type:GENERIC,description:"Hexham Borough Striker Cole is caught offside"},{minute:83,type:INJURY,description:"Gonzales (Cross Heath) seems to be limping slightly"},{minute:90,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:91,type:INJURY,description:"Huth (Hexham Borough) is calling for the physio"}]}},{has_run:true,home_name:"Chapel Olympic",week:12,away_name:"Shirdley Hill",result:{home_goals:[{time:41,scorer_id:"Cody Mcquillen"},{time:63,scorer_id:"Anthony Lee"}],first_half_length:46,second_half_length:50,gate:245,away_goals:[],match_events:[{type:GENERIC,description:"Burly Chapel Olympic defender Shaw cuts out the attack with a mean sliding tackle"},{minute:15,type:GENERIC,description:"Meaty Shirdley Hill defender Reyes heads the ball clear"},{minute:18,type:GENERIC,description:"Shirdley Hill's Martinez jogs up the channel"},{minute:19,type:GENERIC,description:"A burst of noise from the stands to encourage the Chapel Olympic players"},{minute:26,type:GENERIC,description:"Chapel Olympic's fans are singing a rude song about Reece Robertson"},{minute:33,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:42,type:GENERIC,description:"Defender Domville (Chapel Olympic) hoofs the ball upfield"},{minute:53,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:58,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Stephens some instructions"},{minute:80,type:GENERIC,description:"The ref is talking to Patel (Chapel Olympic) after a vicious tackle"},{minute:88,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"}]}},{has_run:true,home_name:"Saffron Olympic",week:12,away_name:"Hadleigh Albion",result:{home_goals:[{time:79,scorer_id:"Muhammad Southway"}],first_half_length:46,second_half_length:46,gate:149,away_goals:[],match_events:[{minute:5,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:31,type:GENERIC,description:"The Hadleigh Albion fans are chanting Freddie Gibson's name"},{minute:32,type:GENERIC,description:"Saffron Olympic sub Chaisty seems to be tucking into a pie!"},{minute:46,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is holding his head in frustration"},{minute:46,type:GENERIC,description:"The Hadleigh Albion fans are chanting Freddie Gibson's name"},{minute:47,type:YELLOWCARD,description:"Yellow card for Turner (Saffron Olympic)"},{minute:49,type:GENERIC,description:"The ref is talking to Southway (Saffron Olympic) after a vicious tackle"},{minute:49,type:GENERIC,description:"Palmer (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:68,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:79,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"}]}},{has_run:true,home_name:Wroxeter,week:12,away_name:Burscough,result:{home_goals:[{time:5,scorer_id:"Nicholas Selvaratnam"},{time:31,scorer_id:"Morgan Flores"}],first_half_length:46,second_half_length:49,gate:275,away_goals:[{time:70,scorer_id:"Jake Sanders"},{scorer_id:"Anthony Nguyen"}],match_events:[{minute:3,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:3,type:GENERIC,description:"The Wroxeter manager points angrily at keeper Howard"},{minute:28,type:YELLOWCARD,description:"Yellow card for Lowsley (Burscough)"},{minute:32,type:GENERIC,description:"Wroxeter sub Rogers seems to be tucking into a pie!"},{minute:41,type:GENERIC,description:"Howard (Wroxeter) seems to be getting a stern warning from the ref"},{minute:49,type:GENERIC,description:"Defender Howard (Burscough) clears the ball for a throw-in"},{minute:53,type:GENERIC,description:"A long ball from Burscough but Sanders can't quite get to it"},{minute:57,type:GENERIC,description:"Some activity on the Burscough bench as Huth starts warming up"},{minute:70,type:YELLOWCARD,description:"Yellow card for Marshall (Burscough)"},{minute:86,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:86,type:GENERIC,description:"The Wroxeter manager points angrily at keeper Howard"},{minute:89,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:90,type:GENERIC,description:"Burly Burscough defender Lowsley cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:"Alsager Town",week:12,away_name:Melton,result:{home_goals:[{time:73,scorer_id:"Jonathan Schmidt"}],first_half_length:49,second_half_length:47,gate:121,away_goals:[{time:67,scorer_id:"Jude Wallace"}],match_events:[{minute:8,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:17,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:25,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:28,type:GENERIC,description:"Alsager Town sub Howard seems to be tucking into a pie!"},{minute:39,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:46,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:55,type:GENERIC,description:"Defender Freeman (Melton) clears the ball for a throw-in"},{minute:63,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:70,type:YELLOWCARD,description:"Yellow card for Turner (Alsager Town)"},{minute:75,type:GENERIC,description:"The ref is talking to Freeman (Melton) after a vicious tackle"},{minute:76,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"},{minute:82,type:GENERIC,description:"Alsager Town manager Jonathan Henderson seems to be giving sub Kennedy some instructions"},{minute:83,type:GENERIC,description:"A long ball from Melton but James can't quite get to it"},{minute:86,type:YELLOWCARD,description:"Yellow card for Griffin (Melton)"},{minute:91,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"}]}},{has_run:true,home_name:Horsforth,week:13,away_name:"Cross Heath",result:{home_goals:[{time:5,scorer_id:"Owain Witte"}],first_half_length:49,second_half_length:47,gate:226,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"},{minute:17,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:23,type:GENERIC,description:"The ref is talking to Washington (Horsforth) after a vicious tackle"},{minute:25,type:GENERIC,description:"Some activity on the Cross Heath bench as Spencer starts warming up"},{minute:26,type:GENERIC,description:"Some activity on the Horsforth bench as Bailey starts warming up"},{minute:42,type:INJURY,description:"Nelson (Horsforth) has broken his nose but is playing on"},{minute:57,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Mills some instructions"},{minute:64,type:GENERIC,description:"Cross Heath's Flores jogs up the channel"},{minute:68,type:GENERIC,description:"The travelling Cross Heath supporters are shouting abuse at the home fans"},{minute:73,type:GENERIC,description:"Cross Heath are on the counter-attack"},{minute:83,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:86,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:92,type:GENERIC,description:"Cross Heath are on the counter-attack"}]}},{has_run:true,home_name:"Shirdley Hill",week:13,away_name:"Wheatley Harriers",result:{home_goals:[{time:55,scorer_id:"Luca Ferguson"},{time:40,scorer_id:"Seth Martinez"}],first_half_length:51,second_half_length:46,gate:266,away_goals:[{time:41,scorer_id:"Maxwell Hoffman"},{time:70,scorer_id:"Finn Gordon"},{time:38,scorer_id:"Hayden Dissanayake"}],match_events:[{minute:2,type:INJURY,description:"The physio comes on to see to Myers (Shirdley Hill)"},{minute:23,type:GENERIC,description:"A cheer from the Shirdley Hill fans as a rude inflatable is thrown on the pitch"},{minute:23,type:INJURY,description:"Stone (Wheatley Harriers) has broken his nose but is playing on"},{minute:45,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:49,type:GENERIC,description:"Defender Lopez (Shirdley Hill) clears the ball for a throw-in"},{minute:58,type:GENERIC,description:"Striker Gonzales is brought down by the big centre half, but the ref waves it away"},{minute:63,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:66,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:73,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"},{minute:74,type:YELLOWCARD,description:"Yellow card for Stone (Wheatley Harriers)"},{minute:81,type:INJURY,description:"Gordon (Wheatley Harriers) seems to be limping slightly"},{minute:89,type:INJURY,description:"Hoffman (Wheatley Harriers) goes down after colliding with the opposing defender"},{minute:93,type:INJURY,description:"Gonzales (Shirdley Hill) has broken his nose but is playing on"},{minute:96,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"}]}},{has_run:true,home_name:"Hadleigh Albion",week:13,away_name:"Hexham Borough",result:{home_goals:[{time:32,scorer_id:"Leon Gordon"}],first_half_length:52,second_half_length:50,gate:143,away_goals:[{time:48,scorer_id:"Lewis Diaz"}],match_events:[{minute:12,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:27,type:GENERIC,description:"Some activity on the Hexham Borough bench as Castillo starts warming up"},{minute:37,type:GENERIC,description:"A long ball from Hexham Borough but Diaz can't quite get to it"},{minute:49,type:GENERIC,description:"Burly Hadleigh Albion defender Edeson cuts out the attack with a mean sliding tackle"},{minute:60,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:61,type:GENERIC,description:"Meaty Hadleigh Albion defender Edeson heads the ball clear"},{minute:61,type:GENERIC,description:"Hadleigh Albion's Mitchell jogs up the channel"},{minute:62,type:GENERIC,description:"The ref is talking to Gordon (Hadleigh Albion) after a vicious tackle"},{minute:63,type:INJURY,description:"Edeson (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:75,type:GENERIC,description:"Hadleigh Albion sub Kinlan seems to be tucking into a pie!"},{minute:79,type:GENERIC,description:"Hadleigh Albion Striker Gordon is caught offside"},{minute:90,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:90,type:GENERIC,description:"Hadleigh Albion are on the counter-attack"},{minute:98,type:GENERIC,description:"The ref is talking to Mitchell (Hadleigh Albion) after a vicious tackle"}]}},{has_run:true,home_name:Burscough,week:13,away_name:"Chapel Olympic",result:{home_goals:[{time:86,scorer_id:"Jake Sanders"}],first_half_length:47,second_half_length:50,gate:322,away_goals:[],match_events:[{minute:6,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:12,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:17,type:GENERIC,description:"Mcquillen (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:19,type:GENERIC,description:"Some activity on the Burscough bench as Kinlan starts warming up"},{minute:21,type:INJURY,description:"Lee (Chapel Olympic) writhes on the floor after tripping over the ball"},{minute:40,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Fisher starts warming up"},{minute:40,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Hoffman some instructions"},{minute:41,type:INJURY,description:"Husher (Chapel Olympic) seems to be limping slightly"},{minute:43,type:GENERIC,description:"The Chapel Olympic fans are chanting Reece Robertson's name"},{minute:45,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:92,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"}]}},{has_run:true,home_name:Melton,week:13,away_name:"Saffron Olympic",result:{home_goals:[{time:18,scorer_id:"Elliott Dixon"},{time:77,scorer_id:"Kian Taylor"}],first_half_length:52,second_half_length:50,gate:209,away_goals:[],match_events:[{minute:19,type:GENERIC,description:"Defender Hunt (Saffron Olympic) hoofs the ball upfield"},{minute:23,type:INJURY,description:"The physio comes on to see to Rogers (Melton)"},{minute:24,type:INJURY,description:"Freeman (Melton) writhes on the floor after tripping over the ball"},{minute:25,type:GENERIC,description:"Burly Melton defender Williams cuts out the attack with a mean sliding tackle"},{minute:31,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:37,type:GENERIC,description:"Defender Freeman (Melton) clears the ball for a throw-in"},{minute:42,type:INJURY,description:"Southway (Saffron Olympic) goes down after colliding with the opposing defender"},{minute:44,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:45,type:INJURY,description:"Flores (Saffron Olympic) has broken his nose but is playing on"},{minute:49,type:GENERIC,description:"Some activity on the Melton bench as Rice starts warming up"},{minute:85,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"}]}},{has_run:true,home_name:"Alsager Town",week:13,away_name:Wroxeter,result:{home_goals:[{time:70,scorer_id:"Toby Khambaita"},{time:79,scorer_id:"Toby Khambaita"}],first_half_length:52,second_half_length:51,gate:106,away_goals:[{time:90,scorer_id:"Morgan Flores"}],match_events:[{type:GENERIC,description:"Defender Wood (Wroxeter) clears the ball for a throw-in"},{minute:9,type:GENERIC,description:"Meaty Wroxeter defender Wilson heads the ball clear"},{minute:13,type:GENERIC,description:"Defender Jackson (Wroxeter) clears the ball for a throw-in"},{minute:17,type:INJURY,description:"The physio comes on to see to Schmidt (Alsager Town)"},{minute:19,type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:19,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:25,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:70,type:YELLOWCARD,description:"Yellow card for Wilson (Wroxeter)"},{minute:82,type:GENERIC,description:"Some activity on the Wroxeter bench as Baker starts warming up"},{minute:87,type:GENERIC,description:"A long ball from Alsager Town but Khambaita can't quite get to it"}]}},{has_run:true,home_name:"Shirdley Hill",week:14,away_name:Horsforth,result:{home_goals:[{time:90,scorer_id:"Lucas Henry"}],first_half_length:46,second_half_length:47,gate:290,away_goals:[{time:74,scorer_id:"Owain Witte"},{time:74,scorer_id:"Charles Gonzales"}],match_events:[{minute:2,type:GENERIC,description:"Smith (Shirdley Hill) given a lecture by the ref"},{minute:4,type:GENERIC,description:"Meaty Shirdley Hill defender Martinez heads the ball clear"},{minute:13,type:GENERIC,description:"The ref is talking to Lopez (Shirdley Hill) after a vicious tackle"},{minute:20,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:24,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:32,type:GENERIC,description:"Defender Nelson (Horsforth) clears the ball for a throw-in"},{minute:42,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:43,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:47,type:YELLOWCARD,description:"Yellow card for Pierce (Horsforth)"},{minute:48,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"},{minute:51,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is furious with the referee"},{minute:84,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:84,type:GENERIC,description:"Striker Ellis is brought down by the big centre half, but the ref waves it away"},{minute:92,type:GENERIC,description:"Burly Shirdley Hill defender Myers cuts out the attack with a mean sliding tackle"},{minute:92,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"}]}},{has_run:true,home_name:"Cross Heath",week:14,away_name:"Hadleigh Albion",result:{home_goals:[],first_half_length:48,second_half_length:46,gate:265,away_goals:[{time:64,scorer_id:"Leon Gordon"},{time:74,scorer_id:"Leon Gordon"}],match_events:[{minute:9,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:18,type:GENERIC,description:"Hadleigh Albion sub Marshall seems to be tucking into a pie!"},{minute:40,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:42,type:YELLOWCARD,description:"Yellow card for Jones (Hadleigh Albion)"},{minute:50,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:51,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:56,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:57,type:GENERIC,description:"Rukin (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:59,type:YELLOWCARD,description:"Yellow card for Flores (Cross Heath)"},{minute:64,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:68,type:GENERIC,description:"Defender Flores (Cross Heath) hoofs the ball upfield"},{minute:68,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Clark some instructions"},{minute:70,type:GENERIC,description:"A burst of noise from the stands to encourage the Cross Heath players"},{minute:81,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"}]}},{has_run:true,home_name:"Wheatley Harriers",week:14,away_name:Burscough,result:{home_goals:[{time:90,scorer_id:"Finn Gordon"},{time:29,scorer_id:"Finn Gordon"}],first_half_length:50,second_half_length:49,gate:243,away_goals:[],match_events:[{minute:19,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:23,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:23,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:34,type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"},{minute:41,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:57,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:66,type:INJURY,description:"Hoffman (Wheatley Harriers) writhes on the floor after tripping over the ball"},{minute:67,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:78,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) clears the ball for a throw-in"},{minute:82,type:GENERIC,description:"Striker Stone is brought down by the big centre half, but the ref waves it away"},{minute:98,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:98,type:INJURY,description:"Bennett (Wheatley Harriers) goes down after colliding with the opposing defender"}]}},{has_run:true,home_name:"Hexham Borough",week:14,away_name:Melton,result:{home_goals:[],first_half_length:46,second_half_length:49,gate:228,away_goals:[{time:74,scorer_id:"Kian Taylor"},{time:61,scorer_id:"Elliott Dixon"}],match_events:[{minute:11,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:12,type:YELLOWCARD,description:"Yellow card for Sanchez (Hexham Borough)"},{minute:28,type:YELLOWCARD,description:"Yellow card for Perez (Hexham Borough)"},{minute:33,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:36,type:GENERIC,description:"Meaty Hexham Borough defender Sanchez heads the ball clear"},{minute:39,type:GENERIC,description:"Huth (Hexham Borough) given a lecture by the ref"},{minute:44,type:GENERIC,description:"Striker James is brought down by the big centre half, but the ref waves it away"},{minute:48,type:GENERIC,description:"Defender Sanchez (Hexham Borough) clears the ball for a throw-in"},{minute:58,type:GENERIC,description:"Upadhyad (Melton) given a lecture by the ref"},{minute:59,type:GENERIC,description:"Williams (Melton) seems to be getting a stern warning from the ref"},{minute:76,type:GENERIC,description:"Melton sub Hernandez seems to be tucking into a pie!"}]}},{has_run:true,home_name:"Chapel Olympic",week:14,away_name:"Alsager Town",result:{home_goals:[{time:62,scorer_id:"Tommy Patel"},{time:49,scorer_id:"Kai Brown"},{time:52,scorer_id:"Bobby Shaw"},{time:72,scorer_id:"Kai Brown"}],first_half_length:47,second_half_length:48,gate:238,away_goals:[{time:37,scorer_id:"Toby Khambaita"},{time:83,scorer_id:"Toby Khambaita"}],match_events:[{minute:3,type:GENERIC,description:"Defender Patel (Chapel Olympic) clears the ball for a throw-in"},{minute:3,type:GENERIC,description:"The travelling Alsager Town supporters are shouting abuse at the home fans"},{minute:11,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"},{minute:39,type:GENERIC,description:"Meaty Alsager Town defender Butler heads the ball clear"},{minute:43,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:52,type:GENERIC,description:"Chapel Olympic are on the counter-attack"},{minute:53,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:68,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:73,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:79,type:INJURY,description:"Fernandez (Chapel Olympic) seems to be limping slightly"},{minute:87,type:YELLOWCARD,description:"Yellow card for Pierce (Chapel Olympic)"}]}},{has_run:true,home_name:"Saffron Olympic",week:14,away_name:Wroxeter,result:{home_goals:[],first_half_length:50,second_half_length:52,gate:102,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Defender Jackson (Wroxeter) clears the ball for a throw-in"},{minute:4,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:6,type:YELLOWCARD,description:"Yellow card for Jackson (Saffron Olympic)"},{minute:7,type:INJURY,description:"The physio comes on to see to Jackson (Saffron Olympic)"},{minute:9,type:YELLOWCARD,description:"Yellow card for Wood (Wroxeter)"},{minute:19,type:GENERIC,description:"Meaty Wroxeter defender Wood heads the ball clear"},{minute:55,type:GENERIC,description:"Flores (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:63,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:63,type:GENERIC,description:"Woods (Wroxeter) seems to be getting a stern warning from the ref"},{minute:67,type:GENERIC,description:"The ref is talking to Woods (Wroxeter) after a vicious tackle"},{minute:81,type:GENERIC,description:"The ref is talking to Flores (Wroxeter) after a vicious tackle"},{minute:81,type:GENERIC,description:"Jackson (Wroxeter) seems to be getting a stern warning from the ref"},{minute:86,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:97,type:GENERIC,description:"Some activity on the Wroxeter bench as Turner starts warming up"}]}},{home_name:Horsforth,week:15,away_name:"Hadleigh Albion"},{home_name:Burscough,week:15,away_name:"Shirdley Hill"},{home_name:Melton,week:15,away_name:"Cross Heath"},{home_name:"Alsager Town",week:15,away_name:"Wheatley Harriers"},{home_name:Wroxeter,week:15,away_name:"Hexham Borough"},{home_name:"Saffron Olympic",week:15,away_name:"Chapel Olympic"},{home_name:Burscough,week:16,away_name:Horsforth},{home_name:"Hadleigh Albion",week:16,away_name:Melton},{home_name:"Shirdley Hill",week:16,away_name:"Alsager Town"},{home_name:"Cross Heath",week:16,away_name:Wroxeter},{home_name:"Wheatley Harriers",week:16,away_name:"Saffron Olympic"},{home_name:"Hexham Borough",week:16,away_name:"Chapel Olympic"},{home_name:Horsforth,week:17,away_name:Melton},{home_name:"Alsager Town",week:17,away_name:Burscough},{home_name:Wroxeter,week:17,away_name:"Hadleigh Albion"},{home_name:"Saffron Olympic",week:17,away_name:"Shirdley Hill"},{home_name:"Chapel Olympic",week:17,away_name:"Cross Heath"},{home_name:"Hexham Borough",week:17,away_name:"Wheatley Harriers"},{home_name:"Alsager Town",week:18,away_name:Horsforth},{home_name:Melton,week:18,away_name:Wroxeter},{home_name:Burscough,week:18,away_name:"Saffron Olympic"},{home_name:"Hadleigh Albion",week:18,away_name:"Chapel Olympic"},{home_name:"Shirdley Hill",week:18,away_name:"Hexham Borough"},{home_name:"Cross Heath",week:18,away_name:"Wheatley Harriers"},{home_name:Horsforth,week:19,away_name:Wroxeter},{home_name:"Saffron Olympic",week:19,away_name:"Alsager Town"},{home_name:"Chapel Olympic",week:19,away_name:Melton},{home_name:"Hexham Borough",week:19,away_name:Burscough},{home_name:"Wheatley Harriers",week:19,away_name:"Hadleigh Albion"},{home_name:"Cross Heath",week:19,away_name:"Shirdley Hill"},{home_name:"Saffron Olympic",week:20,away_name:Horsforth},{home_name:Wroxeter,week:20,away_name:"Chapel Olympic"},{home_name:"Alsager Town",week:20,away_name:"Hexham Borough"},{home_name:Melton,week:20,away_name:"Wheatley Harriers"},{home_name:Burscough,week:20,away_name:"Cross Heath"},{home_name:"Hadleigh Albion",week:20,away_name:"Shirdley Hill"},{home_name:Horsforth,week:21,away_name:"Chapel Olympic"},{home_name:"Hexham Borough",week:21,away_name:"Saffron Olympic"},{home_name:"Wheatley Harriers",week:21,away_name:Wroxeter},{home_name:"Cross Heath",week:21,away_name:"Alsager Town"},{home_name:"Shirdley Hill",week:21,away_name:Melton},{home_name:"Hadleigh Albion",week:21,away_name:Burscough},{home_name:"Hexham Borough",week:22,away_name:Horsforth},{home_name:"Chapel Olympic",week:22,away_name:"Wheatley Harriers"},{home_name:"Saffron Olympic",week:22,away_name:"Cross Heath"},{home_name:Wroxeter,week:22,away_name:"Shirdley Hill"},{home_name:"Alsager Town",week:22,away_name:"Hadleigh Albion"},{home_name:Melton,week:22,away_name:Burscough}],name:"Champions Central League",table:[{points:32,team_name:"Wheatley Harriers",draws:2,losses:2,wins:10,ga:10,position_history:[4,2,1,2,1,1,1,1,1,1,1,1,1,1],gf:32},{points:27,team_name:"Chapel Olympic",draws:3,losses:3,wins:8,ga:17,position_history:[12,11,7,5,4,2,2,2,2,2,2,2,2,2],gf:25},{points:24,team_name:Horsforth,draws:6,losses:2,wins:6,ga:16,position_history:[3,1,3,6,6,5,5,5,3,3,3,3,3,3],gf:19},{points:21,team_name:Melton,draws:6,losses:3,wins:5,ga:16,position_history:[9,7,10,11,10,12,12,11,11,8,8,7,6,4],gf:18},{points:18,team_name:"Cross Heath",draws:6,losses:4,wins:4,ga:14,position_history:[5,9,6,4,5,6,6,7,4,4,4,4,4,5],gf:21},{points:18,team_name:Burscough,draws:3,losses:6,wins:5,ga:20,position_history:[2,4,4,7,7,7,7,6,7,5,5,6,5,6],gf:16},{points:16,team_name:"Hexham Borough",draws:7,losses:4,wins:3,ga:18,position_history:[6,3,2,1,2,3,3,4,6,7,6,5,7,7],gf:17},{points:14,team_name:"Shirdley Hill",draws:5,losses:6,wins:3,ga:19,position_history:[1,5,5,3,3,4,4,3,5,6,7,8,8,8],gf:16},{points:14,team_name:"Alsager Town",draws:8,losses:4,wins:2,ga:20,position_history:[10,8,11,9,9,11,10,10,10,10,10,10,9,9],gf:17},{points:14,team_name:"Saffron Olympic",draws:5,losses:6,wins:3,ga:20,position_history:[8,6,9,10,12,9,8,8,8,9,9,9,10,10],gf:14},{points:11,team_name:Wroxeter,draws:8,losses:5,wins:1,ga:28,position_history:[11,12,8,8,8,8,9,9,9,11,11,11,11,11],gf:14},{points:10,team_name:"Hadleigh Albion",draws:7,losses:6,wins:1,ga:20,position_history:[7,10,12,12,11,10,11,12,12,12,12,12,12,12],gf:9}],teams:[{colour_base:black,name:Horsforth,colour_primary:orange,footballers:[{position:MGR,first_name:Dexter,surname:Butler,age:52},{position:GK,first_name:Ibrahim,surname:Torres,age:31},{position:DF,first_name:Liam,surname:Washington,age:25},{position:DF,first_name:Alfie,surname:Nelson,age:24},{position:DF,first_name:Benjamin,surname:Cole,age:18},{position:DF,first_name:"Jasper  ",surname:Pierce,age:24},{goals_this_season:4,position:MF,first_name:Matthew,surname:Allen,age:32},{goals_this_season:2,position:MF,first_name:Charles,surname:Gonzales,age:37},{position:MF,first_name:Oscar,surname:Davis,age:31},{goals_this_season:1,position:MF,first_name:Lucas,surname:Edwards,age:37},{goals_this_season:2,position:ST,first_name:Nathan,surname:Burns,age:35},{goals_this_season:10,position:ST,first_name:Owain,surname:Witte,age:33},{position:SUB,first_name:Ewan,surname:Nichols,age:19},{position:SUB,first_name:Callum,surname:Mills,age:26},{position:SUB,first_name:Alexander,surname:Romero,age:27},{position:SUB,first_name:Anthony,surname:Pepall,age:22},{position:SUB,first_name:Brandon,surname:Alvarez,age:27},{position:SUB,first_name:Ieuan,surname:Bailey,age:37}],win_bias:0.29734927546914924,stadium:"Queensway Way"},{colour_base:white,name:"Cross Heath",colour_primary:maroon,footballers:[{position:MGR,first_name:Sam,surname:Ellis,age:40},{position:GK,first_name:Henry,surname:Grant,age:31},{position:DF,first_name:Reece,surname:Moore,age:31},{goals_this_season:1,position:DF,first_name:Matthew,surname:Flores,age:28},{position:DF,first_name:Dexter,surname:Gonzales,age:36},{goals_this_season:1,position:DF,first_name:Jude,surname:Daniels,age:33},{goals_this_season:2,position:MF,first_name:Ellis,surname:Scott,age:27},{goals_this_season:3,position:MF,first_name:Albert,surname:Pierce,age:18},{goals_this_season:1,position:MF,first_name:Seth,surname:Ruiz,age:38},{goals_this_season:3,position:MF,first_name:Cole,surname:Cox,age:39},{goals_this_season:6,position:ST,first_name:Elijah,surname:Clark,age:34},{goals_this_season:4,position:ST,first_name:Gethin,surname:Ferguson,age:19},{position:SUB,first_name:Gethin,surname:Virji,age:31},{position:SUB,first_name:Adam,surname:Cabrera,age:34},{position:SUB,first_name:Theo,surname:Spencer,age:18},{position:SUB,first_name:Corey,surname:Clark,age:25},{position:SUB,first_name:Arthur,surname:Fisher,age:29},{position:SUB,first_name:Evan,surname:Southway,age:31}],win_bias:-0.09381533753859328,stadium:"Windsor Green"},{colour_base:orange,name:"Shirdley Hill",colour_primary:black,footballers:[{position:MGR,first_name:Kian,surname:Gonzalez,age:45},{position:GK,first_name:Charles,surname:Smith,age:18},{goals_this_season:1,position:DF,first_name:Seth,surname:Martinez,age:34},{position:DF,first_name:James,surname:Lopez,age:32},{position:DF,first_name:Mckenzie,surname:Reyes,age:22},{position:DF,first_name:Alexander,surname:Myers,age:36},{goals_this_season:2,position:MF,first_name:Luca,surname:Ferguson,age:25},{goals_this_season:1,position:MF,first_name:Lucas,surname:Henry,age:20},{goals_this_season:1,position:MF,first_name:Muhammad,surname:Reynolds,age:22},{goals_this_season:1,position:MF,first_name:Kian,surname:"Mc Cart",age:16},{goals_this_season:6,position:ST,first_name:Jayden,surname:Gonzales,age:18},{goals_this_season:4,position:ST,first_name:Callum,surname:Ellis,age:36},{position:SUB,first_name:Reece,surname:Hawa,age:18},{position:SUB,first_name:Declan,surname:Cox,age:34},{position:SUB,first_name:Jamie,surname:Virji,age:28},{position:SUB,first_name:Mckenzie,surname:Harrison,age:17},{position:SUB,first_name:Dominic,surname:Khambaita,age:22},{position:SUB,first_name:Reece,surname:Stephens,age:18}],win_bias:-0.21037064283157791,stadium:"Crescent Green"},{colour_base:blue,name:"Hadleigh Albion",colour_primary:white,footballers:[{position:MGR,first_name:Freddie,surname:Gibson,age:56},{position:GK,first_name:Finn,surname:Rukin,age:31},{position:DF,first_name:Louie,surname:Edeson,age:24},{goals_this_season:1,position:DF,first_name:Cole,surname:Mitchell,age:19},{position:DF,first_name:Andrew,surname:Bungard,age:33},{position:DF,first_name:Thomas,surname:Wright,age:16},{position:MF,first_name:Aaron,surname:Meath,age:22},{position:MF,first_name:Alfie,surname:Palmer,age:26},{position:MF,first_name:George,surname:Jones,age:25},{position:MF,first_name:Theodore,surname:Marshall,age:15},{goals_this_season:3,position:ST,first_name:Morgan,surname:"Mc Cart",age:36},{goals_this_season:5,position:ST,first_name:Leon,surname:Gordon,age:37},{position:SUB,first_name:Tristan,surname:Henderson,age:19},{position:SUB,first_name:Ibrahim,surname:Marshall,age:26},{position:SUB,first_name:Harry,surname:Kinlan,age:26},{position:SUB,first_name:Harrison,surname:Kennedy,age:26},{position:SUB,first_name:Joe,surname:Woods,age:30},{position:SUB,first_name:Riley,surname:James,age:18}],win_bias:0.07059409429660701,stadium:"West Stadium"},{colour_base:yellow,name:Burscough,colour_primary:blue,footballers:[{position:MGR,first_name:Louis,surname:Hansen,age:54},{goals_this_season:1,position:GK,first_name:Dominic,surname:Bryant,age:24},{goals_this_season:2,position:DF,first_name:Ollie,surname:Howard,age:31},{position:DF,first_name:Jac,surname:Marshall,age:24},{position:DF,first_name:Aidan,surname:Lowsley,age:20},{goals_this_season:1,position:DF,first_name:Ethan,surname:Simmons,age:26},{position:MF,first_name:Reece,surname:White,age:35},{goals_this_season:2,position:MF,first_name:Anthony,surname:Nguyen,age:15},{position:MF,first_name:Tyler,surname:Flores,age:39},{goals_this_season:1,position:MF,first_name:Harry,surname:Bailey,age:22},{goals_this_season:7,position:ST,first_name:Jake,surname:Sanders,age:31},{goals_this_season:2,position:ST,first_name:Cian,surname:Medina,age:22},{position:SUB,first_name:Maxwell,surname:Kinlan,age:17},{position:SUB,first_name:Cameron,surname:Huth,age:39},{position:SUB,first_name:Nathaniel,surname:Meath,age:16},{position:SUB,first_name:Andrew,surname:Myers,age:31},{position:SUB,first_name:Lucas,surname:Garcia,age:25},{position:SUB,first_name:Ryan,surname:Peters,age:32}],win_bias:0.06271284956975642,stadium:"Albert Road"},{colour_base:black,name:Melton,colour_primary:white,footballers:[{position:MGR,first_name:Gabriel,surname:Kennedy,age:49},{position:GK,first_name:Connor,surname:Richardson,age:39},{position:DF,first_name:Caleb,surname:Rogers,age:15},{goals_this_season:2,position:DF,first_name:Owain,surname:Williams,age:39},{position:DF,first_name:Dominic,surname:Freeman,age:20},{position:DF,first_name:Jac,surname:Upadhyad,age:34},{goals_this_season:2,position:MF,first_name:Blake,surname:Griffin,age:27},{goals_this_season:3,position:MF,first_name:Kian,surname:Taylor,age:39},{goals_this_season:5,position:MF,first_name:Jude,surname:Wallace,age:26},{position:MF,first_name:Hayden,surname:Griffin,age:27},{goals_this_season:2,position:ST,first_name:Isaac,surname:James,age:36},{goals_this_season:4,position:ST,first_name:Elliott,surname:Dixon,age:16},{position:SUB,first_name:Logan,surname:Bryant,age:17},{position:SUB,first_name:Kian,surname:Hawkins,age:21},{position:SUB,first_name:Harri,surname:Hernandez,age:19},{position:SUB,first_name:Jack,surname:Rice,age:29},{position:SUB,first_name:George,surname:Vasquez,age:33},{position:SUB,first_name:Edward,surname:Murphy,age:37}],win_bias:0.08,stadium:"Grange Meadow",player_control:true},{colour_base:orange,name:"Alsager Town",colour_primary:white,footballers:[{position:MGR,first_name:Jonathan,surname:Henderson,age:54},{position:GK,first_name:Alfie,surname:Stone,age:22},{goals_this_season:1,position:DF,first_name:Owain,surname:Howard,age:15},{position:DF,first_name:Ashton,surname:Butler,age:30},{position:DF,first_name:Jude,surname:Young,age:24},{position:DF,first_name:Billy,surname:Hill,age:17},{goals_this_season:1,position:MF,first_name:Ibrahim,surname:Turner,age:15},{goals_this_season:1,position:MF,first_name:Gabriel,surname:Wright,age:36},{position:MF,first_name:Riley,surname:Green,age:32},{goals_this_season:1,position:MF,first_name:Andrew,surname:West,age:20},{goals_this_season:12,position:ST,first_name:Toby,surname:Khambaita,age:25},{goals_this_season:1,position:ST,first_name:Jonathan,surname:Schmidt,age:30},{position:SUB,first_name:Riley,surname:Kennedy,age:37},{position:SUB,first_name:Jenson,surname:Davis,age:16},{position:SUB,first_name:Sebastian,surname:Bennett,age:17},{position:SUB,first_name:Charles,surname:Robertson,age:26},{position:SUB,first_name:Tobias,surname:Howard,age:34},{position:SUB,first_name:Charlie,surname:Hughes,age:27}],win_bias:-0.15343024590991416,stadium:"York Farm"},{colour_base:yellow,name:Wroxeter,colour_primary:blue,footballers:[{position:MGR,first_name:Jayden,surname:Martin,age:45},{position:GK,first_name:John,surname:Howard,age:29},{position:DF,first_name:Sebastian,surname:Wood,age:23},{goals_this_season:2,position:DF,first_name:Harrison,surname:Jackson,age:18},{position:DF,first_name:Jake,surname:Bailey,age:19},{position:DF,first_name:Jayden,surname:Wilson,age:25},{position:MF,first_name:Samuel,surname:Shelsher,age:36},{goals_this_season:2,position:MF,first_name:Matthew,surname:Mcquillen,age:31},{goals_this_season:3,position:MF,first_name:Joseph,surname:Perdue,age:29},{goals_this_season:1,position:MF,first_name:Harley,surname:Woods,age:15},{goals_this_season:5,position:ST,first_name:Morgan,surname:Flores,age:25},{goals_this_season:1,position:ST,first_name:Nicholas,surname:Selvaratnam,age:31},{position:SUB,first_name:Freddie,surname:Herrera,age:15},{position:SUB,first_name:Riley,surname:Turner,age:27},{position:SUB,first_name:Harry,surname:Mills,age:29},{position:SUB,first_name:Leo,surname:Rogers,age:35},{position:SUB,first_name:Dominic,surname:Baker,age:15},{position:SUB,first_name:Riley,surname:Shelsher,age:22}],win_bias:0.16954826015113456,stadium:"Manor Park"},{colour_base:red,name:"Saffron Olympic",colour_primary:white,footballers:[{position:MGR,first_name:Kai,surname:Gomez,age:40},{position:GK,first_name:Jac,surname:Happer,age:38},{position:DF,first_name:Edward,surname:Carter,age:38},{goals_this_season:2,position:DF,first_name:Finley,surname:Garcia,age:20},{position:DF,first_name:Morgan,surname:Hunt,age:33},{position:DF,first_name:Ronnie,surname:Jackson,age:30},{goals_this_season:1,position:MF,first_name:Blake,surname:Thompson,age:24},{position:MF,first_name:Adam,surname:Hernandez,age:22},{goals_this_season:2,position:MF,first_name:Cameron,surname:Shaw,age:27},{goals_this_season:1,position:MF,first_name:Muhammad,surname:Southway,age:30},{goals_this_season:4,position:ST,first_name:Louis,surname:Turner,age:31},{goals_this_season:4,position:ST,first_name:Harry,surname:Flores,age:22},{position:SUB,first_name:Thomas,surname:Mitchell,age:32},{position:SUB,first_name:Dylan,surname:Stephens,age:34},{position:SUB,first_name:Luca,surname:Bailey,age:29},{position:SUB,first_name:Lewis,surname:Daniels,age:37},{position:SUB,first_name:Tristan,surname:Chaisty,age:26},{position:SUB,first_name:Jac,surname:Davis,age:21}],win_bias:-0.488636820816288,stadium:"South Farm"},{colour_base:white,name:"Chapel Olympic",colour_primary:black,footballers:[{position:MGR,first_name:Reece,surname:Robertson,age:52},{position:GK,first_name:Oliver,surname:Pierce,age:38},{goals_this_season:2,position:DF,first_name:Tommy,surname:Patel,age:30},{goals_this_season:1,position:DF,first_name:Bobby,surname:Shaw,age:36},{position:DF,first_name:Samuel,surname:Fernandez,age:22},{goals_this_season:2,position:DF,first_name:Ellis,surname:Domville,age:26},{position:MF,first_name:Tyler,surname:Husher,age:25},{goals_this_season:6,position:MF,first_name:Anthony,surname:Lee,age:22},{goals_this_season:1,position:MF,first_name:Sebastian,surname:Campbell,age:35},{goals_this_season:3,position:MF,first_name:Kai,surname:Brown,age:28},{goals_this_season:6,position:ST,first_name:Cody,surname:Mcquillen,age:36},{goals_this_season:4,position:ST,first_name:Iwan,surname:Bennett,age:20},{position:SUB,first_name:Alexander,surname:Mitchell,age:29},{position:SUB,first_name:Joe,surname:Cunningham,age:30},{position:SUB,first_name:Jayden,surname:Fisher,age:24},{position:SUB,first_name:Alfie,surname:Hicks,age:18},{position:SUB,first_name:Kaiden,surname:Alexander,age:31},{position:SUB,first_name:Kyle,surname:Hoffman,age:26}],win_bias:0.25871602864765386,stadium:"Kings Street"},{colour_base:black,name:"Hexham Borough",colour_primary:red,footballers:[{position:MGR,first_name:Dominic,surname:Moreno,age:35},{goals_this_season:1,position:GK,first_name:Cian,surname:Meath,age:25},{position:DF,first_name:Rowan,surname:Sanchez,age:19},{position:DF,first_name:Bradley,surname:Ruiz,age:23},{position:DF,first_name:Kyle,surname:Huth,age:18},{position:DF,first_name:Iwan,surname:Murphy,age:28},{goals_this_season:1,position:MF,first_name:Leon,surname:Perez,age:27},{goals_this_season:1,position:MF,first_name:Frederick,surname:Bennett,age:16},{position:MF,first_name:Evan,surname:Mcquillen,age:16},{position:MF,first_name:Rowan,surname:Weild,age:28},{goals_this_season:6,position:ST,first_name:Lewis,surname:Diaz,age:22},{goals_this_season:8,position:ST,first_name:Oliver,surname:Cole,age:18},{position:SUB,first_name:Hugo,surname:Foster,age:38},{position:SUB,first_name:Jack,surname:Castillo,age:33},{position:SUB,first_name:Edward,surname:Wallace,age:28},{position:SUB,first_name:Connor,surname:Harrison,age:30},{position:SUB,first_name:Kieran,surname:Patterson,age:20},{position:SUB,first_name:Stanley,surname:Richardson,age:39}],win_bias:0.4877373703418977,stadium:"Queens Way"},{colour_base:white,name:"Wheatley Harriers",colour_primary:black,footballers:[{position:MGR,first_name:Toby,surname:Cabrera,age:42},{position:GK,first_name:Jenson,surname:Burns,age:36},{goals_this_season:1,position:DF,first_name:Hayden,surname:Dissanayake,age:19},{position:DF,first_name:Daniel,surname:Stone,age:36},{position:DF,first_name:Stanley,surname:Hamilton,age:24},{position:DF,first_name:Benjamin,surname:Gardner,age:35},{goals_this_season:4,position:MF,first_name:Ryan,surname:Bennett,age:30},{goals_this_season:6,position:MF,first_name:Maxwell,surname:Hoffman,age:27},{goals_this_season:2,position:MF,first_name:Tommy,surname:Rice,age:27},{goals_this_season:2,position:MF,first_name:Tomos,surname:Wood,age:25},{goals_this_season:8,position:ST,first_name:Jacob,surname:Stone,age:30},{goals_this_season:9,position:ST,first_name:Finn,surname:Gordon,age:27},{position:SUB,first_name:Olly,surname:Gelson,age:39},{position:SUB,first_name:Harry,surname:Perry,age:21},{position:SUB,first_name:Ryan,surname:Powell,age:29},{position:SUB,first_name:Corey,surname:Woods,age:21},{position:SUB,first_name:Harrison,surname:Kinlan,age:36},{position:SUB,first_name:Tristan,surname:Dua,age:36}],win_bias:0.39919188472705025,stadium:"North Mill"}],weekly_results:[{home_goals:[{time:90,scorer_id:"Lucas Henry"}],first_half_length:46,second_half_length:47,gate:290,away_goals:[{time:74,scorer_id:"Owain Witte"},{time:74,scorer_id:"Charles Gonzales"}],match_events:[{minute:2,type:GENERIC,description:"Smith (Shirdley Hill) given a lecture by the ref"},{minute:4,type:GENERIC,description:"Meaty Shirdley Hill defender Martinez heads the ball clear"},{minute:13,type:GENERIC,description:"The ref is talking to Lopez (Shirdley Hill) after a vicious tackle"},{minute:20,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:24,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:32,type:GENERIC,description:"Defender Nelson (Horsforth) clears the ball for a throw-in"},{minute:42,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:43,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:47,type:YELLOWCARD,description:"Yellow card for Pierce (Horsforth)"},{minute:48,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"},{minute:51,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is furious with the referee"},{minute:84,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:84,type:GENERIC,description:"Striker Ellis is brought down by the big centre half, but the ref waves it away"},{minute:92,type:GENERIC,description:"Burly Shirdley Hill defender Myers cuts out the attack with a mean sliding tackle"},{minute:92,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"}]},{home_goals:[],first_half_length:48,second_half_length:46,gate:265,away_goals:[{time:64,scorer_id:"Leon Gordon"},{time:74,scorer_id:"Leon Gordon"}],match_events:[{minute:9,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:18,type:GENERIC,description:"Hadleigh Albion sub Marshall seems to be tucking into a pie!"},{minute:40,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:42,type:YELLOWCARD,description:"Yellow card for Jones (Hadleigh Albion)"},{minute:50,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:51,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:56,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:57,type:GENERIC,description:"Rukin (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:59,type:YELLOWCARD,description:"Yellow card for Flores (Cross Heath)"},{minute:64,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:68,type:GENERIC,description:"Defender Flores (Cross Heath) hoofs the ball upfield"},{minute:68,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Clark some instructions"},{minute:70,type:GENERIC,description:"A burst of noise from the stands to encourage the Cross Heath players"},{minute:81,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"}]},{home_goals:[{time:90,scorer_id:"Finn Gordon"},{time:29,scorer_id:"Finn Gordon"}],first_half_length:50,second_half_length:49,gate:243,away_goals:[],match_events:[{minute:19,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:23,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:23,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:34,type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"},{minute:41,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:57,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:66,type:INJURY,description:"Hoffman (Wheatley Harriers) writhes on the floor after tripping over the ball"},{minute:67,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:78,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) clears the ball for a throw-in"},{minute:82,type:GENERIC,description:"Striker Stone is brought down by the big centre half, but the ref waves it away"},{minute:98,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:98,type:INJURY,description:"Bennett (Wheatley Harriers) goes down after colliding with the opposing defender"}]},{home_goals:[],first_half_length:46,second_half_length:49,gate:228,away_goals:[{time:74,scorer_id:"Kian Taylor"},{time:61,scorer_id:"Elliott Dixon"}],match_events:[{minute:11,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:12,type:YELLOWCARD,description:"Yellow card for Sanchez (Hexham Borough)"},{minute:28,type:YELLOWCARD,description:"Yellow card for Perez (Hexham Borough)"},{minute:33,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:36,type:GENERIC,description:"Meaty Hexham Borough defender Sanchez heads the ball clear"},{minute:39,type:GENERIC,description:"Huth (Hexham Borough) given a lecture by the ref"},{minute:44,type:GENERIC,description:"Striker James is brought down by the big centre half, but the ref waves it away"},{minute:48,type:GENERIC,description:"Defender Sanchez (Hexham Borough) clears the ball for a throw-in"},{minute:58,type:GENERIC,description:"Upadhyad (Melton) given a lecture by the ref"},{minute:59,type:GENERIC,description:"Williams (Melton) seems to be getting a stern warning from the ref"},{minute:76,type:GENERIC,description:"Melton sub Hernandez seems to be tucking into a pie!"}]},{home_goals:[{time:62,scorer_id:"Tommy Patel"},{time:49,scorer_id:"Kai Brown"},{time:52,scorer_id:"Bobby Shaw"},{time:72,scorer_id:"Kai Brown"}],first_half_length:47,second_half_length:48,gate:238,away_goals:[{time:37,scorer_id:"Toby Khambaita"},{time:83,scorer_id:"Toby Khambaita"}],match_events:[{minute:3,type:GENERIC,description:"Defender Patel (Chapel Olympic) clears the ball for a throw-in"},{minute:3,type:GENERIC,description:"The travelling Alsager Town supporters are shouting abuse at the home fans"},{minute:11,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"},{minute:39,type:GENERIC,description:"Meaty Alsager Town defender Butler heads the ball clear"},{minute:43,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:52,type:GENERIC,description:"Chapel Olympic are on the counter-attack"},{minute:53,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:68,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:73,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:79,type:INJURY,description:"Fernandez (Chapel Olympic) seems to be limping slightly"},{minute:87,type:YELLOWCARD,description:"Yellow card for Pierce (Chapel Olympic)"}]},{home_goals:[],first_half_length:50,second_half_length:52,gate:102,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Defender Jackson (Wroxeter) clears the ball for a throw-in"},{minute:4,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:6,type:YELLOWCARD,description:"Yellow card for Jackson (Saffron Olympic)"},{minute:7,type:INJURY,description:"The physio comes on to see to Jackson (Saffron Olympic)"},{minute:9,type:YELLOWCARD,description:"Yellow card for Wood (Wroxeter)"},{minute:19,type:GENERIC,description:"Meaty Wroxeter defender Wood heads the ball clear"},{minute:55,type:GENERIC,description:"Flores (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:63,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:63,type:GENERIC,description:"Woods (Wroxeter) seems to be getting a stern warning from the ref"},{minute:67,type:GENERIC,description:"The ref is talking to Woods (Wroxeter) after a vicious tackle"},{minute:81,type:GENERIC,description:"The ref is talking to Flores (Wroxeter) after a vicious tackle"},{minute:81,type:GENERIC,description:"Jackson (Wroxeter) seems to be getting a stern warning from the ref"},{minute:86,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:97,type:GENERIC,description:"Some activity on the Wroxeter bench as Turner starts warming up"}]}],current_week:15}