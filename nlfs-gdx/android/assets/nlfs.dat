{fixtures:[{has_run:true,home_name:Horsforth,week:1,away_name:"Wheatley Harriers",result:{home_goals:[{time:12,scorer_id:"Owain Witte"}],first_half_length:51,second_half_length:51,gate:158,away_goals:[{time:15,scorer_id:"Jacob Stone"}],match_events:[{minute:13,type:GENERIC,description:"Horsforth Striker Witte is caught offside"},{minute:19,type:GENERIC,description:"Pierce (Horsforth) seems to be getting a stern warning from the ref"},{minute:24,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:27,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) clears the ball for a throw-in"},{minute:28,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Bailey some instructions"},{minute:30,type:GENERIC,description:"Some activity on the Horsforth bench as Nichols starts warming up"},{minute:46,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is holding his head in frustration"},{minute:48,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:51,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:57,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:59,type:GENERIC,description:"Some activity on the Horsforth bench as Romero starts warming up"},{minute:66,type:YELLOWCARD,description:"Yellow card for Gardner (Wheatley Harriers)"},{minute:75,type:GENERIC,description:"Horsforth sub Mills seems to be tucking into a pie!"},{minute:79,type:GENERIC,description:"Some activity on the Horsforth bench as Alvarez starts warming up"},{minute:98,type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"}]}},{has_run:true,home_name:"Cross Heath",week:1,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:47,second_half_length:49,gate:268,away_goals:[{time:5,scorer_id:"Leon Perez"},{time:32,scorer_id:"Evan Mcquillen"},{time:33,scorer_id:"Oliver Cole"}],match_events:[{type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:5,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:8,type:GENERIC,description:"A long ball from Hexham Borough but Diaz can't quite get to it"},{minute:11,type:GENERIC,description:"Meaty Cross Heath defender Flores heads the ball clear"},{minute:14,type:GENERIC,description:"Some activity on the Hexham Borough bench as Castillo starts warming up"},{minute:21,type:GENERIC,description:"Striker Diaz is brought down by the big centre half, but the ref waves it away"},{minute:33,type:YELLOWCARD,description:"Yellow card for Mcquillen (Hexham Borough)"},{minute:40,type:GENERIC,description:"Some activity on the Cross Heath bench as Spencer starts warming up"},{minute:53,type:GENERIC,description:"Some activity on the Hexham Borough bench as Patterson starts warming up"},{minute:81,type:INJURY,description:"Cole (Hexham Borough) seems to be limping slightly"},{minute:84,type:GENERIC,description:"Defender Moore (Cross Heath) hoofs the ball upfield"},{minute:92,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"}]}},{has_run:true,home_name:"Shirdley Hill",week:1,away_name:"Chapel Olympic",result:{home_goals:[{time:90,scorer_id:"Mckenzie Reyes"},{time:43,scorer_id:"Kian Mc Cart"},{time:52,scorer_id:"Luca Ferguson"}],first_half_length:51,second_half_length:48,gate:188,away_goals:[],match_events:[{minute:4,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:17,type:GENERIC,description:"Meaty Shirdley Hill defender Lopez heads the ball clear"},{minute:20,type:YELLOWCARD,description:"Yellow card for Domville (Chapel Olympic)"},{minute:45,type:GENERIC,description:"Shirdley Hill's Reyes jogs up the channel"},{minute:47,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is holding his head in frustration"},{minute:48,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:58,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:61,type:INJURY,description:"Fernandez (Chapel Olympic) seems to be limping slightly"},{minute:62,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:63,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:65,type:GENERIC,description:"A burst of noise from the stands to encourage the Shirdley Hill players"},{minute:73,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is holding his head in frustration"},{minute:84,type:GENERIC,description:"The ref is talking to Bennett (Chapel Olympic) after a vicious tackle"}]}},{has_run:true,home_name:"Hadleigh Albion",week:1,away_name:"Saffron Olympic",result:{home_goals:[{time:39,scorer_id:"Leon Gordon"},{time:27,scorer_id:"Andrew Bungard"}],first_half_length:46,second_half_length:47,gate:145,away_goals:[],match_events:[{minute:17,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kinlan starts warming up"},{minute:18,type:GENERIC,description:"Saffron Olympic's fans are singing a rude song about Kai Gomez"},{minute:18,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Henderson starts warming up"},{minute:18,type:INJURY,description:"The physio comes on to see to Carter (Saffron Olympic)"},{minute:37,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:40,type:YELLOWCARD,description:"Yellow card for Shaw (Saffron Olympic)"},{minute:44,type:INJURY,description:"Southway (Saffron Olympic) writhes on the floor after tripping over the ball"},{minute:60,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Mitchell starts warming up"},{minute:61,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:74,type:INJURY,description:"Marshall (Hadleigh Albion) has broken his nose but is playing on"},{minute:79,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:90,type:GENERIC,description:"Wright (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:91,type:GENERIC,description:"Saffron Olympic are on the counter-attack"}]}},{has_run:true,home_name:Burscough,week:1,away_name:Wroxeter,result:{home_goals:[{time:11,scorer_id:"Cian Medina"}],first_half_length:50,second_half_length:51,gate:211,away_goals:[{time:14,scorer_id:"Morgan Flores"}],match_events:[{minute:19,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:24,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Shelsher some instructions"},{minute:30,type:YELLOWCARD,description:"Yellow card for Flores (Wroxeter)"},{minute:36,type:GENERIC,description:"Wroxeter's manager Jayden Martin is furious with the referee"},{minute:36,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:37,type:GENERIC,description:"Meaty Burscough defender Howard heads the ball clear"},{minute:40,type:GENERIC,description:"Defender Lowsley (Burscough) clears the ball for a throw-in"},{minute:42,type:GENERIC,description:"Sanders (Burscough) given a lecture by the ref"},{minute:52,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:76,type:INJURY,description:"The physio comes on to see to Selvaratnam (Wroxeter)"},{minute:94,type:GENERIC,description:"The travelling Wroxeter supporters are shouting abuse at the home fans"}]}},{has_run:true,home_name:Melton,week:1,away_name:"Alsager Town",result:{home_goals:[],first_half_length:48,second_half_length:48,gate:135,away_goals:[],match_events:[{minute:9,type:GENERIC,description:"Alsager Town are on the counter-attack"},{minute:12,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:18,type:INJURY,description:"Young (Alsager Town) is calling for the physio"},{minute:18,type:GENERIC,description:"Turner (Alsager Town) seems to be getting a stern warning from the ref"},{minute:20,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:20,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:24,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:30,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:42,type:GENERIC,description:"Upadhyad (Melton) seems to be getting a stern warning from the ref"},{minute:53,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"},{minute:63,type:YELLOWCARD,description:"Yellow card for Freeman (Melton)"},{minute:72,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:72,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:77,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"}]}},{has_run:true,home_name:"Cross Heath",week:2,away_name:Horsforth,result:{home_goals:[{time:51,scorer_id:"Ellis Scott"},{time:21,scorer_id:"Elijah Clark"}],first_half_length:51,second_half_length:47,gate:268,away_goals:[{time:95,scorer_id:"Matthew Allen"},{time:17,scorer_id:"Charles Gonzales"}],match_events:[{minute:8,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:9,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:12,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:17,type:GENERIC,description:"Some activity on the Cross Heath bench as Clark starts warming up"},{minute:43,type:GENERIC,description:"Daniels (Cross Heath) given a lecture by the ref"},{minute:48,type:GENERIC,description:"Some activity on the Horsforth bench as Nichols starts warming up"},{minute:62,type:YELLOWCARD,description:"Yellow card for Scott (Cross Heath)"},{minute:68,type:GENERIC,description:"The travelling Horsforth supporters are shouting abuse at the home fans"},{minute:68,type:GENERIC,description:"Pierce (Horsforth) seems to be getting a stern warning from the ref"},{minute:75,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:97,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"}]}},{has_run:true,home_name:"Wheatley Harriers",week:2,away_name:"Shirdley Hill",result:{home_goals:[{time:67,scorer_id:"Jacob Stone"},{time:2,scorer_id:"Finn Gordon"}],first_half_length:51,second_half_length:47,gate:175,away_goals:[{time:81,scorer_id:"Callum Ellis"},{time:92,scorer_id:"Callum Ellis"}],match_events:[{minute:10,type:GENERIC,description:"Shirdley Hill's Myers jogs up the channel"},{minute:12,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:23,type:GENERIC,description:"The travelling Shirdley Hill supporters are shouting abuse at the home fans"},{minute:28,type:INJURY,description:"The physio comes on to see to Martinez (Shirdley Hill)"},{minute:31,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:34,type:INJURY,description:"Henry (Shirdley Hill) is calling for the physio"},{minute:35,type:YELLOWCARD,description:"Yellow card for Mc Cart (Shirdley Hill)"},{minute:54,type:GENERIC,description:"Meaty Shirdley Hill defender Lopez heads the ball clear"},{minute:85,type:GENERIC,description:"A burst of noise from the stands to encourage the Shirdley Hill players"},{minute:86,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:94,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"}]}},{has_run:true,home_name:"Hexham Borough",week:2,away_name:"Hadleigh Albion",result:{home_goals:[],first_half_length:46,second_half_length:47,gate:307,away_goals:[],match_events:[{minute:3,type:INJURY,description:"Edeson (Hadleigh Albion) is calling for the physio"},{minute:4,type:GENERIC,description:"Striker Diaz is brought down by the big centre half, but the ref waves it away"},{minute:8,type:INJURY,description:"Meath (Hexham Borough) goes down after colliding with the opposing defender"},{minute:12,type:GENERIC,description:"A long ball from Hadleigh Albion but Mc Cart can't quite get to it"},{minute:18,type:GENERIC,description:"A burst of noise from the stands to encourage the Hadleigh Albion players"},{minute:22,type:GENERIC,description:"Some activity on the Hexham Borough bench as Foster starts warming up"},{minute:23,type:GENERIC,description:"Striker Mc Cart is brought down by the big centre half, but the ref waves it away"},{minute:38,type:GENERIC,description:"Striker Cole is brought down by the big centre half, but the ref waves it away"},{minute:44,type:GENERIC,description:"Defender Sanchez (Hexham Borough) clears the ball for a throw-in"},{minute:61,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"},{minute:78,type:GENERIC,description:"Hexham Borough's Huth jogs up the channel"},{minute:80,type:INJURY,description:"Bennett (Hexham Borough) goes down after colliding with the opposing defender"},{minute:87,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:88,type:GENERIC,description:"Burly Hadleigh Albion defender Bungard cuts out the attack with a mean sliding tackle"},{minute:91,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"}]}},{has_run:true,home_name:"Chapel Olympic",week:2,away_name:Burscough,result:{home_goals:[{time:23,scorer_id:"Cody Mcquillen"},{time:45,scorer_id:"Cody Mcquillen"}],first_half_length:47,second_half_length:46,gate:220,away_goals:[],match_events:[{minute:6,type:GENERIC,description:"Burly Chapel Olympic defender Fernandez cuts out the attack with a mean sliding tackle"},{minute:25,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"},{minute:36,type:GENERIC,description:"Burscough's Howard jogs up the channel"},{minute:38,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:51,type:GENERIC,description:"Defender Shaw (Chapel Olympic) hoofs the ball upfield"},{minute:57,type:GENERIC,description:"Meaty Chapel Olympic defender Patel heads the ball clear"},{minute:65,type:GENERIC,description:"Meaty Burscough defender Howard heads the ball clear"},{minute:67,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"},{minute:68,type:INJURY,description:"Bennett (Chapel Olympic) seems to be limping slightly"},{minute:80,type:INJURY,description:"The physio comes on to see to Bailey (Burscough)"},{minute:89,type:GENERIC,description:"A burst of noise from the stands to encourage the Chapel Olympic players"}]}},{has_run:true,home_name:"Saffron Olympic",week:2,away_name:Melton,result:{home_goals:[],first_half_length:52,second_half_length:50,gate:192,away_goals:[{time:39,scorer_id:"Elliott Dixon"}],match_events:[{minute:11,type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:25,type:GENERIC,description:"Saffron Olympic's fans are singing a rude song about Kai Gomez"},{minute:26,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is holding his head in frustration"},{minute:33,type:YELLOWCARD,description:"Yellow card for Dixon (Melton)"},{minute:37,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:43,type:INJURY,description:"Wallace (Melton) is calling for the physio"},{minute:45,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:55,type:GENERIC,description:"The ref is talking to Hunt (Saffron Olympic) after a vicious tackle"},{minute:56,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:57,type:GENERIC,description:"Some activity on the Melton bench as Bryant starts warming up"},{minute:77,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:90,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:95,type:YELLOWCARD,description:"Yellow card for Turner (Saffron Olympic)"},{minute:99,type:GENERIC,description:"Wallace (Melton) given a lecture by the ref"}]}},{has_run:true,home_name:Wroxeter,week:2,away_name:"Alsager Town",result:{home_goals:[],first_half_length:51,second_half_length:46,gate:282,away_goals:[{time:8,scorer_id:"Toby Khambaita"},{time:96,scorer_id:"Riley Green"},{time:18,scorer_id:"Gabriel Wright"}],match_events:[{minute:1,type:YELLOWCARD,description:"Yellow card for Bailey (Wroxeter)"},{minute:8,type:GENERIC,description:"Some activity on the Wroxeter bench as Rogers starts warming up"},{minute:16,type:GENERIC,description:"Striker Schmidt is brought down by the big centre half, but the ref waves it away"},{minute:16,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"},{minute:29,type:GENERIC,description:"Some activity on the Wroxeter bench as Rogers starts warming up"},{minute:33,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:34,type:INJURY,description:"Howard (Alsager Town) is calling for the physio"},{minute:36,type:GENERIC,description:"Burly Wroxeter defender Wood cuts out the attack with a mean sliding tackle"},{minute:62,type:GENERIC,description:"Khambaita (Alsager Town) given a lecture by the ref"},{minute:75,type:GENERIC,description:"Defender Jackson (Wroxeter) clears the ball for a throw-in"},{minute:92,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"}]}},{has_run:true,home_name:Horsforth,week:3,away_name:"Shirdley Hill",result:{home_goals:[],first_half_length:48,second_half_length:51,gate:311,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:12,type:GENERIC,description:"Meaty Horsforth defender Pierce heads the ball clear"},{minute:15,type:GENERIC,description:"Meaty Horsforth defender Nelson heads the ball clear"},{minute:17,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:24,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:28,type:GENERIC,description:"Some activity on the Horsforth bench as Alvarez starts warming up"},{minute:56,type:INJURY,description:"Cole (Horsforth) is calling for the physio"},{minute:63,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:75,type:GENERIC,description:"Horsforth Striker Witte is caught offside"},{minute:79,type:INJURY,description:"Cole (Horsforth) is calling for the physio"},{minute:85,type:GENERIC,description:"Some activity on the Horsforth bench as Nichols starts warming up"},{minute:92,type:YELLOWCARD,description:"Yellow card for Burns (Horsforth)"}]}},{has_run:true,home_name:"Hadleigh Albion",week:3,away_name:"Cross Heath",result:{home_goals:[{time:69,scorer_id:"Leon Gordon"}],first_half_length:47,second_half_length:48,gate:245,away_goals:[],match_events:[{minute:2,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub Marshall some instructions"},{minute:10,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:21,type:GENERIC,description:"Defender Bungard (Hadleigh Albion) clears the ball for a throw-in"},{minute:24,type:GENERIC,description:"Striker Ferguson is brought down by the big centre half, but the ref waves it away"},{minute:25,type:GENERIC,description:"Cross Heath manager Sam Ellis seems to be giving sub Spencer some instructions"},{minute:32,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:55,type:YELLOWCARD,description:"Yellow card for Mitchell (Hadleigh Albion)"},{minute:71,type:GENERIC,description:"A burst of noise from the stands to encourage the Hadleigh Albion players"},{minute:73,type:GENERIC,description:"Flores (Cross Heath) given a lecture by the ref"},{minute:77,type:GENERIC,description:"The Hadleigh Albion fans are chanting Freddie Gibson's name"},{minute:80,type:GENERIC,description:"Meaty Hadleigh Albion defender Bungard heads the ball clear"},{minute:92,type:INJURY,description:"The physio comes on to see to Moore (Cross Heath)"}]}},{has_run:true,home_name:Burscough,week:3,away_name:"Wheatley Harriers",result:{home_goals:[{time:11,scorer_id:"Cian Medina"},{time:72,scorer_id:"Jake Sanders"},{time:9,scorer_id:"Jake Sanders"},{time:64,scorer_id:"Cian Medina"},{time:55,scorer_id:"Cian Medina"}],first_half_length:49,second_half_length:47,gate:240,away_goals:[{time:20,scorer_id:"Finn Gordon"},{time:4,scorer_id:"Jacob Stone"},{time:25,scorer_id:"Finn Gordon"}],match_events:[{minute:8,type:GENERIC,description:"Burly Wheatley Harriers defender Dissanayake cuts out the attack with a mean sliding tackle"},{minute:11,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:12,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:13,type:YELLOWCARD,description:"Yellow card for Stone (Wheatley Harriers)"},{minute:16,type:GENERIC,description:"Meaty Burscough defender Howard heads the ball clear"},{minute:21,type:INJURY,description:"Bryant (Burscough) is calling for the physio"},{minute:24,type:INJURY,description:"Gordon (Wheatley Harriers) is calling for the physio"},{minute:26,type:GENERIC,description:"The ref is talking to Burns (Wheatley Harriers) after a vicious tackle"},{minute:42,type:GENERIC,description:"Defender Marshall (Burscough) clears the ball for a throw-in"},{minute:45,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:52,type:GENERIC,description:"Meaty Burscough defender Marshall heads the ball clear"},{minute:54,type:GENERIC,description:"Wheatley Harriers's fans are singing a rude song about Toby Cabrera"},{minute:56,type:GENERIC,description:"Wheatley Harriers sub Kinlan seems to be tucking into a pie!"},{minute:80,type:GENERIC,description:"Wheatley Harriers manager Toby Cabrera seems to be giving sub Gelson some instructions"},{minute:86,type:GENERIC,description:"White (Burscough) given a lecture by the ref"},{minute:88,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Kinlan some instructions"},{minute:89,type:GENERIC,description:"The travelling Wheatley Harriers supporters are shouting abuse at the home fans"}]}},{has_run:true,home_name:Melton,week:3,away_name:"Hexham Borough",result:{home_goals:[{time:20,scorer_id:"Isaac James"}],first_half_length:48,second_half_length:52,gate:225,away_goals:[{time:22,scorer_id:"Lewis Diaz"},{time:9,scorer_id:"Oliver Cole"}],match_events:[{minute:17,type:GENERIC,description:"Some activity on the Hexham Borough bench as Harrison starts warming up"},{minute:20,type:GENERIC,description:"The ref is talking to Cole (Hexham Borough) after a vicious tackle"},{minute:24,type:GENERIC,description:"A burst of noise from the stands to encourage the Hexham Borough players"},{minute:28,type:GENERIC,description:"Some activity on the Melton bench as Bryant starts warming up"},{minute:46,type:INJURY,description:"The physio comes on to see to Huth (Hexham Borough)"},{minute:52,type:GENERIC,description:"Melton's fans are singing a rude song about Gabriel Kennedy"},{minute:54,type:GENERIC,description:"Some activity on the Hexham Borough bench as Wallace starts warming up"},{minute:63,type:GENERIC,description:"Melton are on the counter-attack"},{minute:77,type:GENERIC,description:"The travelling Hexham Borough supporters are shouting abuse at the home fans"},{minute:81,type:GENERIC,description:"Melton sub Murphy seems to be tucking into a pie!"},{minute:89,type:GENERIC,description:"Hexham Borough are on the counter-attack"},{minute:92,type:GENERIC,description:"The ref is talking to Meath (Hexham Borough) after a vicious tackle"},{minute:99,type:YELLOWCARD,description:"Yellow card for Cole (Hexham Borough)"}]}},{has_run:true,home_name:"Alsager Town",week:3,away_name:"Chapel Olympic",result:{home_goals:[{time:38,scorer_id:"Andrew West"}],first_half_length:48,second_half_length:52,gate:258,away_goals:[{time:65,scorer_id:"Iwan Bennett"}],match_events:[{minute:7,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:24,type:GENERIC,description:"Alsager Town's fans are singing a rude song about Jonathan Henderson"},{minute:24,type:GENERIC,description:"Chapel Olympic's Patel jogs up the channel"},{minute:35,type:GENERIC,description:"Alsager Town's Howard jogs up the channel"},{minute:36,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:66,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Mitchell some instructions"},{minute:76,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:86,type:GENERIC,description:"Some activity on the Alsager Town bench as Bennett starts warming up"},{minute:89,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:92,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:99,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"}]}},{has_run:true,home_name:Wroxeter,week:3,away_name:"Saffron Olympic",result:{home_goals:[{time:19,scorer_id:"Sebastian Wood"}],first_half_length:48,second_half_length:51,gate:148,away_goals:[{time:23,scorer_id:"Adam Hernandez"}],match_events:[{minute:1,type:GENERIC,description:"Some activity on the Wroxeter bench as Turner starts warming up"},{minute:17,type:GENERIC,description:"Defender Garcia (Saffron Olympic) clears the ball for a throw-in"},{minute:20,type:YELLOWCARD,description:"Yellow card for Jackson (Saffron Olympic)"},{minute:28,type:GENERIC,description:"Happer (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:33,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:35,type:GENERIC,description:"Saffron Olympic are on the counter-attack"},{minute:38,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:39,type:INJURY,description:"Howard (Wroxeter) is calling for the physio"},{minute:50,type:GENERIC,description:"Striker Turner is brought down by the big centre half, but the ref waves it away"},{minute:54,type:GENERIC,description:"Meaty Wroxeter defender Wood heads the ball clear"},{minute:58,type:GENERIC,description:"The Wroxeter manager points angrily at keeper Howard"},{minute:62,type:GENERIC,description:"A long ball from Saffron Olympic but Turner can't quite get to it"},{minute:65,type:INJURY,description:"Jackson (Wroxeter) writhes on the floor after tripping over the ball"},{minute:75,type:GENERIC,description:"Wroxeter's Jackson jogs up the channel"},{minute:92,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:92,type:GENERIC,description:"Flores (Wroxeter) seems to be getting a stern warning from the ref"}]}},{has_run:true,home_name:"Hadleigh Albion",week:4,away_name:Horsforth,result:{home_goals:[{time:35,scorer_id:"Theodore Marshall"},{time:29,scorer_id:"Aaron Meath"},{time:94,scorer_id:"Morgan Mc Cart"}],first_half_length:51,second_half_length:51,gate:216,away_goals:[{time:11,scorer_id:"Charles Gonzales"},{time:4,scorer_id:"Owain Witte"}],match_events:[{minute:26,type:GENERIC,description:"Hadleigh Albion Striker Gordon is caught offside"},{minute:26,type:GENERIC,description:"Horsforth sub Bailey seems to be tucking into a pie!"},{minute:33,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:67,type:GENERIC,description:"Burly Horsforth defender Cole cuts out the attack with a mean sliding tackle"},{minute:75,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub Woods some instructions"},{minute:85,type:GENERIC,description:"Defender Wright (Hadleigh Albion) clears the ball for a throw-in"},{minute:87,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:88,type:YELLOWCARD,description:"Yellow card for Edeson (Hadleigh Albion)"},{minute:93,type:GENERIC,description:"A long ball from Hadleigh Albion but Mc Cart can't quite get to it"},{minute:101,type:YELLOWCARD,description:"Yellow card for Mitchell (Hadleigh Albion)"}]}},{has_run:true,home_name:"Shirdley Hill",week:4,away_name:Burscough,result:{home_goals:[],first_half_length:46,second_half_length:50,gate:236,away_goals:[{time:18,scorer_id:"Jake Sanders"}],match_events:[{type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:6,type:YELLOWCARD,description:"Yellow card for Bryant (Burscough)"},{minute:12,type:INJURY,description:"Gonzales (Shirdley Hill) has broken his nose but is playing on"},{minute:30,type:GENERIC,description:"Some activity on the Burscough bench as Peters starts warming up"},{minute:37,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:37,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:42,type:GENERIC,description:"Striker Ellis is brought down by the big centre half, but the ref waves it away"},{minute:51,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"},{minute:74,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Khambaita starts warming up"},{minute:76,type:GENERIC,description:"A long ball from Shirdley Hill but Gonzales can't quite get to it"},{minute:77,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Hawa starts warming up"},{minute:79,type:GENERIC,description:"Burly Shirdley Hill defender Lopez cuts out the attack with a mean sliding tackle"},{minute:82,type:GENERIC,description:"Meaty Burscough defender Lowsley heads the ball clear"},{minute:85,type:GENERIC,description:"Ferguson (Shirdley Hill) seems to be getting a stern warning from the ref"},{minute:86,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is holding his head in frustration"},{minute:90,type:GENERIC,description:"Flores (Burscough) given a lecture by the ref"},{minute:95,type:INJURY,description:"Ellis (Shirdley Hill) seems to be limping slightly"}]}},{has_run:true,home_name:"Cross Heath",week:4,away_name:Melton,result:{home_goals:[{time:20,scorer_id:"Jude Daniels"},{time:69,scorer_id:"Gethin Ferguson"},{time:15,scorer_id:"Elijah Clark"}],first_half_length:49,second_half_length:46,gate:249,away_goals:[{time:18,scorer_id:"Isaac James"},{time:51,scorer_id:"Isaac James"}],match_events:[{minute:1,type:GENERIC,description:"Some activity on the Melton bench as Vasquez starts warming up"},{minute:2,type:INJURY,description:"The physio comes on to see to Ferguson (Cross Heath)"},{minute:3,type:INJURY,description:"Grant (Cross Heath) is calling for the physio"},{minute:5,type:GENERIC,description:"Striker James is brought down by the big centre half, but the ref waves it away"},{minute:10,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:17,type:YELLOWCARD,description:"Yellow card for Cox (Cross Heath)"},{minute:41,type:GENERIC,description:"Some activity on the Cross Heath bench as Clark starts warming up"},{minute:43,type:GENERIC,description:"Rogers (Melton) seems to be getting a stern warning from the ref"},{minute:60,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:61,type:INJURY,description:"Grant (Cross Heath) seems to be limping slightly"},{minute:69,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:70,type:GENERIC,description:"A cheer from the Melton fans as a rude inflatable is thrown on the pitch"},{minute:72,type:GENERIC,description:"Some activity on the Cross Heath bench as Virji starts warming up"},{minute:72,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:86,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:91,type:GENERIC,description:"Burly Cross Heath defender Daniels cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:"Wheatley Harriers",week:4,away_name:"Alsager Town",result:{home_goals:[],first_half_length:47,second_half_length:47,gate:287,away_goals:[],match_events:[{minute:7,type:GENERIC,description:"Defender Stone (Wheatley Harriers) clears the ball for a throw-in"},{minute:7,type:GENERIC,description:"Striker Stone is brought down by the big centre half, but the ref waves it away"},{minute:10,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) hoofs the ball upfield"},{minute:14,type:GENERIC,description:"Wheatley Harriers Striker Gordon is caught offside"},{minute:20,type:INJURY,description:"Khambaita (Alsager Town) seems to be limping slightly"},{minute:29,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:34,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:38,type:GENERIC,description:"The ref is talking to Stone (Wheatley Harriers) after a vicious tackle"},{minute:39,type:GENERIC,description:"Defender Hill (Alsager Town) hoofs the ball upfield"},{minute:44,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:46,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:49,type:YELLOWCARD,description:"Yellow card for Hoffman (Wheatley Harriers)"},{minute:81,type:INJURY,description:"Bennett (Wheatley Harriers) goes down after colliding with the opposing defender"},{minute:84,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"}]}},{has_run:true,home_name:"Hexham Borough",week:4,away_name:Wroxeter,result:{home_goals:[{time:25,scorer_id:"Lewis Diaz"},{time:51,scorer_id:"Frederick Bennett"},{time:100,scorer_id:"Lewis Diaz"},{time:60,scorer_id:"Lewis Diaz"}],first_half_length:50,second_half_length:52,gate:293,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:18,type:INJURY,description:"Perez (Hexham Borough) is calling for the physio"},{minute:28,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is furious with the referee"},{minute:32,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:39,type:GENERIC,description:"The ref is talking to Weild (Hexham Borough) after a vicious tackle"},{minute:40,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:44,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:45,type:INJURY,description:"Weild (Hexham Borough) has broken his nose but is playing on"},{minute:49,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:54,type:GENERIC,description:"The Wroxeter fans are chanting Jayden Martin's name"},{minute:66,type:GENERIC,description:"Burly Wroxeter defender Jackson cuts out the attack with a mean sliding tackle"},{minute:68,type:YELLOWCARD,description:"Yellow card for Wilson (Wroxeter)"},{minute:72,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:81,type:GENERIC,description:"Defender Sanchez (Hexham Borough) hoofs the ball upfield"},{minute:87,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:96,type:GENERIC,description:"Hexham Borough Striker Cole is caught offside"}]}},{has_run:true,home_name:"Chapel Olympic",week:4,away_name:"Saffron Olympic",result:{home_goals:[],first_half_length:51,second_half_length:49,gate:178,away_goals:[],match_events:[{minute:19,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:20,type:GENERIC,description:"Saffron Olympic's Carter jogs up the channel"},{minute:38,type:GENERIC,description:"Defender Domville (Chapel Olympic) hoofs the ball upfield"},{minute:44,type:GENERIC,description:"Bennett (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:61,type:INJURY,description:"Brown (Chapel Olympic) writhes on the floor after tripping over the ball"},{minute:66,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:70,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:84,type:GENERIC,description:"Meaty Chapel Olympic defender Shaw heads the ball clear"},{minute:95,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"},{minute:98,type:GENERIC,description:"Saffron Olympic's Carter jogs up the channel"}]}},{has_run:true,home_name:Horsforth,week:5,away_name:Burscough,result:{home_goals:[{time:54,scorer_id:"Lucas Edwards"}],first_half_length:46,second_half_length:47,gate:281,away_goals:[],match_events:[{type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:23,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Myers some instructions"},{minute:29,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"},{minute:33,type:YELLOWCARD,description:"Yellow card for Marshall (Burscough)"},{minute:49,type:YELLOWCARD,description:"Yellow card for Bailey (Burscough)"},{minute:62,type:GENERIC,description:"Burscough's fans are singing a rude song about Louis Hansen"},{minute:64,type:GENERIC,description:"Witte (Horsforth) seems to be getting a stern warning from the ref"},{minute:77,type:GENERIC,description:"Cole (Horsforth) seems to be getting a stern warning from the ref"},{minute:79,type:GENERIC,description:"Horsforth manager Dexter Butler seems to be giving sub Alvarez some instructions"},{minute:83,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:83,type:INJURY,description:"Edwards (Horsforth) seems to be limping slightly"}]}},{has_run:true,home_name:Melton,week:5,away_name:"Hadleigh Albion",result:{home_goals:[],first_half_length:48,second_half_length:48,gate:235,away_goals:[{time:91,scorer_id:"Morgan Mc Cart"}],match_events:[{minute:15,type:GENERIC,description:"Defender Rogers (Melton) clears the ball for a throw-in"},{minute:16,type:INJURY,description:"Mitchell (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:24,type:GENERIC,description:"Hadleigh Albion sub Woods seems to be tucking into a pie!"},{minute:27,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as James starts warming up"},{minute:29,type:GENERIC,description:"Defender Williams (Melton) hoofs the ball upfield"},{minute:31,type:GENERIC,description:"Some activity on the Melton bench as Rice starts warming up"},{minute:37,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:42,type:YELLOWCARD,description:"Yellow card for Edeson (Hadleigh Albion)"},{minute:46,type:GENERIC,description:"Melton are on the counter-attack"},{minute:46,type:YELLOWCARD,description:"Yellow card for Mitchell (Hadleigh Albion)"},{minute:47,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Rice some instructions"},{minute:55,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:56,type:GENERIC,description:"Melton sub Hernandez seems to be tucking into a pie!"},{minute:64,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Marshall starts warming up"},{minute:92,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:93,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"}]}},{has_run:true,home_name:"Alsager Town",week:5,away_name:"Shirdley Hill",result:{home_goals:[{time:14,scorer_id:"Gabriel Wright"},{time:5,scorer_id:"Jonathan Schmidt"}],first_half_length:49,second_half_length:50,gate:186,away_goals:[{time:49,scorer_id:"Jayden Gonzales"},{time:4,scorer_id:"Callum Ellis"},{time:70,scorer_id:"Muhammad Reynolds"}],match_events:[{type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:25,type:GENERIC,description:"Striker Schmidt is brought down by the big centre half, but the ref waves it away"},{minute:30,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:33,type:INJURY,description:"Mc Cart (Shirdley Hill) writhes on the floor after tripping over the ball"},{minute:38,type:GENERIC,description:"Burly Alsager Town defender Hill cuts out the attack with a mean sliding tackle"},{minute:42,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:67,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Stephens some instructions"},{minute:67,type:GENERIC,description:"Shirdley Hill Striker Ellis is caught offside"},{minute:69,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:78,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:83,type:GENERIC,description:"Some activity on the Alsager Town bench as Kennedy starts warming up"}]}},{has_run:true,home_name:Wroxeter,week:5,away_name:"Cross Heath",result:{home_goals:[],first_half_length:49,second_half_length:46,gate:258,away_goals:[],match_events:[{minute:2,type:GENERIC,description:"Some activity on the Wroxeter bench as Herrera starts warming up"},{minute:3,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:8,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:14,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:16,type:YELLOWCARD,description:"Yellow card for Ruiz (Cross Heath)"},{minute:18,type:GENERIC,description:"Defender Daniels (Cross Heath) hoofs the ball upfield"},{minute:50,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Mills some instructions"},{minute:51,type:GENERIC,description:"Some activity on the Cross Heath bench as Cabrera starts warming up"},{minute:55,type:GENERIC,description:"The ref is talking to Ferguson (Cross Heath) after a vicious tackle"},{minute:60,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:69,type:GENERIC,description:"The ref is talking to Moore (Cross Heath) after a vicious tackle"},{minute:85,type:GENERIC,description:"Meaty Cross Heath defender Flores heads the ball clear"}]}},{has_run:true,home_name:"Saffron Olympic",week:5,away_name:"Wheatley Harriers",result:{home_goals:[{time:80,scorer_id:"Louis Turner"}],first_half_length:51,second_half_length:46,gate:198,away_goals:[{time:19,scorer_id:"Jacob Stone"}],match_events:[{minute:11,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:21,type:GENERIC,description:"Burly Wheatley Harriers defender Hamilton cuts out the attack with a mean sliding tackle"},{minute:24,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:33,type:GENERIC,description:"Garcia (Saffron Olympic) given a lecture by the ref"},{minute:40,type:YELLOWCARD,description:"Yellow card for Gordon (Wheatley Harriers)"},{minute:44,type:GENERIC,description:"Striker Turner is brought down by the big centre half, but the ref waves it away"},{minute:59,type:GENERIC,description:"Wheatley Harriers manager Toby Cabrera seems to be giving sub Perry some instructions"},{minute:68,type:GENERIC,description:"Rice (Wheatley Harriers) seems to be getting a stern warning from the ref"},{minute:69,type:GENERIC,description:"Saffron Olympic manager Kai Gomez seems to be giving sub Daniels some instructions"},{minute:75,type:GENERIC,description:"Meaty Wheatley Harriers defender Hamilton heads the ball clear"},{minute:80,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:90,type:GENERIC,description:"Wheatley Harriers are on the counter-attack"}]}},{has_run:true,home_name:"Chapel Olympic",week:5,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:50,second_half_length:46,gate:180,away_goals:[],match_events:[{minute:15,type:INJURY,description:"Lee (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:18,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:26,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:33,type:GENERIC,description:"Hexham Borough's Sanchez jogs up the channel"},{minute:45,type:GENERIC,description:"Shaw (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:58,type:GENERIC,description:"Defender Murphy (Hexham Borough) clears the ball for a throw-in"},{minute:63,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:67,type:GENERIC,description:"Hexham Borough's Murphy jogs up the channel"},{minute:89,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:92,type:INJURY,description:"Cole (Hexham Borough) has broken his nose but is playing on"}]}},{has_run:true,home_name:Melton,week:6,away_name:Horsforth,result:{home_goals:[{time:8,scorer_id:"Elliott Dixon"},{time:87,scorer_id:"Blake Griffin"}],first_half_length:47,second_half_length:47,gate:242,away_goals:[{time:27,scorer_id:"Matthew Allen"},{time:91,scorer_id:"Nathan Burns"}],match_events:[{type:GENERIC,description:"Defender Nelson (Horsforth) clears the ball for a throw-in"},{type:INJURY,description:"The physio comes on to see to Griffin (Melton)"},{minute:3,type:GENERIC,description:"Meaty Horsforth defender Nelson heads the ball clear"},{minute:7,type:YELLOWCARD,description:"Yellow card for Gonzales (Horsforth)"},{minute:9,type:GENERIC,description:"Defender Cole (Horsforth) hoofs the ball upfield"},{minute:35,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:58,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:67,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:70,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Hernandez some instructions"},{minute:71,type:GENERIC,description:"Some activity on the Horsforth bench as Pepall starts warming up"},{minute:86,type:INJURY,description:"Upadhyad (Melton) goes down after colliding with the opposing defender"}]}},{has_run:true,home_name:Burscough,week:6,away_name:"Alsager Town",result:{home_goals:[{time:52,scorer_id:"Cian Medina"}],first_half_length:47,second_half_length:47,gate:278,away_goals:[],match_events:[{minute:19,type:INJURY,description:"Nguyen (Burscough) writhes on the floor after tripping over the ball"},{minute:27,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is furious with the referee"},{minute:34,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:35,type:GENERIC,description:"Defender Howard (Burscough) clears the ball for a throw-in"},{minute:35,type:GENERIC,description:"Alsager Town manager Jonathan Henderson seems to be giving sub Howard some instructions"},{minute:41,type:GENERIC,description:"The ref is talking to White (Burscough) after a vicious tackle"},{minute:49,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:49,type:YELLOWCARD,description:"Yellow card for West (Alsager Town)"},{minute:60,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:66,type:YELLOWCARD,description:"Yellow card for White (Burscough)"},{minute:74,type:GENERIC,description:"Burscough's Simmons jogs up the channel"}]}},{has_run:true,home_name:"Hadleigh Albion",week:6,away_name:Wroxeter,result:{home_goals:[{time:78,scorer_id:"Aaron Meath"}],first_half_length:46,second_half_length:49,gate:340,away_goals:[{time:27,scorer_id:"Harley Woods"},{time:81,scorer_id:"Nicholas Selvaratnam"}],match_events:[{minute:7,type:GENERIC,description:"The ref is talking to Bungard (Hadleigh Albion) after a vicious tackle"},{minute:9,type:GENERIC,description:"Defender Mitchell (Hadleigh Albion) hoofs the ball upfield"},{minute:15,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Mills some instructions"},{minute:16,type:GENERIC,description:"The travelling Wroxeter supporters are shouting abuse at the home fans"},{minute:38,type:GENERIC,description:"Defender Edeson (Hadleigh Albion) hoofs the ball upfield"},{minute:53,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:61,type:GENERIC,description:"The Wroxeter fans are chanting Jayden Martin's name"},{minute:69,type:GENERIC,description:"Wroxeter's Jackson jogs up the channel"},{minute:72,type:YELLOWCARD,description:"Yellow card for Wright (Hadleigh Albion)"},{minute:86,type:GENERIC,description:"A long ball from Wroxeter but Flores can't quite get to it"}]}},{has_run:true,home_name:"Shirdley Hill",week:6,away_name:"Saffron Olympic",result:{home_goals:[{time:38,scorer_id:"Jayden Gonzales"},{time:91,scorer_id:"Lucas Henry"},{time:45,scorer_id:"Jayden Gonzales"},{time:98,scorer_id:"Callum Ellis"},{time:17,scorer_id:"Jayden Gonzales"}],first_half_length:51,second_half_length:50,gate:227,away_goals:[{time:75,scorer_id:"Louis Turner"},{time:67,scorer_id:"Adam Hernandez"},{time:28,scorer_id:"Blake Thompson"}],match_events:[{minute:12,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:38,type:GENERIC,description:"Turner (Saffron Olympic) given a lecture by the ref"},{minute:43,type:INJURY,description:"The physio comes on to see to Henry (Shirdley Hill)"},{minute:49,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:51,type:INJURY,description:"Reynolds (Shirdley Hill) writhes on the floor after tripping over the ball"},{minute:67,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Hawa starts warming up"},{minute:69,type:GENERIC,description:"Defender Reyes (Shirdley Hill) clears the ball for a throw-in"},{minute:70,type:INJURY,description:"Southway (Saffron Olympic) goes down after colliding with the opposing defender"},{minute:89,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:92,type:GENERIC,description:"A burst of noise from the stands to encourage the Saffron Olympic players"}]}},{has_run:true,home_name:"Cross Heath",week:6,away_name:"Chapel Olympic",result:{home_goals:[{time:44,scorer_id:"Gethin Ferguson"},{time:22,scorer_id:"Gethin Ferguson"},{time:42,scorer_id:"Albert Pierce"}],first_half_length:52,second_half_length:48,gate:180,away_goals:[{time:39,scorer_id:"Cody Mcquillen"},{time:46,scorer_id:"Cody Mcquillen"},{time:23,scorer_id:"Iwan Bennett"},{time:21,scorer_id:"Cody Mcquillen"}],match_events:[{minute:12,type:GENERIC,description:"Defender Shaw (Chapel Olympic) clears the ball for a throw-in"},{minute:17,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:36,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:51,type:GENERIC,description:"Chapel Olympic sub Hoffman seems to be tucking into a pie!"},{minute:52,type:GENERIC,description:"Cross Heath Striker Clark is caught offside"},{minute:62,type:INJURY,description:"Ruiz (Cross Heath) is calling for the physio"},{minute:63,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:65,type:YELLOWCARD,description:"Yellow card for Ruiz (Cross Heath)"},{minute:88,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Fisher starts warming up"},{minute:88,type:GENERIC,description:"Defender Moore (Cross Heath) hoofs the ball upfield"},{minute:90,type:INJURY,description:"Ruiz (Cross Heath) goes down after colliding with the opposing defender"},{minute:93,type:GENERIC,description:"Defender Domville (Chapel Olympic) hoofs the ball upfield"},{minute:98,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"}]}},{has_run:true,home_name:"Wheatley Harriers",week:6,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:51,second_half_length:52,gate:249,away_goals:[{time:60,scorer_id:"Rowan Weild"}],match_events:[{minute:7,type:GENERIC,description:"Burly Wheatley Harriers defender Dissanayake cuts out the attack with a mean sliding tackle"},{minute:21,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Perry starts warming up"},{minute:27,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:45,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:47,type:INJURY,description:"Dissanayake (Wheatley Harriers) goes down after colliding with the opposing defender"},{minute:49,type:GENERIC,description:"The Wheatley Harriers manager points angrily at keeper Burns"},{minute:49,type:GENERIC,description:"A cheer from the Wheatley Harriers fans as a rude inflatable is thrown on the pitch"},{minute:60,type:GENERIC,description:"Gordon (Wheatley Harriers) given a lecture by the ref"},{minute:70,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:74,type:INJURY,description:"Gordon (Wheatley Harriers) is calling for the physio"},{minute:79,type:GENERIC,description:"Hexham Borough Striker Diaz is caught offside"},{minute:99,type:GENERIC,description:"Defender Ruiz (Hexham Borough) hoofs the ball upfield"}]}},{has_run:true,home_name:Horsforth,week:7,away_name:"Alsager Town",result:{home_goals:[],first_half_length:46,second_half_length:51,gate:200,away_goals:[{time:70,scorer_id:"Toby Khambaita"}],match_events:[{type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"},{minute:11,type:INJURY,description:"Turner (Alsager Town) is calling for the physio"},{minute:37,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:48,type:GENERIC,description:"Horsforth Striker Witte is caught offside"},{minute:50,type:GENERIC,description:"The travelling Alsager Town supporters are shouting abuse at the home fans"},{minute:55,type:GENERIC,description:"Alsager Town are on the counter-attack"},{minute:62,type:INJURY,description:"Schmidt (Alsager Town) has broken his nose but is playing on"},{minute:67,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:76,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:85,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:91,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"}]}},{has_run:true,home_name:Wroxeter,week:7,away_name:Melton,result:{home_goals:[],first_half_length:47,second_half_length:49,gate:127,away_goals:[{time:80,scorer_id:"Elliott Dixon"},{time:18,scorer_id:"Isaac James"}],match_events:[{minute:7,type:YELLOWCARD,description:"Yellow card for Bailey (Wroxeter)"},{minute:9,type:GENERIC,description:"A burst of noise from the stands to encourage the Wroxeter players"},{minute:31,type:INJURY,description:"Dixon (Melton) writhes on the floor after tripping over the ball"},{minute:39,type:GENERIC,description:"Melton are on the counter-attack"},{minute:40,type:YELLOWCARD,description:"Yellow card for Selvaratnam (Wroxeter)"},{minute:43,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Bryant some instructions"},{minute:43,type:GENERIC,description:"The ref is talking to Woods (Wroxeter) after a vicious tackle"},{minute:65,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:66,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:74,type:GENERIC,description:"Wallace (Melton) given a lecture by the ref"},{minute:74,type:YELLOWCARD,description:"Yellow card for Griffin (Melton)"}]}},{has_run:true,home_name:"Saffron Olympic",week:7,away_name:Burscough,result:{home_goals:[{time:80,scorer_id:"Harry Flores"}],first_half_length:50,second_half_length:49,gate:200,away_goals:[{time:3,scorer_id:"Jake Sanders"}],match_events:[{minute:22,type:GENERIC,description:"Burscough sub Myers seems to be tucking into a pie!"},{minute:23,type:GENERIC,description:"Defender Lowsley (Burscough) clears the ball for a throw-in"},{minute:25,type:GENERIC,description:"The Saffron Olympic manager points angrily at keeper Happer"},{minute:27,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:35,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:41,type:GENERIC,description:"Carter (Saffron Olympic) given a lecture by the ref"},{minute:73,type:GENERIC,description:"The travelling Burscough supporters are shouting abuse at the home fans"},{minute:76,type:YELLOWCARD,description:"Yellow card for Medina (Burscough)"},{minute:78,type:INJURY,description:"Carter (Saffron Olympic) is calling for the physio"},{minute:89,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:92,type:GENERIC,description:"A long ball from Burscough but Medina can't quite get to it"},{minute:97,type:GENERIC,description:"Striker Sanders is brought down by the big centre half, but the ref waves it away"}]}},{has_run:true,home_name:"Chapel Olympic",week:7,away_name:"Hadleigh Albion",result:{home_goals:[{time:69,scorer_id:"Cody Mcquillen"},{time:53,scorer_id:"Anthony Lee"}],first_half_length:48,second_half_length:49,gate:280,away_goals:[{time:26,scorer_id:"George Jones"},{time:80,scorer_id:"Morgan Mc Cart"}],match_events:[{minute:2,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:2,type:GENERIC,description:"Defender Fernandez (Chapel Olympic) clears the ball for a throw-in"},{minute:7,type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"},{minute:12,type:YELLOWCARD,description:"Yellow card for Patel (Chapel Olympic)"},{minute:23,type:GENERIC,description:"Gordon (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:25,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Hicks some instructions"},{minute:26,type:GENERIC,description:"Patel (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:33,type:GENERIC,description:"The travelling Hadleigh Albion supporters are shouting abuse at the home fans"},{minute:51,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is holding his head in frustration"},{minute:72,type:GENERIC,description:"Striker Mc Cart is brought down by the big centre half, but the ref waves it away"},{minute:86,type:GENERIC,description:"Campbell (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:92,type:GENERIC,description:"The ref is talking to Jones (Hadleigh Albion) after a vicious tackle"}]}},{has_run:true,home_name:"Hexham Borough",week:7,away_name:"Shirdley Hill",result:{home_goals:[{time:82,scorer_id:"Lewis Diaz"}],first_half_length:52,second_half_length:51,gate:239,away_goals:[{time:46,scorer_id:"Luca Ferguson"}],match_events:[{minute:7,type:GENERIC,description:"Burly Hexham Borough defender Ruiz cuts out the attack with a mean sliding tackle"},{minute:12,type:GENERIC,description:"Hexham Borough are on the counter-attack"},{minute:18,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Khambaita starts warming up"},{minute:19,type:GENERIC,description:"Meaty Hexham Borough defender Murphy heads the ball clear"},{minute:36,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Harrison some instructions"},{minute:38,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:40,type:GENERIC,description:"A burst of noise from the stands to encourage the Hexham Borough players"},{minute:41,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:56,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:59,type:GENERIC,description:"Hexham Borough sub Harrison seems to be tucking into a pie!"},{minute:72,type:GENERIC,description:"Striker Diaz is brought down by the big centre half, but the ref waves it away"},{minute:80,type:GENERIC,description:"The travelling Shirdley Hill supporters are shouting abuse at the home fans"}]}},{has_run:true,home_name:"Wheatley Harriers",week:7,away_name:"Cross Heath",result:{home_goals:[{time:92,scorer_id:"Finn Gordon"}],first_half_length:47,second_half_length:47,gate:182,away_goals:[],match_events:[{type:GENERIC,description:"A burst of noise from the stands to encourage the Wheatley Harriers players"},{minute:22,type:GENERIC,description:"Defender Daniels (Cross Heath) hoofs the ball upfield"},{minute:27,type:GENERIC,description:"The Wheatley Harriers manager points angrily at keeper Burns"},{minute:30,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:34,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:42,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is holding his head in frustration"},{minute:45,type:YELLOWCARD,description:"Yellow card for Gardner (Wheatley Harriers)"},{minute:49,type:INJURY,description:"Ferguson (Cross Heath) goes down after colliding with the opposing defender"},{minute:50,type:GENERIC,description:"Cross Heath's manager Sam Ellis is furious with the referee"},{minute:52,type:GENERIC,description:"A long ball from Wheatley Harriers but Stone can't quite get to it"},{minute:71,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:77,type:YELLOWCARD,description:"Yellow card for Hamilton (Wheatley Harriers)"},{minute:79,type:GENERIC,description:"Defender Stone (Wheatley Harriers) hoofs the ball upfield"}]}},{has_run:true,home_name:Wroxeter,week:8,away_name:Horsforth,result:{home_goals:[{time:2,scorer_id:"Samuel Shelsher"}],first_half_length:46,second_half_length:46,gate:211,away_goals:[{time:25,scorer_id:"Oscar Davis"}],match_events:[{minute:2,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:10,type:GENERIC,description:"The travelling Horsforth supporters are shouting abuse at the home fans"},{minute:20,type:GENERIC,description:"Defender Washington (Horsforth) clears the ball for a throw-in"},{minute:27,type:GENERIC,description:"Striker Selvaratnam is brought down by the big centre half, but the ref waves it away"},{minute:46,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:49,type:GENERIC,description:"Defender Wilson (Wroxeter) clears the ball for a throw-in"},{minute:57,type:GENERIC,description:"Wroxeter's manager Jayden Martin is holding his head in frustration"},{minute:61,type:GENERIC,description:"Horsforth sub Alvarez seems to be tucking into a pie!"},{minute:64,type:GENERIC,description:"Burly Horsforth defender Pierce cuts out the attack with a mean sliding tackle"},{minute:65,type:GENERIC,description:"The Wroxeter manager points angrily at keeper Howard"},{minute:79,type:YELLOWCARD,description:"Yellow card for Nelson (Horsforth)"},{minute:80,type:GENERIC,description:"Defender Nelson (Horsforth) hoofs the ball upfield"},{minute:84,type:INJURY,description:"Burns (Horsforth) goes down after colliding with the opposing defender"},{minute:88,type:GENERIC,description:"Meaty Horsforth defender Pierce heads the ball clear"},{minute:89,type:INJURY,description:"Selvaratnam (Wroxeter) seems to be limping slightly"},{minute:90,type:YELLOWCARD,description:"Yellow card for Edwards (Horsforth)"}]}},{has_run:true,home_name:"Alsager Town",week:8,away_name:"Saffron Olympic",result:{home_goals:[],first_half_length:51,second_half_length:49,gate:178,away_goals:[],match_events:[{minute:1,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:9,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:10,type:GENERIC,description:"Some activity on the Alsager Town bench as Kennedy starts warming up"},{minute:15,type:YELLOWCARD,description:"Yellow card for Turner (Alsager Town)"},{minute:15,type:INJURY,description:"Butler (Alsager Town) writhes on the floor after tripping over the ball"},{minute:19,type:GENERIC,description:"The Saffron Olympic manager points angrily at keeper Happer"},{minute:25,type:GENERIC,description:"The ref is talking to Butler (Alsager Town) after a vicious tackle"},{minute:28,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:55,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Stephens starts warming up"},{minute:65,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Mitchell starts warming up"},{minute:68,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Chaisty starts warming up"},{minute:69,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:93,type:GENERIC,description:"A burst of noise from the stands to encourage the Saffron Olympic players"},{minute:98,type:GENERIC,description:"Burly Alsager Town defender Howard cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:Melton,week:8,away_name:"Chapel Olympic",result:{home_goals:[{time:31,scorer_id:"Isaac James"},{time:58,scorer_id:"Blake Griffin"},{time:67,scorer_id:"Blake Griffin"}],first_half_length:50,second_half_length:47,gate:141,away_goals:[{time:19,scorer_id:"Samuel Fernandez"}],match_events:[{minute:4,type:GENERIC,description:"Meaty Melton defender Upadhyad heads the ball clear"},{minute:9,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:9,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is holding his head in frustration"},{minute:12,type:INJURY,description:"Taylor (Melton) seems to be limping slightly"},{minute:14,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"},{minute:14,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:21,type:YELLOWCARD,description:"Yellow card for Taylor (Melton)"},{minute:33,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Fisher some instructions"},{minute:41,type:GENERIC,description:"Chapel Olympic are on the counter-attack"},{minute:43,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:45,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:68,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:76,type:GENERIC,description:"A burst of noise from the stands to encourage the Chapel Olympic players"},{minute:79,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:83,type:GENERIC,description:"Husher (Chapel Olympic) given a lecture by the ref"}]}},{has_run:true,home_name:Burscough,week:8,away_name:"Hexham Borough",result:{home_goals:[{time:92,scorer_id:"Aidan Lowsley"},{time:82,scorer_id:"Tyler Flores"},{time:78,scorer_id:"Jake Sanders"},{time:22,scorer_id:"Cian Medina"}],first_half_length:46,second_half_length:47,gate:328,away_goals:[],match_events:[{minute:14,type:INJURY,description:"Ruiz (Hexham Borough) goes down after colliding with the opposing defender"},{minute:23,type:GENERIC,description:"Burscough sub Huth seems to be tucking into a pie!"},{minute:29,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:36,type:INJURY,description:"Murphy (Hexham Borough) writhes on the floor after tripping over the ball"},{minute:39,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:39,type:GENERIC,description:"Meaty Burscough defender Howard heads the ball clear"},{minute:39,type:GENERIC,description:"Burly Hexham Borough defender Ruiz cuts out the attack with a mean sliding tackle"},{minute:42,type:GENERIC,description:"Defender Simmons (Burscough) hoofs the ball upfield"},{minute:45,type:INJURY,description:"Mcquillen (Hexham Borough) goes down after colliding with the opposing defender"},{minute:49,type:GENERIC,description:"Defender Howard (Burscough) hoofs the ball upfield"},{minute:52,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:60,type:GENERIC,description:"The ref is talking to Sanders (Burscough) after a vicious tackle"},{minute:81,type:INJURY,description:"Sanders (Burscough) goes down after colliding with the opposing defender"},{minute:82,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:85,type:GENERIC,description:"A long ball from Burscough but Sanders can't quite get to it"}]}},{has_run:true,home_name:"Hadleigh Albion",week:8,away_name:"Wheatley Harriers",result:{home_goals:[],first_half_length:46,second_half_length:49,gate:259,away_goals:[],match_events:[{minute:15,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:22,type:GENERIC,description:"Defender Wright (Hadleigh Albion) hoofs the ball upfield"},{minute:25,type:GENERIC,description:"Jones (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:29,type:YELLOWCARD,description:"Yellow card for Burns (Wheatley Harriers)"},{minute:46,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:51,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:51,type:GENERIC,description:"Defender Edeson (Hadleigh Albion) hoofs the ball upfield"},{minute:75,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:81,type:GENERIC,description:"Burly Wheatley Harriers defender Hamilton cuts out the attack with a mean sliding tackle"},{minute:83,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:86,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:89,type:GENERIC,description:"Hadleigh Albion's Wright jogs up the channel"}]}},{has_run:true,home_name:"Shirdley Hill",week:8,away_name:"Cross Heath",result:{home_goals:[{time:9,scorer_id:"Jayden Gonzales"}],first_half_length:52,second_half_length:51,gate:213,away_goals:[{time:40,scorer_id:"Seth Ruiz"},{time:32,scorer_id:"Cole Cox"},{time:27,scorer_id:"Ellis Scott"}],match_events:[{minute:11,type:GENERIC,description:"Some activity on the Cross Heath bench as Spencer starts warming up"},{minute:15,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Cox starts warming up"},{minute:47,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:48,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:48,type:GENERIC,description:"Meaty Shirdley Hill defender Lopez heads the ball clear"},{minute:55,type:GENERIC,description:"Cross Heath Striker Ferguson is caught offside"},{minute:70,type:INJURY,description:"Reyes (Shirdley Hill) is calling for the physio"},{minute:76,type:GENERIC,description:"Shirdley Hill's Reyes jogs up the channel"},{minute:77,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"},{minute:81,type:YELLOWCARD,description:"Yellow card for Grant (Cross Heath)"},{minute:88,type:INJURY,description:"Lopez (Shirdley Hill) goes down after colliding with the opposing defender"}]}},{has_run:true,home_name:Horsforth,week:9,away_name:"Saffron Olympic",result:{home_goals:[],first_half_length:47,second_half_length:52,gate:182,away_goals:[],match_events:[{minute:13,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:15,type:GENERIC,description:"Horsforth Striker Burns is caught offside"},{minute:31,type:GENERIC,description:"The ref is talking to Garcia (Saffron Olympic) after a vicious tackle"},{minute:32,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Bailey starts warming up"},{minute:35,type:GENERIC,description:"Meaty Horsforth defender Cole heads the ball clear"},{minute:38,type:GENERIC,description:"Davis (Horsforth) seems to be getting a stern warning from the ref"},{minute:39,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:40,type:YELLOWCARD,description:"Yellow card for Southway (Saffron Olympic)"},{minute:56,type:GENERIC,description:"The Saffron Olympic manager points angrily at keeper Happer"},{minute:69,type:GENERIC,description:"Horsforth Striker Burns is caught offside"},{minute:83,type:GENERIC,description:"Saffron Olympic's Hunt jogs up the channel"},{minute:89,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:94,type:GENERIC,description:"Defender Hunt (Saffron Olympic) hoofs the ball upfield"}]}},{has_run:true,home_name:"Chapel Olympic",week:9,away_name:Wroxeter,result:{home_goals:[{time:62,scorer_id:"Tyler Husher"},{time:93,scorer_id:"Tommy Patel"}],first_half_length:48,second_half_length:51,gate:146,away_goals:[{time:45,scorer_id:"Morgan Flores"},{time:49,scorer_id:"Harley Woods"},{time:13,scorer_id:"Samuel Shelsher"}],match_events:[{minute:8,type:YELLOWCARD,description:"Yellow card for Shelsher (Wroxeter)"},{minute:12,type:INJURY,description:"Flores (Wroxeter) goes down after colliding with the opposing defender"},{minute:20,type:GENERIC,description:"Burly Chapel Olympic defender Fernandez cuts out the attack with a mean sliding tackle"},{minute:40,type:GENERIC,description:"Defender Bailey (Wroxeter) hoofs the ball upfield"},{minute:45,type:INJURY,description:"Wood (Wroxeter) is calling for the physio"},{minute:45,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:48,type:INJURY,description:"Shelsher (Wroxeter) seems to be limping slightly"},{minute:55,type:INJURY,description:"Campbell (Chapel Olympic) seems to be limping slightly"},{minute:56,type:GENERIC,description:"The ref is talking to Campbell (Chapel Olympic) after a vicious tackle"},{minute:56,type:GENERIC,description:"Meaty Chapel Olympic defender Domville heads the ball clear"},{minute:60,type:GENERIC,description:"A burst of noise from the stands to encourage the Wroxeter players"},{minute:61,type:GENERIC,description:"Burly Chapel Olympic defender Domville cuts out the attack with a mean sliding tackle"},{minute:63,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:66,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:"Hexham Borough",week:9,away_name:"Alsager Town",result:{home_goals:[{time:46,scorer_id:"Oliver Cole"},{time:69,scorer_id:"Oliver Cole"},{time:49,scorer_id:"Lewis Diaz"}],first_half_length:51,second_half_length:50,gate:326,away_goals:[],match_events:[{minute:6,type:GENERIC,description:"The Alsager Town fans are chanting Jonathan Henderson's name"},{minute:8,type:GENERIC,description:"Striker Diaz is brought down by the big centre half, but the ref waves it away"},{minute:20,type:YELLOWCARD,description:"Yellow card for Hill (Alsager Town)"},{minute:29,type:INJURY,description:"Huth (Hexham Borough) seems to be limping slightly"},{minute:32,type:INJURY,description:"Diaz (Hexham Borough) seems to be limping slightly"},{minute:36,type:GENERIC,description:"The ref is talking to Sanchez (Hexham Borough) after a vicious tackle"},{minute:55,type:GENERIC,description:"A cheer from the Alsager Town fans as a rude inflatable is thrown on the pitch"},{minute:67,type:INJURY,description:"Meath (Hexham Borough) goes down after colliding with the opposing defender"},{minute:78,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:81,type:GENERIC,description:"Alsager Town are on the counter-attack"},{minute:87,type:GENERIC,description:"Some activity on the Hexham Borough bench as Foster starts warming up"},{minute:97,type:GENERIC,description:"Burly Hexham Borough defender Huth cuts out the attack with a mean sliding tackle"},{minute:98,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is furious with the referee"}]}},{has_run:true,home_name:"Wheatley Harriers",week:9,away_name:Melton,result:{home_goals:[{time:79,scorer_id:"Jacob Stone"}],first_half_length:51,second_half_length:52,gate:115,away_goals:[{time:39,scorer_id:"Elliott Dixon"}],match_events:[{minute:11,type:GENERIC,description:"Burly Melton defender Upadhyad cuts out the attack with a mean sliding tackle"},{minute:21,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:29,type:YELLOWCARD,description:"Yellow card for Burns (Wheatley Harriers)"},{minute:34,type:GENERIC,description:"Taylor (Melton) seems to be getting a stern warning from the ref"},{minute:39,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:49,type:GENERIC,description:"Freeman (Melton) given a lecture by the ref"},{minute:54,type:GENERIC,description:"Burly Wheatley Harriers defender Stone cuts out the attack with a mean sliding tackle"},{minute:54,type:GENERIC,description:"A cheer from the Melton fans as a rude inflatable is thrown on the pitch"},{minute:56,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:85,type:GENERIC,description:"The ref is talking to Taylor (Melton) after a vicious tackle"},{minute:93,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Woods starts warming up"}]}},{has_run:true,home_name:"Cross Heath",week:9,away_name:Burscough,result:{home_goals:[{time:79,scorer_id:"Elijah Clark"}],first_half_length:48,second_half_length:47,gate:167,away_goals:[{time:15,scorer_id:"Anthony Nguyen"},{time:75,scorer_id:"Anthony Nguyen"},{time:14,scorer_id:"Jake Sanders"}],match_events:[{minute:7,type:GENERIC,description:"Burscough's Howard jogs up the channel"},{minute:9,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:12,type:GENERIC,description:"A long ball from Cross Heath but Clark can't quite get to it"},{minute:23,type:INJURY,description:"Medina (Burscough) goes down after colliding with the opposing defender"},{minute:23,type:INJURY,description:"Pierce (Cross Heath) goes down after colliding with the opposing defender"},{minute:27,type:GENERIC,description:"Some activity on the Burscough bench as Peters starts warming up"},{minute:32,type:GENERIC,description:"Burly Cross Heath defender Flores cuts out the attack with a mean sliding tackle"},{minute:39,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:55,type:GENERIC,description:"Cross Heath Striker Ferguson is caught offside"},{minute:56,type:GENERIC,description:"Defender Daniels (Cross Heath) hoofs the ball upfield"},{minute:79,type:GENERIC,description:"Burscough Striker Medina is caught offside"}]}},{has_run:true,home_name:"Shirdley Hill",week:9,away_name:"Hadleigh Albion",result:{home_goals:[{time:63,scorer_id:"Callum Ellis"}],first_half_length:49,second_half_length:46,gate:331,away_goals:[{time:81,scorer_id:"Leon Gordon"}],match_events:[{minute:4,type:GENERIC,description:"A long ball from Shirdley Hill but Gonzales can't quite get to it"},{minute:13,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:18,type:GENERIC,description:"Defender Myers (Shirdley Hill) hoofs the ball upfield"},{minute:25,type:GENERIC,description:"The Hadleigh Albion fans are chanting Freddie Gibson's name"},{minute:32,type:INJURY,description:"Marshall (Hadleigh Albion) writhes on the floor after tripping over the ball"},{minute:37,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:50,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:73,type:GENERIC,description:"Defender Myers (Shirdley Hill) clears the ball for a throw-in"},{minute:76,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:84,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Woods starts warming up"},{minute:92,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:92,type:GENERIC,description:"The travelling Hadleigh Albion supporters are shouting abuse at the home fans"}]}},{has_run:true,home_name:"Chapel Olympic",week:10,away_name:Horsforth,result:{home_goals:[],first_half_length:50,second_half_length:51,gate:236,away_goals:[],match_events:[{type:INJURY,description:"The physio comes on to see to Gonzales (Horsforth)"},{minute:19,type:INJURY,description:"Patel (Chapel Olympic) seems to be limping slightly"},{minute:30,type:GENERIC,description:"A long ball from Horsforth but Witte can't quite get to it"},{minute:33,type:GENERIC,description:"The Chapel Olympic fans are chanting Reece Robertson's name"},{minute:36,type:GENERIC,description:"Nelson (Horsforth) given a lecture by the ref"},{minute:36,type:GENERIC,description:"A burst of noise from the stands to encourage the Chapel Olympic players"},{minute:39,type:GENERIC,description:"Chapel Olympic's Fernandez jogs up the channel"},{minute:47,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Fisher starts warming up"},{minute:60,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:65,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:78,type:GENERIC,description:"Chapel Olympic's Shaw jogs up the channel"},{minute:88,type:GENERIC,description:"Chapel Olympic's fans are singing a rude song about Reece Robertson"},{minute:91,type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:"Saffron Olympic",week:10,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:51,second_half_length:51,gate:277,away_goals:[{time:3,scorer_id:"Lewis Diaz"},{time:96,scorer_id:"Leon Perez"},{time:87,scorer_id:"Frederick Bennett"}],match_events:[{type:GENERIC,description:"The travelling Hexham Borough supporters are shouting abuse at the home fans"},{minute:7,type:GENERIC,description:"The ref is talking to Hunt (Saffron Olympic) after a vicious tackle"},{minute:15,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Castillo some instructions"},{minute:26,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:44,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Castillo some instructions"},{minute:62,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:69,type:YELLOWCARD,description:"Yellow card for Southway (Saffron Olympic)"},{minute:82,type:GENERIC,description:"Meaty Saffron Olympic defender Carter heads the ball clear"},{minute:88,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:95,type:GENERIC,description:"Saffron Olympic manager Kai Gomez seems to be giving sub Davis some instructions"}]}},{has_run:true,home_name:Wroxeter,week:10,away_name:"Wheatley Harriers",result:{home_goals:[{time:10,scorer_id:"Harley Woods"},{time:74,scorer_id:"Morgan Flores"},{time:69,scorer_id:"Harley Woods"},{time:74,scorer_id:"Joseph Perdue"},{scorer_id:"Morgan Flores"}],first_half_length:49,second_half_length:50,gate:291,away_goals:[{time:48,scorer_id:"Jenson Burns"},{time:68,scorer_id:"Maxwell Hoffman"},{time:95,scorer_id:"Finn Gordon"}],match_events:[{minute:8,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:15,type:GENERIC,description:"Meaty Wroxeter defender Wilson heads the ball clear"},{minute:25,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:27,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:29,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) hoofs the ball upfield"},{minute:37,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:42,type:GENERIC,description:"Wroxeter's manager Jayden Martin is furious with the referee"},{minute:62,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:76,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:83,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:85,type:GENERIC,description:"Some activity on the Wroxeter bench as Rogers starts warming up"},{minute:93,type:INJURY,description:"Bennett (Wheatley Harriers) has broken his nose but is playing on"}]}},{has_run:true,home_name:"Alsager Town",week:10,away_name:"Cross Heath",result:{home_goals:[],first_half_length:47,second_half_length:49,gate:235,away_goals:[{time:4,scorer_id:"Elijah Clark"},{time:34,scorer_id:"Albert Pierce"}],match_events:[{minute:1,type:YELLOWCARD,description:"Yellow card for Howard (Alsager Town)"},{minute:7,type:GENERIC,description:"Meaty Cross Heath defender Flores heads the ball clear"},{minute:26,type:GENERIC,description:"West (Alsager Town) seems to be getting a stern warning from the ref"},{minute:30,type:INJURY,description:"Pierce (Cross Heath) writhes on the floor after tripping over the ball"},{minute:31,type:GENERIC,description:"Jonathan Henderson is gesticulating wildy at his Alsager Town players"},{minute:35,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:38,type:GENERIC,description:"The ref is talking to Young (Alsager Town) after a vicious tackle"},{minute:40,type:GENERIC,description:"The ref is talking to Stone (Alsager Town) after a vicious tackle"},{minute:82,type:GENERIC,description:"Meaty Cross Heath defender Moore heads the ball clear"},{minute:90,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:93,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is furious with the referee"},{minute:95,type:GENERIC,description:"Some activity on the Cross Heath bench as Virji starts warming up"}]}},{has_run:true,home_name:Melton,week:10,away_name:"Shirdley Hill",result:{home_goals:[{time:82,scorer_id:"Isaac James"}],first_half_length:49,second_half_length:52,gate:310,away_goals:[],match_events:[{type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:1,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:1,type:GENERIC,description:"A cheer from the Shirdley Hill fans as a rude inflatable is thrown on the pitch"},{minute:17,type:YELLOWCARD,description:"Yellow card for Rogers (Melton)"},{minute:17,type:GENERIC,description:"A cheer from the Shirdley Hill fans as a rude inflatable is thrown on the pitch"},{minute:26,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:29,type:GENERIC,description:"A long ball from Shirdley Hill but Ellis can't quite get to it"},{minute:32,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Cox starts warming up"},{minute:35,type:YELLOWCARD,description:"Yellow card for Taylor (Melton)"},{minute:66,type:GENERIC,description:"Shirdley Hill manager Kian Gonzalez seems to be giving sub Virji some instructions"},{minute:69,type:GENERIC,description:"The ref is talking to Griffin (Melton) after a vicious tackle"},{minute:85,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:86,type:GENERIC,description:"Striker Dixon is brought down by the big centre half, but the ref waves it away"},{minute:97,type:GENERIC,description:"Melton's Williams jogs up the channel"}]}},{has_run:true,home_name:Burscough,week:10,away_name:"Hadleigh Albion",result:{home_goals:[{time:45,scorer_id:"Tyler Flores"},{time:69,scorer_id:"Jake Sanders"}],first_half_length:50,second_half_length:52,gate:218,away_goals:[{time:51,scorer_id:"Morgan Mc Cart"},{time:5,scorer_id:"Morgan Mc Cart"}],match_events:[{minute:4,type:INJURY,description:"The physio comes on to see to Mitchell (Hadleigh Albion)"},{minute:6,type:GENERIC,description:"Meaty Burscough defender Simmons heads the ball clear"},{minute:16,type:GENERIC,description:"Bungard (Hadleigh Albion) given a lecture by the ref"},{minute:52,type:GENERIC,description:"The travelling Hadleigh Albion supporters are shouting abuse at the home fans"},{minute:54,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as James starts warming up"},{minute:61,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:70,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:89,type:GENERIC,description:"The travelling Hadleigh Albion supporters are shouting abuse at the home fans"},{minute:90,type:GENERIC,description:"Burscough are on the counter-attack"},{minute:91,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:92,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"}]}},{has_run:true,home_name:Horsforth,week:11,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:49,second_half_length:49,gate:255,away_goals:[],match_events:[{minute:33,type:GENERIC,description:"Horsforth's Pierce jogs up the channel"},{minute:33,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:36,type:GENERIC,description:"Hexham Borough sub Patterson seems to be tucking into a pie!"},{minute:40,type:GENERIC,description:"A cheer from the Hexham Borough fans as a rude inflatable is thrown on the pitch"},{minute:40,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Patterson some instructions"},{minute:60,type:GENERIC,description:"Burly Horsforth defender Washington cuts out the attack with a mean sliding tackle"},{minute:65,type:INJURY,description:"The physio comes on to see to Perez (Hexham Borough)"},{minute:71,type:YELLOWCARD,description:"Yellow card for Edwards (Horsforth)"},{minute:78,type:GENERIC,description:"Horsforth Striker Witte is caught offside"},{minute:80,type:GENERIC,description:"The travelling Hexham Borough supporters are shouting abuse at the home fans"},{minute:83,type:YELLOWCARD,description:"Yellow card for Murphy (Hexham Borough)"},{minute:94,type:YELLOWCARD,description:"Yellow card for Sanchez (Hexham Borough)"}]}},{has_run:true,home_name:"Wheatley Harriers",week:11,away_name:"Chapel Olympic",result:{home_goals:[{time:50,scorer_id:"Tomos Wood"}],first_half_length:46,second_half_length:52,gate:228,away_goals:[],match_events:[{minute:18,type:GENERIC,description:"Defender Dissanayake (Wheatley Harriers) clears the ball for a throw-in"},{minute:19,type:INJURY,description:"Shaw (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:21,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"},{minute:32,type:GENERIC,description:"The Chapel Olympic manager points angrily at keeper Pierce"},{minute:32,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Mitchell some instructions"},{minute:37,type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"},{minute:58,type:YELLOWCARD,description:"Yellow card for Gardner (Wheatley Harriers)"},{minute:60,type:GENERIC,description:"Burly Chapel Olympic defender Domville cuts out the attack with a mean sliding tackle"},{minute:69,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:81,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:89,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:91,type:GENERIC,description:"Mcquillen (Chapel Olympic) given a lecture by the ref"},{minute:93,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"}]}},{has_run:true,home_name:"Cross Heath",week:11,away_name:"Saffron Olympic",result:{home_goals:[{time:63,scorer_id:"Elijah Clark"}],first_half_length:51,second_half_length:49,gate:231,away_goals:[{time:77,scorer_id:"Louis Turner"}],match_events:[{type:GENERIC,description:"Meaty Saffron Olympic defender Hunt heads the ball clear"},{minute:2,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:9,type:GENERIC,description:"Cross Heath Striker Clark is caught offside"},{minute:23,type:GENERIC,description:"Striker Turner is brought down by the big centre half, but the ref waves it away"},{minute:23,type:INJURY,description:"Southway (Saffron Olympic) is calling for the physio"},{minute:29,type:GENERIC,description:"A burst of noise from the stands to encourage the Saffron Olympic players"},{minute:36,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:38,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:54,type:GENERIC,description:"Cross Heath's fans are singing a rude song about Sam Ellis"},{minute:62,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:65,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:67,type:INJURY,description:"Scott (Cross Heath) seems to be limping slightly"},{minute:69,type:GENERIC,description:"Scott (Cross Heath) given a lecture by the ref"},{minute:69,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:72,type:GENERIC,description:"Saffron Olympic are on the counter-attack"}]}},{has_run:true,home_name:"Shirdley Hill",week:11,away_name:Wroxeter,result:{home_goals:[],first_half_length:46,second_half_length:51,gate:138,away_goals:[],match_events:[{minute:3,type:INJURY,description:"Woods (Wroxeter) goes down after colliding with the opposing defender"},{minute:5,type:INJURY,description:"Martinez (Shirdley Hill) goes down after colliding with the opposing defender"},{minute:9,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is holding his head in frustration"},{minute:13,type:INJURY,description:"Lopez (Shirdley Hill) seems to be limping slightly"},{minute:24,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:36,type:GENERIC,description:"Wroxeter sub Mills seems to be tucking into a pie!"},{minute:36,type:YELLOWCARD,description:"Yellow card for Bailey (Wroxeter)"},{minute:42,type:GENERIC,description:"Shirdley Hill's fans are singing a rude song about Kian Gonzalez"},{minute:45,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:76,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:87,type:GENERIC,description:"A burst of noise from the stands to encourage the Shirdley Hill players"},{minute:90,type:GENERIC,description:"Burly Wroxeter defender Bailey cuts out the attack with a mean sliding tackle"},{minute:92,type:YELLOWCARD,description:"Yellow card for Mc Cart (Shirdley Hill)"}]}},{has_run:true,home_name:"Hadleigh Albion",week:11,away_name:"Alsager Town",result:{home_goals:[],first_half_length:49,second_half_length:49,gate:183,away_goals:[],match_events:[{minute:19,type:GENERIC,description:"Alsager Town's Butler jogs up the channel"},{minute:23,type:GENERIC,description:"Hadleigh Albion Striker Gordon is caught offside"},{minute:23,type:INJURY,description:"Wright (Alsager Town) is calling for the physio"},{minute:35,type:GENERIC,description:"Meaty Hadleigh Albion defender Wright heads the ball clear"},{minute:43,type:GENERIC,description:"Some activity on the Alsager Town bench as Bennett starts warming up"},{minute:44,type:INJURY,description:"Edeson (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:60,type:GENERIC,description:"Hadleigh Albion sub Kinlan seems to be tucking into a pie!"},{minute:81,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:90,type:GENERIC,description:"A cheer from the Hadleigh Albion fans as a rude inflatable is thrown on the pitch"},{minute:90,type:INJURY,description:"Hill (Alsager Town) is calling for the physio"},{minute:95,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:96,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"}]}},{has_run:true,home_name:Burscough,week:11,away_name:Melton,result:{home_goals:[],first_half_length:47,second_half_length:48,gate:248,away_goals:[{time:81,scorer_id:"Isaac James"}],match_events:[{minute:6,type:INJURY,description:"James (Melton) is calling for the physio"},{minute:20,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:28,type:INJURY,description:"Bryant (Burscough) has broken his nose but is playing on"},{minute:40,type:GENERIC,description:"Upadhyad (Melton) seems to be getting a stern warning from the ref"},{minute:46,type:GENERIC,description:"Meaty Melton defender Upadhyad heads the ball clear"},{minute:47,type:INJURY,description:"Sanders (Burscough) goes down after colliding with the opposing defender"},{minute:54,type:GENERIC,description:"Some activity on the Burscough bench as Myers starts warming up"},{minute:62,type:GENERIC,description:"The travelling Melton supporters are shouting abuse at the home fans"},{minute:81,type:GENERIC,description:"Some activity on the Burscough bench as Peters starts warming up"},{minute:83,type:GENERIC,description:"Defender Howard (Burscough) clears the ball for a throw-in"},{minute:84,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"}]}},{has_run:true,home_name:"Wheatley Harriers",week:12,away_name:Horsforth,result:{home_goals:[{time:42,scorer_id:"Benjamin Gardner"},{time:68,scorer_id:"Jacob Stone"},{time:22,scorer_id:"Jenson Burns"}],first_half_length:49,second_half_length:48,gate:252,away_goals:[{time:3,scorer_id:"Nathan Burns"},{time:37,scorer_id:"Jasper   Pierce"},{time:89,scorer_id:"Matthew Allen"},{time:10,scorer_id:"Lucas Edwards"},{time:14,scorer_id:"Oscar Davis"}],match_events:[{minute:2,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:2,type:GENERIC,description:"Horsforth Striker Burns is caught offside"},{minute:4,type:GENERIC,description:"Wheatley Harriers's fans are singing a rude song about Toby Cabrera"},{minute:10,type:GENERIC,description:"Defender Pierce (Horsforth) hoofs the ball upfield"},{minute:12,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Dua starts warming up"},{minute:14,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Gelson starts warming up"},{minute:19,type:GENERIC,description:"Davis (Horsforth) given a lecture by the ref"},{minute:34,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"},{minute:43,type:GENERIC,description:"Horsforth's Washington jogs up the channel"},{minute:44,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:50,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Perry starts warming up"},{minute:53,type:GENERIC,description:"The Wheatley Harriers manager points angrily at keeper Burns"}]}},{has_run:true,home_name:"Hexham Borough",week:12,away_name:"Cross Heath",result:{home_goals:[],first_half_length:49,second_half_length:52,gate:189,away_goals:[{time:64,scorer_id:"Matthew Flores"}],match_events:[{type:GENERIC,description:"A burst of noise from the stands to encourage the Hexham Borough players"},{minute:3,type:INJURY,description:"Weild (Hexham Borough) is calling for the physio"},{minute:3,type:INJURY,description:"The physio comes on to see to Perez (Hexham Borough)"},{minute:10,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:11,type:YELLOWCARD,description:"Yellow card for Ruiz (Hexham Borough)"},{minute:40,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:40,type:INJURY,description:"The physio comes on to see to Ferguson (Cross Heath)"},{minute:74,type:GENERIC,description:"The ref is talking to Moore (Cross Heath) after a vicious tackle"},{minute:78,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is furious with the referee"},{minute:80,type:INJURY,description:"Pierce (Cross Heath) has broken his nose but is playing on"},{minute:95,type:GENERIC,description:"A long ball from Hexham Borough but Diaz can't quite get to it"}]}},{has_run:true,home_name:"Chapel Olympic",week:12,away_name:"Shirdley Hill",result:{home_goals:[{time:15,scorer_id:"Cody Mcquillen"}],first_half_length:49,second_half_length:50,gate:150,away_goals:[],match_events:[{minute:3,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:9,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Hawa starts warming up"},{minute:12,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:25,type:INJURY,description:"Myers (Shirdley Hill) writhes on the floor after tripping over the ball"},{minute:30,type:GENERIC,description:"Husher (Chapel Olympic) given a lecture by the ref"},{minute:44,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:45,type:INJURY,description:"Fernandez (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:63,type:GENERIC,description:"Lopez (Shirdley Hill) given a lecture by the ref"},{minute:73,type:INJURY,description:"Lopez (Shirdley Hill) goes down after colliding with the opposing defender"},{minute:77,type:YELLOWCARD,description:"Yellow card for Shaw (Chapel Olympic)"},{minute:87,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Harrison starts warming up"}]}},{has_run:true,home_name:"Saffron Olympic",week:12,away_name:"Hadleigh Albion",result:{home_goals:[{time:45,scorer_id:"Cameron Shaw"}],first_half_length:50,second_half_length:49,gate:276,away_goals:[{time:29,scorer_id:"Morgan Mc Cart"},{time:52,scorer_id:"Alfie Palmer"}],match_events:[{minute:8,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Henderson starts warming up"},{minute:9,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Mitchell starts warming up"},{minute:10,type:GENERIC,description:"The ref is talking to Flores (Saffron Olympic) after a vicious tackle"},{minute:25,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is holding his head in frustration"},{minute:39,type:GENERIC,description:"Saffron Olympic's Hunt jogs up the channel"},{minute:42,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:44,type:GENERIC,description:"Palmer (Hadleigh Albion) given a lecture by the ref"},{minute:47,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:60,type:GENERIC,description:"Defender Garcia (Saffron Olympic) hoofs the ball upfield"},{minute:62,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:73,type:GENERIC,description:"Hadleigh Albion's Wright jogs up the channel"},{minute:76,type:GENERIC,description:"Defender Edeson (Hadleigh Albion) clears the ball for a throw-in"},{minute:77,type:INJURY,description:"The physio comes on to see to Meath (Hadleigh Albion)"},{minute:79,type:GENERIC,description:"Defender Wright (Hadleigh Albion) clears the ball for a throw-in"}]}},{has_run:true,home_name:Wroxeter,week:12,away_name:Burscough,result:{home_goals:[{time:28,scorer_id:"Matthew Mcquillen"},{time:89,scorer_id:"Morgan Flores"},{time:40,scorer_id:"Harley Woods"}],first_half_length:48,second_half_length:46,gate:296,away_goals:[{time:64,scorer_id:"Aidan Lowsley"},{time:44,scorer_id:"Jake Sanders"}],match_events:[{minute:6,type:INJURY,description:"Bailey (Burscough) writhes on the floor after tripping over the ball"},{minute:9,type:GENERIC,description:"The Burscough manager points angrily at keeper Bryant"},{minute:9,type:GENERIC,description:"Some activity on the Burscough bench as Garcia starts warming up"},{minute:10,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:18,type:INJURY,description:"Shelsher (Wroxeter) has broken his nose but is playing on"},{minute:48,type:GENERIC,description:"A long ball from Burscough but Sanders can't quite get to it"},{minute:49,type:GENERIC,description:"Striker Selvaratnam is brought down by the big centre half, but the ref waves it away"},{minute:52,type:GENERIC,description:"Wroxeter's Jackson jogs up the channel"},{minute:70,type:GENERIC,description:"Burscough sub Huth seems to be tucking into a pie!"},{minute:82,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:84,type:GENERIC,description:"Medina (Burscough) seems to be getting a stern warning from the ref"},{minute:90,type:GENERIC,description:"Burscough Striker Sanders is caught offside"},{minute:90,type:YELLOWCARD,description:"Yellow card for Jackson (Wroxeter)"},{minute:92,type:GENERIC,description:"The ref is talking to Wilson (Wroxeter) after a vicious tackle"}]}},{has_run:true,home_name:"Alsager Town",week:12,away_name:Melton,result:{home_goals:[{time:71,scorer_id:"Alfie Stone"},{time:78,scorer_id:"Jonathan Schmidt"}],first_half_length:51,second_half_length:52,gate:217,away_goals:[{time:83,scorer_id:"Isaac James"},{time:27,scorer_id:"Jac Upadhyad"}],match_events:[{minute:5,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Murphy some instructions"},{minute:7,type:GENERIC,description:"Defender Howard (Alsager Town) clears the ball for a throw-in"},{minute:13,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:24,type:INJURY,description:"Howard (Alsager Town) goes down after colliding with the opposing defender"},{minute:26,type:GENERIC,description:"Some activity on the Alsager Town bench as Hughes starts warming up"},{minute:47,type:GENERIC,description:"Alsager Town Striker Khambaita is caught offside"},{minute:67,type:GENERIC,description:"Striker Schmidt is brought down by the big centre half, but the ref waves it away"},{minute:70,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:82,type:GENERIC,description:"Wallace (Melton) given a lecture by the ref"},{minute:84,type:GENERIC,description:"James (Melton) given a lecture by the ref"},{minute:88,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"}]}},{has_run:true,home_name:Horsforth,week:13,away_name:"Cross Heath",result:{home_goals:[{time:48,scorer_id:"Owain Witte"},{time:98,scorer_id:"Nathan Burns"},{time:49,scorer_id:"Nathan Burns"}],first_half_length:51,second_half_length:50,gate:127,away_goals:[{time:15,scorer_id:"Elijah Clark"},{time:10,scorer_id:"Gethin Ferguson"},{time:37,scorer_id:"Elijah Clark"},{time:78,scorer_id:"Cole Cox"},{time:47,scorer_id:"Gethin Ferguson"}],match_events:[{minute:7,type:YELLOWCARD,description:"Yellow card for Burns (Horsforth)"},{minute:11,type:INJURY,description:"Gonzales (Horsforth) is calling for the physio"},{minute:32,type:GENERIC,description:"Defender Daniels (Cross Heath) hoofs the ball upfield"},{minute:34,type:INJURY,description:"The physio comes on to see to Ruiz (Cross Heath)"},{minute:34,type:GENERIC,description:"The Horsforth manager points angrily at keeper Torres"},{minute:35,type:GENERIC,description:"Defender Nelson (Horsforth) hoofs the ball upfield"},{minute:45,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:49,type:GENERIC,description:"Defender Moore (Cross Heath) hoofs the ball upfield"},{minute:63,type:YELLOWCARD,description:"Yellow card for Torres (Horsforth)"},{minute:71,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:73,type:GENERIC,description:"Cross Heath sub Cabrera seems to be tucking into a pie!"},{minute:73,type:GENERIC,description:"Horsforth are on the counter-attack"},{minute:83,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:86,type:GENERIC,description:"Striker Burns is brought down by the big centre half, but the ref waves it away"},{minute:86,type:GENERIC,description:"Cross Heath are on the counter-attack"}]}},{has_run:true,home_name:"Shirdley Hill",week:13,away_name:"Wheatley Harriers",result:{home_goals:[{time:24,scorer_id:"Lucas Henry"}],first_half_length:49,second_half_length:47,gate:263,away_goals:[{time:32,scorer_id:"Daniel Stone"}],match_events:[{type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:5,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"},{minute:40,type:GENERIC,description:"A cheer from the Shirdley Hill fans as a rude inflatable is thrown on the pitch"},{minute:44,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:46,type:GENERIC,description:"Burly Wheatley Harriers defender Hamilton cuts out the attack with a mean sliding tackle"},{minute:48,type:GENERIC,description:"A burst of noise from the stands to encourage the Shirdley Hill players"},{minute:53,type:GENERIC,description:"A long ball from Wheatley Harriers but Gordon can't quite get to it"},{minute:62,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:86,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Virji starts warming up"},{minute:87,type:INJURY,description:"Bennett (Wheatley Harriers) writhes on the floor after tripping over the ball"}]}},{has_run:true,home_name:"Hadleigh Albion",week:13,away_name:"Hexham Borough",result:{home_goals:[],first_half_length:47,second_half_length:48,gate:259,away_goals:[{time:21,scorer_id:"Lewis Diaz"},{time:66,scorer_id:"Lewis Diaz"},{time:74,scorer_id:"Lewis Diaz"}],match_events:[{minute:4,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:20,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:28,type:GENERIC,description:"Defender Mitchell (Hadleigh Albion) hoofs the ball upfield"},{minute:31,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:32,type:GENERIC,description:"Hadleigh Albion manager Freddie Gibson seems to be giving sub James some instructions"},{minute:36,type:YELLOWCARD,description:"Yellow card for Mcquillen (Hexham Borough)"},{minute:44,type:INJURY,description:"The physio comes on to see to Weild (Hexham Borough)"},{minute:49,type:GENERIC,description:"Some activity on the Hexham Borough bench as Wallace starts warming up"},{minute:74,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is holding his head in frustration"},{minute:77,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:81,type:GENERIC,description:"The ref is talking to Rukin (Hadleigh Albion) after a vicious tackle"}]}},{has_run:true,home_name:Burscough,week:13,away_name:"Chapel Olympic",result:{home_goals:[],first_half_length:50,second_half_length:50,gate:179,away_goals:[{time:18,scorer_id:"Kai Brown"},{time:4,scorer_id:"Iwan Bennett"},{time:33,scorer_id:"Cody Mcquillen"}],match_events:[{minute:1,type:GENERIC,description:"Reece Robertson is gesticulating wildy at his Chapel Olympic players"},{minute:6,type:GENERIC,description:"A long ball from Chapel Olympic but Mcquillen can't quite get to it"},{minute:14,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:22,type:INJURY,description:"The physio comes on to see to Lowsley (Burscough)"},{minute:30,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:37,type:GENERIC,description:"Some activity on the Burscough bench as Meath starts warming up"},{minute:61,type:INJURY,description:"Brown (Chapel Olympic) is calling for the physio"},{minute:73,type:YELLOWCARD,description:"Yellow card for Mcquillen (Chapel Olympic)"},{minute:74,type:GENERIC,description:"Defender Patel (Chapel Olympic) hoofs the ball upfield"},{minute:76,type:GENERIC,description:"Burscough's manager Louis Hansen is holding his head in frustration"},{minute:86,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:89,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Mitchell starts warming up"}]}},{has_run:true,home_name:Melton,week:13,away_name:"Saffron Olympic",result:{home_goals:[{time:61,scorer_id:"Kian Taylor"},{scorer_id:"Isaac James"},{time:9,scorer_id:"Hayden Griffin"}],first_half_length:52,second_half_length:48,gate:216,away_goals:[{time:51,scorer_id:"Louis Turner"},{time:75,scorer_id:"Harry Flores"}],match_events:[{minute:14,type:GENERIC,description:"Saffron Olympic Striker Turner is caught offside"},{minute:23,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Chaisty starts warming up"},{minute:42,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:43,type:GENERIC,description:"Some activity on the Melton bench as Bryant starts warming up"},{minute:46,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:61,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:67,type:INJURY,description:"Griffin (Melton) writhes on the floor after tripping over the ball"},{minute:67,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Murphy some instructions"},{minute:76,type:GENERIC,description:"Melton's manager Gabriel Kennedy is furious with the referee"},{minute:84,type:GENERIC,description:"Defender Upadhyad (Melton) hoofs the ball upfield"},{minute:88,type:GENERIC,description:"Melton's manager Gabriel Kennedy is holding his head in frustration"},{minute:89,type:GENERIC,description:"Some activity on the Melton bench as Murphy starts warming up"},{minute:95,type:GENERIC,description:"Defender Freeman (Melton) clears the ball for a throw-in"}]}},{has_run:true,home_name:"Alsager Town",week:13,away_name:Wroxeter,result:{home_goals:[],first_half_length:52,second_half_length:52,gate:104,away_goals:[],match_events:[{minute:4,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"},{minute:23,type:GENERIC,description:"Defender Jackson (Wroxeter) hoofs the ball upfield"},{minute:31,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:46,type:YELLOWCARD,description:"Yellow card for Flores (Wroxeter)"},{minute:47,type:GENERIC,description:"Some activity on the Alsager Town bench as Bennett starts warming up"},{minute:57,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:70,type:GENERIC,description:"A long ball from Alsager Town but Khambaita can't quite get to it"},{minute:82,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:87,type:GENERIC,description:"A long ball from Alsager Town but Khambaita can't quite get to it"},{minute:92,type:GENERIC,description:"Wroxeter's Jackson jogs up the channel"},{minute:99,type:GENERIC,description:"A long ball from Alsager Town but Khambaita can't quite get to it"}]}},{has_run:true,home_name:"Shirdley Hill",week:14,away_name:Horsforth,result:{home_goals:[{time:79,scorer_id:"Alexander Myers"}],first_half_length:50,second_half_length:46,gate:285,away_goals:[],match_events:[{minute:32,type:INJURY,description:"Pierce (Horsforth) seems to be limping slightly"},{minute:36,type:GENERIC,description:"Dexter Butler is gesticulating wildy at his Horsforth players"},{minute:36,type:GENERIC,description:"Defender Lopez (Shirdley Hill) hoofs the ball upfield"},{minute:36,type:GENERIC,description:"A long ball from Horsforth but Burns can't quite get to it"},{minute:43,type:GENERIC,description:"A long ball from Horsforth but Witte can't quite get to it"},{minute:48,type:YELLOWCARD,description:"Yellow card for Cole (Horsforth)"},{minute:55,type:GENERIC,description:"Gonzales (Horsforth) seems to be getting a stern warning from the ref"},{minute:57,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:59,type:GENERIC,description:"Some activity on the Horsforth bench as Bailey starts warming up"},{minute:62,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:76,type:GENERIC,description:"The ref is talking to Mc Cart (Shirdley Hill) after a vicious tackle"},{minute:77,type:GENERIC,description:"Reyes (Shirdley Hill) seems to be getting a stern warning from the ref"},{minute:91,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"}]}},{has_run:true,home_name:"Cross Heath",week:14,away_name:"Hadleigh Albion",result:{home_goals:[],first_half_length:48,second_half_length:48,gate:148,away_goals:[{time:9,scorer_id:"Morgan Mc Cart"}],match_events:[{minute:18,type:GENERIC,description:"The Hadleigh Albion fans are chanting Freddie Gibson's name"},{minute:20,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:27,type:INJURY,description:"The physio comes on to see to Pierce (Cross Heath)"},{minute:32,type:GENERIC,description:"Cross Heath's Daniels jogs up the channel"},{minute:36,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:61,type:YELLOWCARD,description:"Yellow card for Meath (Hadleigh Albion)"},{minute:61,type:GENERIC,description:"A long ball from Cross Heath but Ferguson can't quite get to it"},{minute:71,type:GENERIC,description:"Cox (Cross Heath) given a lecture by the ref"},{minute:73,type:YELLOWCARD,description:"Yellow card for Ruiz (Cross Heath)"},{minute:80,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is furious with the referee"},{minute:93,type:INJURY,description:"Ferguson (Cross Heath) goes down after colliding with the opposing defender"},{minute:95,type:INJURY,description:"Edeson (Hadleigh Albion) writhes on the floor after tripping over the ball"}]}},{has_run:true,home_name:"Wheatley Harriers",week:14,away_name:Burscough,result:{home_goals:[{time:6,scorer_id:"Jacob Stone"}],first_half_length:49,second_half_length:49,gate:181,away_goals:[{time:4,scorer_id:"Jake Sanders"},{time:78,scorer_id:"Ethan Simmons"},{time:65,scorer_id:"Jake Sanders"}],match_events:[{minute:2,type:GENERIC,description:"Some activity on the Burscough bench as Myers starts warming up"},{minute:9,type:GENERIC,description:"Burscough's manager Louis Hansen is holding his head in frustration"},{minute:25,type:GENERIC,description:"Burscough manager Louis Hansen seems to be giving sub Kinlan some instructions"},{minute:33,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is furious with the referee"},{minute:34,type:YELLOWCARD,description:"Yellow card for Lowsley (Burscough)"},{minute:42,type:GENERIC,description:"Striker Medina is brought down by the big centre half, but the ref waves it away"},{minute:62,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:70,type:YELLOWCARD,description:"Yellow card for Hamilton (Wheatley Harriers)"},{minute:71,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Woods starts warming up"},{minute:81,type:INJURY,description:"Gordon (Wheatley Harriers) is calling for the physio"},{minute:90,type:INJURY,description:"Simmons (Burscough) writhes on the floor after tripping over the ball"}]}},{has_run:true,home_name:"Hexham Borough",week:14,away_name:Melton,result:{home_goals:[{time:69,scorer_id:"Oliver Cole"}],first_half_length:51,second_half_length:50,gate:243,away_goals:[{time:43,scorer_id:"Dominic Freeman"}],match_events:[{minute:14,type:INJURY,description:"Dixon (Melton) seems to be limping slightly"},{minute:16,type:GENERIC,description:"Melton manager Gabriel Kennedy seems to be giving sub Hawkins some instructions"},{minute:33,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:34,type:GENERIC,description:"Gabriel Kennedy is gesticulating wildy at his Melton players"},{minute:36,type:GENERIC,description:"Some activity on the Hexham Borough bench as Patterson starts warming up"},{minute:40,type:GENERIC,description:"A long ball from Hexham Borough but Cole can't quite get to it"},{minute:40,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:68,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:73,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:73,type:GENERIC,description:"A long ball from Melton but Dixon can't quite get to it"},{minute:81,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:83,type:YELLOWCARD,description:"Yellow card for Bennett (Hexham Borough)"}]}},{has_run:true,home_name:"Chapel Olympic",week:14,away_name:"Alsager Town",result:{home_goals:[],first_half_length:51,second_half_length:47,gate:291,away_goals:[],match_events:[{minute:25,type:GENERIC,description:"Defender Patel (Chapel Olympic) clears the ball for a throw-in"},{minute:39,type:INJURY,description:"Lee (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:43,type:GENERIC,description:"Alsager Town sub Kennedy seems to be tucking into a pie!"},{minute:44,type:GENERIC,description:"Defender Domville (Chapel Olympic) clears the ball for a throw-in"},{minute:58,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:60,type:INJURY,description:"Stone (Alsager Town) goes down after colliding with the opposing defender"},{minute:68,type:GENERIC,description:"A long ball from Chapel Olympic but Bennett can't quite get to it"},{minute:73,type:INJURY,description:"Green (Alsager Town) writhes on the floor after tripping over the ball"},{minute:76,type:GENERIC,description:"Striker Mcquillen is brought down by the big centre half, but the ref waves it away"},{minute:80,type:GENERIC,description:"Chapel Olympic are on the counter-attack"},{minute:88,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"}]}},{has_run:true,home_name:"Saffron Olympic",week:14,away_name:Wroxeter,result:{home_goals:[],first_half_length:47,second_half_length:46,gate:229,away_goals:[],match_events:[{minute:1,type:GENERIC,description:"Turner (Saffron Olympic) given a lecture by the ref"},{minute:5,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:10,type:GENERIC,description:"Saffron Olympic are on the counter-attack"},{minute:25,type:GENERIC,description:"A cheer from the Saffron Olympic fans as a rude inflatable is thrown on the pitch"},{minute:38,type:GENERIC,description:"Some activity on the Wroxeter bench as Baker starts warming up"},{minute:39,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"},{minute:40,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:48,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:62,type:GENERIC,description:"Defender Carter (Saffron Olympic) clears the ball for a throw-in"},{minute:62,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"},{minute:68,type:GENERIC,description:"Striker Flores is brought down by the big centre half, but the ref waves it away"},{minute:68,type:GENERIC,description:"Defender Bailey (Wroxeter) clears the ball for a throw-in"},{minute:85,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:85,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:88,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"}]}},{has_run:true,home_name:Horsforth,week:15,away_name:"Hadleigh Albion",result:{home_goals:[{time:68,scorer_id:"Nathan Burns"},{time:91,scorer_id:"Charles Gonzales"},{time:50,scorer_id:"Nathan Burns"}],first_half_length:48,second_half_length:52,gate:220,away_goals:[],match_events:[{minute:19,type:INJURY,description:"Palmer (Hadleigh Albion) goes down after colliding with the opposing defender"},{minute:23,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:24,type:GENERIC,description:"The ref is talking to Cole (Horsforth) after a vicious tackle"},{minute:37,type:GENERIC,description:"Horsforth's manager Dexter Butler is furious with the referee"},{minute:55,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"},{minute:63,type:GENERIC,description:"The ref is talking to Pierce (Horsforth) after a vicious tackle"},{minute:65,type:GENERIC,description:"Horsforth's fans are singing a rude song about Dexter Butler"},{minute:73,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:74,type:GENERIC,description:"Burly Horsforth defender Cole cuts out the attack with a mean sliding tackle"},{minute:82,type:INJURY,description:"Washington (Horsforth) is calling for the physio"},{minute:93,type:GENERIC,description:"A cheer from the Horsforth fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:Burscough,week:15,away_name:"Shirdley Hill",result:{home_goals:[{time:46,scorer_id:"Reece White"}],first_half_length:50,second_half_length:50,gate:218,away_goals:[{time:38,scorer_id:"Callum Ellis"},{time:69,scorer_id:"Callum Ellis"},{time:27,scorer_id:"Jayden Gonzales"}],match_events:[{minute:4,type:GENERIC,description:"Burscough's manager Louis Hansen is furious with the referee"},{minute:4,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:13,type:YELLOWCARD,description:"Yellow card for Ellis (Shirdley Hill)"},{minute:17,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:20,type:GENERIC,description:"The Shirdley Hill fans are chanting Kian Gonzalez's name"},{minute:34,type:GENERIC,description:"Nguyen (Burscough) given a lecture by the ref"},{minute:39,type:GENERIC,description:"Burscough's Marshall jogs up the channel"},{minute:39,type:YELLOWCARD,description:"Yellow card for Bryant (Burscough)"},{minute:61,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"},{minute:69,type:GENERIC,description:"White (Burscough) seems to be getting a stern warning from the ref"},{minute:72,type:GENERIC,description:"Defender Howard (Burscough) hoofs the ball upfield"},{minute:80,type:GENERIC,description:"The ref is talking to Nguyen (Burscough) after a vicious tackle"}]}},{has_run:true,home_name:Melton,week:15,away_name:"Cross Heath",result:{home_goals:[],first_half_length:51,second_half_length:46,gate:259,away_goals:[{time:27,scorer_id:"Elijah Clark"}],match_events:[{type:GENERIC,description:"Melton sub Bryant seems to be tucking into a pie!"},{minute:2,type:GENERIC,description:"Cross Heath's manager Sam Ellis is furious with the referee"},{minute:12,type:GENERIC,description:"The travelling Cross Heath supporters are shouting abuse at the home fans"},{minute:19,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:28,type:GENERIC,description:"Melton's fans are singing a rude song about Gabriel Kennedy"},{minute:34,type:INJURY,description:"Scott (Cross Heath) is calling for the physio"},{minute:44,type:INJURY,description:"Richardson (Melton) is calling for the physio"},{minute:58,type:GENERIC,description:"Burly Cross Heath defender Daniels cuts out the attack with a mean sliding tackle"},{minute:66,type:GENERIC,description:"The ref is talking to Freeman (Melton) after a vicious tackle"},{minute:66,type:INJURY,description:"Ferguson (Cross Heath) goes down after colliding with the opposing defender"},{minute:72,type:GENERIC,description:"A long ball from Cross Heath but Clark can't quite get to it"},{minute:79,type:GENERIC,description:"Some activity on the Melton bench as Bryant starts warming up"},{minute:80,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"},{minute:81,type:GENERIC,description:"A long ball from Melton but James can't quite get to it"}]}},{has_run:true,home_name:"Alsager Town",week:15,away_name:"Wheatley Harriers",result:{home_goals:[{time:44,scorer_id:"Toby Khambaita"},{time:83,scorer_id:"Jonathan Schmidt"}],first_half_length:51,second_half_length:52,gate:214,away_goals:[],match_events:[{minute:11,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is holding his head in frustration"},{minute:15,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:29,type:YELLOWCARD,description:"Yellow card for Khambaita (Alsager Town)"},{minute:32,type:GENERIC,description:"Wright (Alsager Town) seems to be getting a stern warning from the ref"},{minute:35,type:GENERIC,description:"Stone (Alsager Town) seems to be getting a stern warning from the ref"},{minute:64,type:GENERIC,description:"The Wheatley Harriers fans are chanting Toby Cabrera's name"},{minute:70,type:GENERIC,description:"Wheatley Harriers's Stone jogs up the channel"},{minute:72,type:GENERIC,description:"Defender Butler (Alsager Town) clears the ball for a throw-in"},{minute:75,type:GENERIC,description:"Some activity on the Alsager Town bench as Davis starts warming up"},{minute:86,type:GENERIC,description:"Stone (Alsager Town) seems to be getting a stern warning from the ref"},{minute:92,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:92,type:GENERIC,description:"Gardner (Wheatley Harriers) seems to be getting a stern warning from the ref"},{minute:93,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) hoofs the ball upfield"},{minute:93,type:GENERIC,description:"A long ball from Alsager Town but Schmidt can't quite get to it"},{minute:102,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:102,type:GENERIC,description:"Some activity on the Alsager Town bench as Davis starts warming up"}]}},{has_run:true,home_name:Wroxeter,week:15,away_name:"Hexham Borough",result:{home_goals:[{time:57,scorer_id:"Nicholas Selvaratnam"},{time:66,scorer_id:"Joseph Perdue"}],first_half_length:49,second_half_length:52,gate:278,away_goals:[{time:5,scorer_id:"Evan Mcquillen"},{time:56,scorer_id:"Evan Mcquillen"}],match_events:[{minute:2,type:GENERIC,description:"Meaty Hexham Borough defender Murphy heads the ball clear"},{minute:4,type:GENERIC,description:"Hexham Borough's Murphy jogs up the channel"},{minute:13,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"},{minute:16,type:GENERIC,description:"Wroxeter's Bailey jogs up the channel"},{minute:22,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:30,type:GENERIC,description:"The Hexham Borough manager points angrily at keeper Meath"},{minute:44,type:INJURY,description:"The physio comes on to see to Huth (Hexham Borough)"},{minute:48,type:GENERIC,description:"Perdue (Wroxeter) given a lecture by the ref"},{minute:55,type:YELLOWCARD,description:"Yellow card for Mcquillen (Hexham Borough)"},{minute:70,type:INJURY,description:"The physio comes on to see to Bennett (Hexham Borough)"},{minute:100,type:GENERIC,description:"Some activity on the Hexham Borough bench as Foster starts warming up"}]}},{has_run:true,home_name:"Saffron Olympic",week:15,away_name:"Chapel Olympic",result:{home_goals:[],first_half_length:50,second_half_length:47,gate:123,away_goals:[{time:43,scorer_id:"Iwan Bennett"},{time:81,scorer_id:"Cody Mcquillen"}],match_events:[{minute:1,type:INJURY,description:"The physio comes on to see to Campbell (Chapel Olympic)"},{minute:5,type:GENERIC,description:"Saffron Olympic's manager Kai Gomez is furious with the referee"},{minute:14,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Stephens starts warming up"},{minute:18,type:GENERIC,description:"Chapel Olympic's manager Reece Robertson is furious with the referee"},{minute:21,type:GENERIC,description:"Kai Gomez is gesticulating wildy at his Saffron Olympic players"},{minute:24,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"},{minute:29,type:GENERIC,description:"Saffron Olympic Striker Flores is caught offside"},{minute:34,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"},{minute:46,type:GENERIC,description:"Carter (Saffron Olympic) given a lecture by the ref"},{minute:56,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Fisher starts warming up"},{minute:56,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:72,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Davis starts warming up"},{minute:89,type:GENERIC,description:"The travelling Chapel Olympic supporters are shouting abuse at the home fans"}]}},{has_run:true,home_name:Burscough,week:16,away_name:Horsforth,result:{home_goals:[],first_half_length:52,second_half_length:51,gate:255,away_goals:[{time:14,scorer_id:"Charles Gonzales"},{time:4,scorer_id:"Owain Witte"}],match_events:[{minute:3,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:17,type:GENERIC,description:"Meaty Horsforth defender Pierce heads the ball clear"},{minute:26,type:GENERIC,description:"The ref is talking to Gonzales (Horsforth) after a vicious tackle"},{minute:39,type:GENERIC,description:"Horsforth are on the counter-attack"},{minute:43,type:GENERIC,description:"Burscough's manager Louis Hansen is furious with the referee"},{minute:68,type:GENERIC,description:"Burscough are on the counter-attack"},{minute:69,type:GENERIC,description:"A burst of noise from the stands to encourage the Burscough players"},{minute:79,type:GENERIC,description:"The travelling Horsforth supporters are shouting abuse at the home fans"},{minute:92,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"},{minute:95,type:GENERIC,description:"Some activity on the Burscough bench as Peters starts warming up"},{minute:96,type:GENERIC,description:"A burst of noise from the stands to encourage the Horsforth players"}]}},{has_run:true,home_name:"Hadleigh Albion",week:16,away_name:Melton,result:{home_goals:[{time:9,scorer_id:"Morgan Mc Cart"},{time:31,scorer_id:"Morgan Mc Cart"},{time:38,scorer_id:"Morgan Mc Cart"}],first_half_length:49,second_half_length:47,gate:224,away_goals:[],match_events:[{minute:9,type:GENERIC,description:"James (Melton) given a lecture by the ref"},{minute:14,type:GENERIC,description:"A burst of noise from the stands to encourage the Hadleigh Albion players"},{minute:19,type:GENERIC,description:"Gordon (Hadleigh Albion) given a lecture by the ref"},{minute:26,type:YELLOWCARD,description:"Yellow card for Jones (Hadleigh Albion)"},{minute:37,type:GENERIC,description:"Melton are on the counter-attack"},{minute:46,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:46,type:GENERIC,description:"Some activity on the Melton bench as Hawkins starts warming up"},{minute:52,type:GENERIC,description:"A cheer from the Melton fans as a rude inflatable is thrown on the pitch"},{minute:57,type:GENERIC,description:"Melton sub Bryant seems to be tucking into a pie!"},{minute:78,type:GENERIC,description:"Hadleigh Albion's manager Freddie Gibson is holding his head in frustration"},{minute:87,type:GENERIC,description:"Defender Mitchell (Hadleigh Albion) hoofs the ball upfield"},{minute:90,type:GENERIC,description:"Defender Bungard (Hadleigh Albion) clears the ball for a throw-in"},{minute:93,type:GENERIC,description:"A cheer from the Melton fans as a rude inflatable is thrown on the pitch"}]}},{has_run:true,home_name:"Shirdley Hill",week:16,away_name:"Alsager Town",result:{home_goals:[{time:57,scorer_id:"Callum Ellis"},{time:30,scorer_id:"Seth Martinez"},{time:58,scorer_id:"Callum Ellis"}],first_half_length:46,second_half_length:47,gate:257,away_goals:[{time:14,scorer_id:"Jonathan Schmidt"}],match_events:[{minute:2,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:3,type:GENERIC,description:"Some activity on the Alsager Town bench as Kennedy starts warming up"},{minute:9,type:GENERIC,description:"A burst of noise from the stands to encourage the Shirdley Hill players"},{minute:17,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:40,type:GENERIC,description:"Alsager Town sub Howard seems to be tucking into a pie!"},{minute:42,type:GENERIC,description:"Some activity on the Alsager Town bench as Kennedy starts warming up"},{minute:58,type:GENERIC,description:"Alsager Town's fans are singing a rude song about Jonathan Henderson"},{minute:58,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:62,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is holding his head in frustration"},{minute:69,type:GENERIC,description:"The ref is talking to Myers (Shirdley Hill) after a vicious tackle"},{minute:73,type:GENERIC,description:"Alsager Town Striker Schmidt is caught offside"},{minute:81,type:GENERIC,description:"Shirdley Hill's Myers jogs up the channel"},{minute:87,type:GENERIC,description:"The Alsager Town manager points angrily at keeper Stone"},{minute:89,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:91,type:GENERIC,description:"Some activity on the Shirdley Hill bench as Stephens starts warming up"}]}},{has_run:true,home_name:"Cross Heath",week:16,away_name:Wroxeter,result:{home_goals:[],first_half_length:52,second_half_length:52,gate:129,away_goals:[{time:87,scorer_id:"Sebastian Wood"}],match_events:[{minute:7,type:GENERIC,description:"Burly Cross Heath defender Daniels cuts out the attack with a mean sliding tackle"},{minute:10,type:YELLOWCARD,description:"Yellow card for Ferguson (Cross Heath)"},{minute:26,type:GENERIC,description:"Wroxeter's manager Jayden Martin is holding his head in frustration"},{minute:36,type:GENERIC,description:"Some activity on the Wroxeter bench as Herrera starts warming up"},{minute:40,type:GENERIC,description:"Selvaratnam (Wroxeter) seems to be getting a stern warning from the ref"},{minute:66,type:GENERIC,description:"The Wroxeter fans are chanting Jayden Martin's name"},{minute:83,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:85,type:GENERIC,description:"Defender Wilson (Wroxeter) clears the ball for a throw-in"},{minute:86,type:GENERIC,description:"Wroxeter's Wood jogs up the channel"},{minute:96,type:GENERIC,description:"Wroxeter Striker Flores is caught offside"},{minute:96,type:GENERIC,description:"Some activity on the Wroxeter bench as Baker starts warming up"},{minute:102,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"}]}},{has_run:true,home_name:"Wheatley Harriers",week:16,away_name:"Saffron Olympic",result:{home_goals:[{time:61,scorer_id:"Tommy Rice"}],first_half_length:46,second_half_length:52,gate:99,away_goals:[],match_events:[{type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:2,type:GENERIC,description:"Wheatley Harriers sub Gelson seems to be tucking into a pie!"},{minute:12,type:GENERIC,description:"A long ball from Saffron Olympic but Turner can't quite get to it"},{minute:16,type:GENERIC,description:"A long ball from Wheatley Harriers but Stone can't quite get to it"},{minute:31,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:37,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Stephens starts warming up"},{minute:44,type:GENERIC,description:"Wheatley Harriers's manager Toby Cabrera is holding his head in frustration"},{minute:45,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:61,type:GENERIC,description:"Garcia (Saffron Olympic) given a lecture by the ref"},{minute:62,type:GENERIC,description:"Striker Turner is brought down by the big centre half, but the ref waves it away"},{minute:65,type:GENERIC,description:"Meaty Wheatley Harriers defender Stone heads the ball clear"},{minute:68,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:74,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Dua starts warming up"},{minute:84,type:YELLOWCARD,description:"Yellow card for Carter (Saffron Olympic)"},{minute:87,type:GENERIC,description:"Some activity on the Saffron Olympic bench as Chaisty starts warming up"},{minute:89,type:GENERIC,description:"Defender Jackson (Saffron Olympic) clears the ball for a throw-in"}]}},{has_run:true,home_name:"Hexham Borough",week:16,away_name:"Chapel Olympic",result:{home_goals:[{time:23,scorer_id:"Lewis Diaz"},{time:76,scorer_id:"Bradley Ruiz"}],first_half_length:47,second_half_length:46,gate:239,away_goals:[{time:14,scorer_id:"Anthony Lee"}],match_events:[{minute:2,type:GENERIC,description:"Burly Chapel Olympic defender Fernandez cuts out the attack with a mean sliding tackle"},{minute:21,type:GENERIC,description:"Hexham Borough's manager Dominic Moreno is furious with the referee"},{minute:48,type:GENERIC,description:"Burly Hexham Borough defender Ruiz cuts out the attack with a mean sliding tackle"},{minute:51,type:INJURY,description:"The physio comes on to see to Diaz (Hexham Borough)"},{minute:57,type:GENERIC,description:"Domville (Chapel Olympic) seems to be getting a stern warning from the ref"},{minute:58,type:GENERIC,description:"Hexham Borough's fans are singing a rude song about Dominic Moreno"},{minute:60,type:GENERIC,description:"Chapel Olympic sub Hicks seems to be tucking into a pie!"},{minute:73,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Castillo some instructions"},{minute:79,type:INJURY,description:"Murphy (Hexham Borough) goes down after colliding with the opposing defender"},{minute:89,type:GENERIC,description:"Meaty Hexham Borough defender Sanchez heads the ball clear"}]}},{has_run:true,home_name:Horsforth,week:17,away_name:Melton,result:{home_goals:[{time:14,scorer_id:"Owain Witte"},{time:78,scorer_id:"Liam Washington"}],first_half_length:50,second_half_length:50,gate:259,away_goals:[],match_events:[{minute:9,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"},{minute:21,type:GENERIC,description:"Defender Cole (Horsforth) clears the ball for a throw-in"},{minute:21,type:INJURY,description:"Washington (Horsforth) writhes on the floor after tripping over the ball"},{minute:30,type:GENERIC,description:"Melton Striker Dixon is caught offside"},{minute:47,type:GENERIC,description:"A burst of noise from the stands to encourage the Melton players"},{minute:56,type:GENERIC,description:"Some activity on the Melton bench as Bryant starts warming up"},{minute:59,type:GENERIC,description:"Meaty Horsforth defender Pierce heads the ball clear"},{minute:64,type:GENERIC,description:"The travelling Melton supporters are shouting abuse at the home fans"},{minute:68,type:GENERIC,description:"The Melton manager points angrily at keeper Richardson"},{minute:71,type:GENERIC,description:"A long ball from Horsforth but Witte can't quite get to it"},{minute:80,type:GENERIC,description:"Melton's Rogers jogs up the channel"},{minute:95,type:INJURY,description:"Davis (Horsforth) writhes on the floor after tripping over the ball"},{minute:95,type:GENERIC,description:"Burly Melton defender Freeman cuts out the attack with a mean sliding tackle"}]}},{has_run:true,home_name:"Alsager Town",week:17,away_name:Burscough,result:{home_goals:[{time:66,scorer_id:"Ashton Butler"},{time:91,scorer_id:"Jonathan Schmidt"}],first_half_length:49,second_half_length:51,gate:265,away_goals:[{time:16,scorer_id:"Reece White"},{time:38,scorer_id:"Ethan Simmons"}],match_events:[{minute:2,type:GENERIC,description:"A cheer from the Burscough fans as a rude inflatable is thrown on the pitch"},{minute:6,type:GENERIC,description:"Burscough sub Huth seems to be tucking into a pie!"},{minute:10,type:GENERIC,description:"Alsager Town sub Bennett seems to be tucking into a pie!"},{minute:12,type:YELLOWCARD,description:"Yellow card for Howard (Burscough)"},{minute:17,type:GENERIC,description:"The Burscough fans are chanting Louis Hansen's name"},{minute:22,type:INJURY,description:"Green (Alsager Town) is calling for the physio"},{minute:43,type:INJURY,description:"Bailey (Burscough) is calling for the physio"},{minute:50,type:INJURY,description:"The physio comes on to see to Nguyen (Burscough)"},{minute:63,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:64,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:71,type:GENERIC,description:"Defender Howard (Burscough) hoofs the ball upfield"},{minute:81,type:GENERIC,description:"Louis Hansen is gesticulating wildy at his Burscough players"},{minute:83,type:GENERIC,description:"Some activity on the Alsager Town bench as Howard starts warming up"}]}},{has_run:true,home_name:Wroxeter,week:17,away_name:"Hadleigh Albion",result:{home_goals:[{time:13,scorer_id:"Joseph Perdue"}],first_half_length:48,second_half_length:46,gate:194,away_goals:[{time:26,scorer_id:"Morgan Mc Cart"},{time:83,scorer_id:"Morgan Mc Cart"}],match_events:[{minute:2,type:GENERIC,description:"Wroxeter manager Jayden Martin seems to be giving sub Herrera some instructions"},{minute:3,type:GENERIC,description:"A cheer from the Wroxeter fans as a rude inflatable is thrown on the pitch"},{minute:8,type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:11,type:GENERIC,description:"Wroxeter's fans are singing a rude song about Jayden Martin"},{minute:14,type:GENERIC,description:"The ref is talking to Selvaratnam (Wroxeter) after a vicious tackle"},{minute:26,type:GENERIC,description:"Wroxeter are on the counter-attack"},{minute:33,type:GENERIC,description:"A long ball from Hadleigh Albion but Mc Cart can't quite get to it"},{minute:37,type:GENERIC,description:"Wroxeter Striker Selvaratnam is caught offside"},{minute:55,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:58,type:GENERIC,description:"A long ball from Hadleigh Albion but Gordon can't quite get to it"},{minute:74,type:GENERIC,description:"Wroxeter's manager Jayden Martin is furious with the referee"},{minute:93,type:GENERIC,description:"Hadleigh Albion's fans are singing a rude song about Freddie Gibson"}]}},{has_run:true,home_name:"Saffron Olympic",week:17,away_name:"Shirdley Hill",result:{home_goals:[{time:30,scorer_id:"Finley Garcia"},{time:6,scorer_id:"Cameron Shaw"},{time:24,scorer_id:"Louis Turner"}],first_half_length:50,second_half_length:50,gate:152,away_goals:[],match_events:[{type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:3,type:GENERIC,description:"Meaty Shirdley Hill defender Reyes heads the ball clear"},{minute:15,type:GENERIC,description:"Burly Shirdley Hill defender Martinez cuts out the attack with a mean sliding tackle"},{minute:20,type:GENERIC,description:"Kian Gonzalez is gesticulating wildy at his Shirdley Hill players"},{minute:31,type:GENERIC,description:"The home fans are shouting abuse at the visiting supporters"},{minute:33,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:39,type:INJURY,description:"The physio comes on to see to Thompson (Saffron Olympic)"},{minute:43,type:GENERIC,description:"The travelling Shirdley Hill supporters are shouting abuse at the home fans"},{minute:47,type:GENERIC,description:"Shirdley Hill Striker Gonzales is caught offside"},{minute:63,type:YELLOWCARD,description:"Yellow card for Henry (Shirdley Hill)"},{minute:74,type:GENERIC,description:"Garcia (Saffron Olympic) seems to be getting a stern warning from the ref"},{minute:75,type:GENERIC,description:"Shirdley Hill Striker Ellis is caught offside"},{minute:84,type:GENERIC,description:"The Saffron Olympic fans are chanting Kai Gomez's name"},{minute:85,type:INJURY,description:"Ferguson (Shirdley Hill) seems to be limping slightly"},{minute:89,type:GENERIC,description:"A long ball from Saffron Olympic but Flores can't quite get to it"}]}},{has_run:true,home_name:"Chapel Olympic",week:17,away_name:"Cross Heath",result:{home_goals:[],first_half_length:52,second_half_length:52,gate:179,away_goals:[],match_events:[{minute:5,type:GENERIC,description:"Some activity on the Cross Heath bench as Clark starts warming up"},{minute:12,type:GENERIC,description:"Chapel Olympic sub Mitchell seems to be tucking into a pie!"},{minute:12,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:27,type:GENERIC,description:"Cross Heath's Daniels jogs up the channel"},{minute:31,type:INJURY,description:"Shaw (Chapel Olympic) writhes on the floor after tripping over the ball"},{minute:38,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:42,type:GENERIC,description:"Cross Heath's Gonzales jogs up the channel"},{minute:44,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Cunningham some instructions"},{minute:65,type:GENERIC,description:"Some activity on the Cross Heath bench as Fisher starts warming up"},{minute:77,type:GENERIC,description:"Chapel Olympic's Domville jogs up the channel"},{minute:79,type:INJURY,description:"Moore (Cross Heath) has broken his nose but is playing on"},{minute:88,type:GENERIC,description:"The ref is talking to Scott (Cross Heath) after a vicious tackle"},{minute:97,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:102,type:INJURY,description:"Patel (Chapel Olympic) is calling for the physio"}]}},{has_run:true,home_name:"Hexham Borough",week:17,away_name:"Wheatley Harriers",result:{home_goals:[],first_half_length:50,second_half_length:50,gate:348,away_goals:[],match_events:[{minute:5,type:GENERIC,description:"Wheatley Harriers Striker Stone is caught offside"},{minute:8,type:GENERIC,description:"Weild (Hexham Borough) given a lecture by the ref"},{minute:10,type:GENERIC,description:"The travelling Wheatley Harriers supporters are shouting abuse at the home fans"},{minute:15,type:GENERIC,description:"The Hexham Borough fans are chanting Dominic Moreno's name"},{minute:22,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:31,type:GENERIC,description:"Defender Ruiz (Hexham Borough) clears the ball for a throw-in"},{minute:55,type:GENERIC,description:"Hexham Borough Striker Diaz is caught offside"},{minute:55,type:GENERIC,description:"Defender Murphy (Hexham Borough) clears the ball for a throw-in"},{minute:58,type:INJURY,description:"Diaz (Hexham Borough) goes down after colliding with the opposing defender"},{minute:64,type:YELLOWCARD,description:"Yellow card for Hamilton (Wheatley Harriers)"},{minute:71,type:GENERIC,description:"Some activity on the Wheatley Harriers bench as Kinlan starts warming up"},{minute:86,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"}]}},{has_run:true,home_name:"Alsager Town",week:18,away_name:Horsforth,result:{home_goals:[],first_half_length:48,second_half_length:50,gate:275,away_goals:[],match_events:[{minute:12,type:GENERIC,description:"The ref is talking to Butler (Alsager Town) after a vicious tackle"},{minute:18,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:36,type:GENERIC,description:"A long ball from Horsforth but Burns can't quite get to it"},{minute:42,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:48,type:YELLOWCARD,description:"Yellow card for Cole (Horsforth)"},{minute:48,type:GENERIC,description:"The ref is talking to Davis (Horsforth) after a vicious tackle"},{minute:64,type:GENERIC,description:"The travelling Horsforth supporters are shouting abuse at the home fans"},{minute:66,type:GENERIC,description:"Horsforth's Washington jogs up the channel"},{minute:81,type:GENERIC,description:"Defender Washington (Horsforth) hoofs the ball upfield"},{minute:85,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:86,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:91,type:GENERIC,description:"Burly Horsforth defender Pierce cuts out the attack with a mean sliding tackle"},{minute:93,type:GENERIC,description:"Defender Nelson (Horsforth) clears the ball for a throw-in"}]}},{has_run:true,home_name:Melton,week:18,away_name:Wroxeter,result:{home_goals:[{time:10,scorer_id:"Elliott Dixon"},{time:43,scorer_id:"Caleb Rogers"}],first_half_length:49,second_half_length:46,gate:176,away_goals:[{time:11,scorer_id:"Samuel Shelsher"},{time:35,scorer_id:"Morgan Flores"},{time:66,scorer_id:"Nicholas Selvaratnam"}],match_events:[{minute:22,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"},{minute:27,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:27,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:29,type:GENERIC,description:"Defender Williams (Melton) hoofs the ball upfield"},{minute:34,type:GENERIC,description:"The travelling Wroxeter supporters are shouting abuse at the home fans"},{minute:49,type:INJURY,description:"James (Melton) writhes on the floor after tripping over the ball"},{minute:50,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:72,type:YELLOWCARD,description:"Yellow card for Freeman (Melton)"},{minute:74,type:GENERIC,description:"Defender Jackson (Wroxeter) hoofs the ball upfield"},{minute:78,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"}]}},{has_run:true,home_name:Burscough,week:18,away_name:"Saffron Olympic",result:{home_goals:[{scorer_id:"Reece White"}],first_half_length:46,second_half_length:47,gate:243,away_goals:[],match_events:[{type:GENERIC,description:"Nguyen (Burscough) seems to be getting a stern warning from the ref"},{minute:3,type:GENERIC,description:"Defender Howard (Burscough) hoofs the ball upfield"},{minute:3,type:GENERIC,description:"Burscough's Howard jogs up the channel"},{minute:17,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:21,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:41,type:GENERIC,description:"Burscough's Lowsley jogs up the channel"},{minute:42,type:GENERIC,description:"Meaty Burscough defender Lowsley heads the ball clear"},{minute:56,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:58,type:INJURY,description:"Shaw (Saffron Olympic) goes down after colliding with the opposing defender"},{minute:70,type:INJURY,description:"Marshall (Burscough) seems to be limping slightly"},{minute:73,type:GENERIC,description:"Defender Simmons (Burscough) hoofs the ball upfield"},{minute:74,type:INJURY,description:"Shaw (Saffron Olympic) seems to be limping slightly"},{minute:88,type:GENERIC,description:"Some activity on the Burscough bench as Kinlan starts warming up"}]}},{has_run:true,home_name:"Hadleigh Albion",week:18,away_name:"Chapel Olympic",result:{home_goals:[{time:58,scorer_id:"Leon Gordon"},{time:31,scorer_id:"George Jones"},{time:45,scorer_id:"Morgan Mc Cart"}],first_half_length:52,second_half_length:52,gate:257,away_goals:[{time:36,scorer_id:"Cody Mcquillen"},{time:24,scorer_id:"Bobby Shaw"}],match_events:[{type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:2,type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"},{minute:18,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:34,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:35,type:GENERIC,description:"The Chapel Olympic fans are chanting Reece Robertson's name"},{minute:42,type:GENERIC,description:"Mc Cart (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:44,type:GENERIC,description:"Meaty Chapel Olympic defender Shaw heads the ball clear"},{minute:51,type:INJURY,description:"Husher (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:63,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:64,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:65,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:69,type:GENERIC,description:"Burly Hadleigh Albion defender Mitchell cuts out the attack with a mean sliding tackle"},{minute:72,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"},{minute:80,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:82,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Hoffman some instructions"},{minute:101,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kennedy starts warming up"}]}},{has_run:true,home_name:"Shirdley Hill",week:18,away_name:"Hexham Borough",result:{home_goals:[{time:88,scorer_id:"Lucas Henry"}],first_half_length:48,second_half_length:48,gate:173,away_goals:[{time:19,scorer_id:"Lewis Diaz"}],match_events:[{minute:4,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is furious with the referee"},{minute:7,type:INJURY,description:"Weild (Hexham Borough) has broken his nose but is playing on"},{minute:17,type:GENERIC,description:"Bennett (Hexham Borough) given a lecture by the ref"},{minute:19,type:YELLOWCARD,description:"Yellow card for Mc Cart (Shirdley Hill)"},{minute:30,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:58,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Harrison some instructions"},{minute:72,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:74,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:76,type:INJURY,description:"The physio comes on to see to Ferguson (Shirdley Hill)"},{minute:78,type:GENERIC,description:"Defender Martinez (Shirdley Hill) hoofs the ball upfield"},{minute:88,type:YELLOWCARD,description:"Yellow card for Bennett (Hexham Borough)"}]}},{has_run:true,home_name:"Cross Heath",week:18,away_name:"Wheatley Harriers",result:{home_goals:[{time:42,scorer_id:"Ellis Scott"},{time:77,scorer_id:"Gethin Ferguson"}],first_half_length:51,second_half_length:48,gate:214,away_goals:[{time:13,scorer_id:"Stanley Hamilton"},{time:13,scorer_id:"Jacob Stone"},{time:39,scorer_id:"Maxwell Hoffman"}],match_events:[{minute:8,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"},{minute:21,type:GENERIC,description:"The ref is talking to Ferguson (Cross Heath) after a vicious tackle"},{minute:29,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:32,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) clears the ball for a throw-in"},{minute:46,type:GENERIC,description:"The ref is talking to Ferguson (Cross Heath) after a vicious tackle"},{minute:53,type:INJURY,description:"Daniels (Cross Heath) seems to be limping slightly"},{minute:61,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:70,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:70,type:YELLOWCARD,description:"Yellow card for Daniels (Cross Heath)"},{minute:81,type:GENERIC,description:"Ferguson (Cross Heath) given a lecture by the ref"},{minute:82,type:GENERIC,description:"Defender Flores (Cross Heath) clears the ball for a throw-in"},{minute:90,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:93,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:97,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"}]}},{home_name:Horsforth,week:19,away_name:Wroxeter},{home_name:"Saffron Olympic",week:19,away_name:"Alsager Town"},{home_name:"Chapel Olympic",week:19,away_name:Melton},{home_name:"Hexham Borough",week:19,away_name:Burscough},{home_name:"Wheatley Harriers",week:19,away_name:"Hadleigh Albion"},{home_name:"Cross Heath",week:19,away_name:"Shirdley Hill"},{home_name:"Saffron Olympic",week:20,away_name:Horsforth},{home_name:Wroxeter,week:20,away_name:"Chapel Olympic"},{home_name:"Alsager Town",week:20,away_name:"Hexham Borough"},{home_name:Melton,week:20,away_name:"Wheatley Harriers"},{home_name:Burscough,week:20,away_name:"Cross Heath"},{home_name:"Hadleigh Albion",week:20,away_name:"Shirdley Hill"},{home_name:Horsforth,week:21,away_name:"Chapel Olympic"},{home_name:"Hexham Borough",week:21,away_name:"Saffron Olympic"},{home_name:"Wheatley Harriers",week:21,away_name:Wroxeter},{home_name:"Cross Heath",week:21,away_name:"Alsager Town"},{home_name:"Shirdley Hill",week:21,away_name:Melton},{home_name:"Hadleigh Albion",week:21,away_name:Burscough},{home_name:"Hexham Borough",week:22,away_name:Horsforth},{home_name:"Chapel Olympic",week:22,away_name:"Wheatley Harriers"},{home_name:"Saffron Olympic",week:22,away_name:"Cross Heath"},{home_name:Wroxeter,week:22,away_name:"Shirdley Hill"},{home_name:"Alsager Town",week:22,away_name:"Hadleigh Albion"},{home_name:Melton,week:22,away_name:Burscough}],name:"Champions Central League",table:[{points:33,team_name:"Hadleigh Albion",draws:6,losses:3,wins:9,ga:19,position_history:[3,3,1,1,1,2,2,2,3,3,3,2,3,2,2,2,2,1],gf:24},{points:32,team_name:"Hexham Borough",draws:8,losses:2,wins:8,ga:12,position_history:[1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2],gf:26},{points:26,team_name:Wroxeter,draws:8,losses:4,wins:6,ga:26,position_history:[7,10,10,11,11,8,10,11,8,6,6,5,6,5,8,5,5,3],gf:23},{points:25,team_name:Burscough,draws:4,losses:7,wins:7,ga:26,position_history:[6,9,6,3,4,4,4,3,2,2,2,4,4,4,4,6,7,4],gf:27},{points:25,team_name:"Shirdley Hill",draws:7,losses:5,wins:6,ga:22,position_history:[2,1,3,5,3,3,3,4,4,5,5,7,8,7,5,3,3,5],gf:25},{points:24,team_name:Horsforth,draws:9,losses:4,wins:5,ga:19,position_history:[4,7,8,9,6,6,8,8,9,10,10,8,9,9,9,9,6,6],gf:24},{points:23,team_name:Melton,draws:5,losses:7,wins:6,ga:24,position_history:[8,4,5,7,9,10,7,5,5,4,4,3,2,3,3,4,4,7],gf:22},{points:22,team_name:"Cross Heath",draws:4,losses:8,wins:6,ga:26,position_history:[10,11,11,8,8,9,11,10,11,8,8,6,5,6,6,7,8,8],gf:24},{points:22,team_name:"Chapel Olympic",draws:7,losses:6,wins:5,ga:21,position_history:[12,6,7,6,7,5,5,6,6,7,9,9,7,8,7,8,9,9],gf:21},{points:20,team_name:"Wheatley Harriers",draws:8,losses:6,wins:4,ga:29,position_history:[5,8,9,10,10,11,9,9,10,11,7,10,10,11,11,11,11,10],gf:22},{points:19,team_name:"Alsager Town",draws:10,losses:5,wins:3,ga:17,position_history:[9,5,4,4,5,7,6,7,7,9,11,11,11,10,10,10,10,11],gf:14},{points:11,team_name:"Saffron Olympic",draws:8,losses:9,wins:1,ga:24,position_history:[11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],gf:13}],teams:[{colour_base:black,name:Horsforth,colour_primary:orange,footballers:[{position:MGR,first_name:Dexter,surname:Butler,age:52},{position:GK,first_name:Ibrahim,surname:Torres,age:31},{goals_this_season:1,position:DF,first_name:Liam,surname:Washington,age:25},{position:DF,first_name:Alfie,surname:Nelson,age:24},{position:DF,first_name:Benjamin,surname:Cole,age:18},{goals_this_season:1,position:DF,first_name:"Jasper  ",surname:Pierce,age:24},{goals_this_season:3,position:MF,first_name:Matthew,surname:Allen,age:32},{goals_this_season:4,position:MF,first_name:Charles,surname:Gonzales,age:37},{goals_this_season:2,position:MF,first_name:Oscar,surname:Davis,age:31},{goals_this_season:2,position:MF,first_name:Lucas,surname:Edwards,age:37},{goals_this_season:6,position:ST,first_name:Nathan,surname:Burns,age:35},{goals_this_season:5,position:ST,first_name:Owain,surname:Witte,age:33},{position:SUB,first_name:Ewan,surname:Nichols,age:19},{position:SUB,first_name:Callum,surname:Mills,age:26},{position:SUB,first_name:Alexander,surname:Romero,age:27},{position:SUB,first_name:Anthony,surname:Pepall,age:22},{position:SUB,first_name:Brandon,surname:Alvarez,age:27},{position:SUB,first_name:Ieuan,surname:Bailey,age:37}],win_bias:0.29734927546914924,stadium:"Queensway Way"},{colour_base:white,name:"Cross Heath",colour_primary:maroon,footballers:[{position:MGR,first_name:Sam,surname:Ellis,age:40},{position:GK,first_name:Henry,surname:Grant,age:31},{position:DF,first_name:Reece,surname:Moore,age:31},{goals_this_season:1,position:DF,first_name:Matthew,surname:Flores,age:28},{position:DF,first_name:Dexter,surname:Gonzales,age:36},{goals_this_season:1,position:DF,first_name:Jude,surname:Daniels,age:33},{goals_this_season:3,position:MF,first_name:Ellis,surname:Scott,age:27},{goals_this_season:2,position:MF,first_name:Albert,surname:Pierce,age:18},{goals_this_season:1,position:MF,first_name:Seth,surname:Ruiz,age:38},{goals_this_season:2,position:MF,first_name:Cole,surname:Cox,age:39},{goals_this_season:8,position:ST,first_name:Elijah,surname:Clark,age:34},{goals_this_season:6,position:ST,first_name:Gethin,surname:Ferguson,age:19},{position:SUB,first_name:Gethin,surname:Virji,age:31},{position:SUB,first_name:Adam,surname:Cabrera,age:34},{position:SUB,first_name:Theo,surname:Spencer,age:18},{position:SUB,first_name:Corey,surname:Clark,age:25},{position:SUB,first_name:Arthur,surname:Fisher,age:29},{position:SUB,first_name:Evan,surname:Southway,age:31}],win_bias:-0.09381533753859328,stadium:"Windsor Green"},{colour_base:orange,name:"Shirdley Hill",colour_primary:black,footballers:[{position:MGR,first_name:Kian,surname:Gonzalez,age:45},{position:GK,first_name:Charles,surname:Smith,age:18},{goals_this_season:1,position:DF,first_name:Seth,surname:Martinez,age:34},{position:DF,first_name:James,surname:Lopez,age:32},{goals_this_season:1,position:DF,first_name:Mckenzie,surname:Reyes,age:22},{goals_this_season:1,position:DF,first_name:Alexander,surname:Myers,age:36},{goals_this_season:2,position:MF,first_name:Luca,surname:Ferguson,age:25},{goals_this_season:3,position:MF,first_name:Lucas,surname:Henry,age:20},{goals_this_season:1,position:MF,first_name:Muhammad,surname:Reynolds,age:22},{goals_this_season:1,position:MF,first_name:Kian,surname:"Mc Cart",age:16},{goals_this_season:6,position:ST,first_name:Jayden,surname:Gonzales,age:18},{goals_this_season:9,position:ST,first_name:Callum,surname:Ellis,age:36},{position:SUB,first_name:Reece,surname:Hawa,age:18},{position:SUB,first_name:Declan,surname:Cox,age:34},{position:SUB,first_name:Jamie,surname:Virji,age:28},{position:SUB,first_name:Mckenzie,surname:Harrison,age:17},{position:SUB,first_name:Dominic,surname:Khambaita,age:22},{position:SUB,first_name:Reece,surname:Stephens,age:18}],win_bias:-0.21037064283157791,stadium:"Crescent Green"},{colour_base:blue,name:"Hadleigh Albion",colour_primary:white,footballers:[{position:MGR,first_name:Freddie,surname:Gibson,age:56},{position:GK,first_name:Finn,surname:Rukin,age:31},{position:DF,first_name:Louie,surname:Edeson,age:24},{position:DF,first_name:Cole,surname:Mitchell,age:19},{goals_this_season:1,position:DF,first_name:Andrew,surname:Bungard,age:33},{position:DF,first_name:Thomas,surname:Wright,age:16},{goals_this_season:2,position:MF,first_name:Aaron,surname:Meath,age:22},{goals_this_season:1,position:MF,first_name:Alfie,surname:Palmer,age:26},{goals_this_season:2,position:MF,first_name:George,surname:Jones,age:25},{goals_this_season:1,position:MF,first_name:Theodore,surname:Marshall,age:15},{goals_this_season:13,position:ST,first_name:Morgan,surname:"Mc Cart",age:36},{goals_this_season:4,position:ST,first_name:Leon,surname:Gordon,age:37},{position:SUB,first_name:Tristan,surname:Henderson,age:19},{position:SUB,first_name:Ibrahim,surname:Marshall,age:26},{position:SUB,first_name:Harry,surname:Kinlan,age:26},{position:SUB,first_name:Harrison,surname:Kennedy,age:26},{position:SUB,first_name:Joe,surname:Woods,age:30},{position:SUB,first_name:Riley,surname:James,age:18}],win_bias:0.07059409429660701,stadium:"West Stadium"},{colour_base:yellow,name:Burscough,colour_primary:blue,footballers:[{position:MGR,first_name:Louis,surname:Hansen,age:54},{position:GK,first_name:Dominic,surname:Bryant,age:24},{position:DF,first_name:Ollie,surname:Howard,age:31},{position:DF,first_name:Jac,surname:Marshall,age:24},{goals_this_season:2,position:DF,first_name:Aidan,surname:Lowsley,age:20},{goals_this_season:2,position:DF,first_name:Ethan,surname:Simmons,age:26},{goals_this_season:3,position:MF,first_name:Reece,surname:White,age:35},{goals_this_season:2,position:MF,first_name:Anthony,surname:Nguyen,age:15},{goals_this_season:2,position:MF,first_name:Tyler,surname:Flores,age:39},{position:MF,first_name:Harry,surname:Bailey,age:22},{goals_this_season:10,position:ST,first_name:Jake,surname:Sanders,age:31},{goals_this_season:6,position:ST,first_name:Cian,surname:Medina,age:22},{position:SUB,first_name:Maxwell,surname:Kinlan,age:17},{position:SUB,first_name:Cameron,surname:Huth,age:39},{position:SUB,first_name:Nathaniel,surname:Meath,age:16},{position:SUB,first_name:Andrew,surname:Myers,age:31},{position:SUB,first_name:Lucas,surname:Garcia,age:25},{position:SUB,first_name:Ryan,surname:Peters,age:32}],win_bias:0.06271284956975642,stadium:"Albert Road"},{colour_base:black,name:Melton,colour_primary:white,footballers:[{position:MGR,first_name:Gabriel,surname:Kennedy,age:49},{position:GK,first_name:Connor,surname:Richardson,age:39},{goals_this_season:1,position:DF,first_name:Caleb,surname:Rogers,age:15},{position:DF,first_name:Owain,surname:Williams,age:39},{goals_this_season:1,position:DF,first_name:Dominic,surname:Freeman,age:20},{goals_this_season:1,position:DF,first_name:Jac,surname:Upadhyad,age:34},{goals_this_season:3,position:MF,first_name:Blake,surname:Griffin,age:27},{goals_this_season:1,position:MF,first_name:Kian,surname:Taylor,age:39},{position:MF,first_name:Jude,surname:Wallace,age:26},{goals_this_season:1,position:MF,first_name:Hayden,surname:Griffin,age:27},{goals_this_season:9,position:ST,first_name:Isaac,surname:James,age:36},{goals_this_season:5,position:ST,first_name:Elliott,surname:Dixon,age:16},{position:SUB,first_name:Logan,surname:Bryant,age:17},{position:SUB,first_name:Kian,surname:Hawkins,age:21},{position:SUB,first_name:Harri,surname:Hernandez,age:19},{position:SUB,first_name:Jack,surname:Rice,age:29},{position:SUB,first_name:George,surname:Vasquez,age:33},{position:SUB,first_name:Edward,surname:Murphy,age:37}],win_bias:0.08,stadium:"Grange Meadow",player_control:true},{colour_base:orange,name:"Alsager Town",colour_primary:white,footballers:[{position:MGR,first_name:Jonathan,surname:Henderson,age:54},{goals_this_season:1,position:GK,first_name:Alfie,surname:Stone,age:22},{position:DF,first_name:Owain,surname:Howard,age:15},{goals_this_season:1,position:DF,first_name:Ashton,surname:Butler,age:30},{position:DF,first_name:Jude,surname:Young,age:24},{position:DF,first_name:Billy,surname:Hill,age:17},{position:MF,first_name:Ibrahim,surname:Turner,age:15},{goals_this_season:2,position:MF,first_name:Gabriel,surname:Wright,age:36},{goals_this_season:1,position:MF,first_name:Riley,surname:Green,age:32},{goals_this_season:1,position:MF,first_name:Andrew,surname:West,age:20},{goals_this_season:3,position:ST,first_name:Toby,surname:Khambaita,age:25},{goals_this_season:5,position:ST,first_name:Jonathan,surname:Schmidt,age:30},{position:SUB,first_name:Riley,surname:Kennedy,age:37},{position:SUB,first_name:Jenson,surname:Davis,age:16},{position:SUB,first_name:Sebastian,surname:Bennett,age:17},{position:SUB,first_name:Charles,surname:Robertson,age:26},{position:SUB,first_name:Tobias,surname:Howard,age:34},{position:SUB,first_name:Charlie,surname:Hughes,age:27}],win_bias:-0.15343024590991416,stadium:"York Farm"},{colour_base:yellow,name:Wroxeter,colour_primary:blue,footballers:[{position:MGR,first_name:Jayden,surname:Martin,age:45},{position:GK,first_name:John,surname:Howard,age:29},{goals_this_season:2,position:DF,first_name:Sebastian,surname:Wood,age:23},{position:DF,first_name:Harrison,surname:Jackson,age:18},{position:DF,first_name:Jake,surname:Bailey,age:19},{position:DF,first_name:Jayden,surname:Wilson,age:25},{goals_this_season:3,position:MF,first_name:Samuel,surname:Shelsher,age:36},{goals_this_season:1,position:MF,first_name:Matthew,surname:Mcquillen,age:31},{goals_this_season:3,position:MF,first_name:Joseph,surname:Perdue,age:29},{goals_this_season:5,position:MF,first_name:Harley,surname:Woods,age:15},{goals_this_season:6,position:ST,first_name:Morgan,surname:Flores,age:25},{goals_this_season:3,position:ST,first_name:Nicholas,surname:Selvaratnam,age:31},{position:SUB,first_name:Freddie,surname:Herrera,age:15},{position:SUB,first_name:Riley,surname:Turner,age:27},{position:SUB,first_name:Harry,surname:Mills,age:29},{position:SUB,first_name:Leo,surname:Rogers,age:35},{position:SUB,first_name:Dominic,surname:Baker,age:15},{position:SUB,first_name:Riley,surname:Shelsher,age:22}],win_bias:0.16954826015113456,stadium:"Manor Park"},{colour_base:red,name:"Saffron Olympic",colour_primary:white,footballers:[{position:MGR,first_name:Kai,surname:Gomez,age:40},{position:GK,first_name:Jac,surname:Happer,age:38},{position:DF,first_name:Edward,surname:Carter,age:38},{goals_this_season:1,position:DF,first_name:Finley,surname:Garcia,age:20},{position:DF,first_name:Morgan,surname:Hunt,age:33},{position:DF,first_name:Ronnie,surname:Jackson,age:30},{goals_this_season:1,position:MF,first_name:Blake,surname:Thompson,age:24},{goals_this_season:2,position:MF,first_name:Adam,surname:Hernandez,age:22},{goals_this_season:2,position:MF,first_name:Cameron,surname:Shaw,age:27},{position:MF,first_name:Muhammad,surname:Southway,age:30},{goals_this_season:5,position:ST,first_name:Louis,surname:Turner,age:31},{goals_this_season:2,position:ST,first_name:Harry,surname:Flores,age:22},{position:SUB,first_name:Thomas,surname:Mitchell,age:32},{position:SUB,first_name:Dylan,surname:Stephens,age:34},{position:SUB,first_name:Luca,surname:Bailey,age:29},{position:SUB,first_name:Lewis,surname:Daniels,age:37},{position:SUB,first_name:Tristan,surname:Chaisty,age:26},{position:SUB,first_name:Jac,surname:Davis,age:21}],win_bias:-0.488636820816288,stadium:"South Farm"},{colour_base:white,name:"Chapel Olympic",colour_primary:black,footballers:[{position:MGR,first_name:Reece,surname:Robertson,age:52},{position:GK,first_name:Oliver,surname:Pierce,age:38},{goals_this_season:1,position:DF,first_name:Tommy,surname:Patel,age:30},{goals_this_season:1,position:DF,first_name:Bobby,surname:Shaw,age:36},{goals_this_season:1,position:DF,first_name:Samuel,surname:Fernandez,age:22},{position:DF,first_name:Ellis,surname:Domville,age:26},{goals_this_season:1,position:MF,first_name:Tyler,surname:Husher,age:25},{goals_this_season:2,position:MF,first_name:Anthony,surname:Lee,age:22},{position:MF,first_name:Sebastian,surname:Campbell,age:35},{goals_this_season:1,position:MF,first_name:Kai,surname:Brown,age:28},{goals_this_season:10,position:ST,first_name:Cody,surname:Mcquillen,age:36},{goals_this_season:4,position:ST,first_name:Iwan,surname:Bennett,age:20},{position:SUB,first_name:Alexander,surname:Mitchell,age:29},{position:SUB,first_name:Joe,surname:Cunningham,age:30},{position:SUB,first_name:Jayden,surname:Fisher,age:24},{position:SUB,first_name:Alfie,surname:Hicks,age:18},{position:SUB,first_name:Kaiden,surname:Alexander,age:31},{position:SUB,first_name:Kyle,surname:Hoffman,age:26}],win_bias:0.25871602864765386,stadium:"Kings Street"},{colour_base:black,name:"Hexham Borough",colour_primary:red,footballers:[{position:MGR,first_name:Dominic,surname:Moreno,age:35},{position:GK,first_name:Cian,surname:Meath,age:25},{position:DF,first_name:Rowan,surname:Sanchez,age:19},{goals_this_season:1,position:DF,first_name:Bradley,surname:Ruiz,age:23},{position:DF,first_name:Kyle,surname:Huth,age:18},{position:DF,first_name:Iwan,surname:Murphy,age:28},{goals_this_season:2,position:MF,first_name:Leon,surname:Perez,age:27},{goals_this_season:2,position:MF,first_name:Frederick,surname:Bennett,age:16},{goals_this_season:3,position:MF,first_name:Evan,surname:Mcquillen,age:16},{goals_this_season:1,position:MF,first_name:Rowan,surname:Weild,age:28},{goals_this_season:12,position:ST,first_name:Lewis,surname:Diaz,age:22},{goals_this_season:5,position:ST,first_name:Oliver,surname:Cole,age:18},{position:SUB,first_name:Hugo,surname:Foster,age:38},{position:SUB,first_name:Jack,surname:Castillo,age:33},{position:SUB,first_name:Edward,surname:Wallace,age:28},{position:SUB,first_name:Connor,surname:Harrison,age:30},{position:SUB,first_name:Kieran,surname:Patterson,age:20},{position:SUB,first_name:Stanley,surname:Richardson,age:39}],win_bias:0.4877373703418977,stadium:"Queens Way"},{colour_base:white,name:"Wheatley Harriers",colour_primary:black,footballers:[{position:MGR,first_name:Toby,surname:Cabrera,age:42},{goals_this_season:2,position:GK,first_name:Jenson,surname:Burns,age:36},{position:DF,first_name:Hayden,surname:Dissanayake,age:19},{goals_this_season:1,position:DF,first_name:Daniel,surname:Stone,age:36},{goals_this_season:1,position:DF,first_name:Stanley,surname:Hamilton,age:24},{goals_this_season:1,position:DF,first_name:Benjamin,surname:Gardner,age:35},{position:MF,first_name:Ryan,surname:Bennett,age:30},{goals_this_season:2,position:MF,first_name:Maxwell,surname:Hoffman,age:27},{goals_this_season:1,position:MF,first_name:Tommy,surname:Rice,age:27},{goals_this_season:1,position:MF,first_name:Tomos,surname:Wood,age:25},{goals_this_season:8,position:ST,first_name:Jacob,surname:Stone,age:30},{goals_this_season:5,position:ST,first_name:Finn,surname:Gordon,age:27},{position:SUB,first_name:Olly,surname:Gelson,age:39},{position:SUB,first_name:Harry,surname:Perry,age:21},{position:SUB,first_name:Ryan,surname:Powell,age:29},{position:SUB,first_name:Corey,surname:Woods,age:21},{position:SUB,first_name:Harrison,surname:Kinlan,age:36},{position:SUB,first_name:Tristan,surname:Dua,age:36}],win_bias:0.39919188472705025,stadium:"North Mill"}],weekly_results:[{home_goals:[],first_half_length:48,second_half_length:50,gate:275,away_goals:[],match_events:[{minute:12,type:GENERIC,description:"The ref is talking to Butler (Alsager Town) after a vicious tackle"},{minute:18,type:GENERIC,description:"A burst of noise from the stands to encourage the Alsager Town players"},{minute:36,type:GENERIC,description:"A long ball from Horsforth but Burns can't quite get to it"},{minute:42,type:GENERIC,description:"Alsager Town's manager Jonathan Henderson is holding his head in frustration"},{minute:48,type:YELLOWCARD,description:"Yellow card for Cole (Horsforth)"},{minute:48,type:GENERIC,description:"The ref is talking to Davis (Horsforth) after a vicious tackle"},{minute:64,type:GENERIC,description:"The travelling Horsforth supporters are shouting abuse at the home fans"},{minute:66,type:GENERIC,description:"Horsforth's Washington jogs up the channel"},{minute:81,type:GENERIC,description:"Defender Washington (Horsforth) hoofs the ball upfield"},{minute:85,type:GENERIC,description:"The Horsforth fans are chanting Dexter Butler's name"},{minute:86,type:GENERIC,description:"Horsforth's Cole jogs up the channel"},{minute:91,type:GENERIC,description:"Burly Horsforth defender Pierce cuts out the attack with a mean sliding tackle"},{minute:93,type:GENERIC,description:"Defender Nelson (Horsforth) clears the ball for a throw-in"}]},{home_goals:[{time:10,scorer_id:"Elliott Dixon"},{time:43,scorer_id:"Caleb Rogers"}],first_half_length:49,second_half_length:46,gate:176,away_goals:[{time:11,scorer_id:"Samuel Shelsher"},{time:35,scorer_id:"Morgan Flores"},{time:66,scorer_id:"Nicholas Selvaratnam"}],match_events:[{minute:22,type:GENERIC,description:"Some activity on the Melton bench as Hernandez starts warming up"},{minute:27,type:GENERIC,description:"The Melton fans are chanting Gabriel Kennedy's name"},{minute:27,type:GENERIC,description:"A long ball from Wroxeter but Selvaratnam can't quite get to it"},{minute:29,type:GENERIC,description:"Defender Williams (Melton) hoofs the ball upfield"},{minute:34,type:GENERIC,description:"The travelling Wroxeter supporters are shouting abuse at the home fans"},{minute:49,type:INJURY,description:"James (Melton) writhes on the floor after tripping over the ball"},{minute:50,type:GENERIC,description:"Melton Striker James is caught offside"},{minute:72,type:YELLOWCARD,description:"Yellow card for Freeman (Melton)"},{minute:74,type:GENERIC,description:"Defender Jackson (Wroxeter) hoofs the ball upfield"},{minute:78,type:GENERIC,description:"Jayden Martin is gesticulating wildy at his Wroxeter players"}]},{home_goals:[{scorer_id:"Reece White"}],first_half_length:46,second_half_length:47,gate:243,away_goals:[],match_events:[{type:GENERIC,description:"Nguyen (Burscough) seems to be getting a stern warning from the ref"},{minute:3,type:GENERIC,description:"Defender Howard (Burscough) hoofs the ball upfield"},{minute:3,type:GENERIC,description:"Burscough's Howard jogs up the channel"},{minute:17,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:21,type:GENERIC,description:"Burscough Striker Medina is caught offside"},{minute:41,type:GENERIC,description:"Burscough's Lowsley jogs up the channel"},{minute:42,type:GENERIC,description:"Meaty Burscough defender Lowsley heads the ball clear"},{minute:56,type:GENERIC,description:"The travelling Saffron Olympic supporters are shouting abuse at the home fans"},{minute:58,type:INJURY,description:"Shaw (Saffron Olympic) goes down after colliding with the opposing defender"},{minute:70,type:INJURY,description:"Marshall (Burscough) seems to be limping slightly"},{minute:73,type:GENERIC,description:"Defender Simmons (Burscough) hoofs the ball upfield"},{minute:74,type:INJURY,description:"Shaw (Saffron Olympic) seems to be limping slightly"},{minute:88,type:GENERIC,description:"Some activity on the Burscough bench as Kinlan starts warming up"}]},{home_goals:[{time:58,scorer_id:"Leon Gordon"},{time:31,scorer_id:"George Jones"},{time:45,scorer_id:"Morgan Mc Cart"}],first_half_length:52,second_half_length:52,gate:257,away_goals:[{time:36,scorer_id:"Cody Mcquillen"},{time:24,scorer_id:"Bobby Shaw"}],match_events:[{type:GENERIC,description:"Freddie Gibson is gesticulating wildy at his Hadleigh Albion players"},{minute:2,type:GENERIC,description:"A cheer from the Chapel Olympic fans as a rude inflatable is thrown on the pitch"},{minute:18,type:GENERIC,description:"Hadleigh Albion's Bungard jogs up the channel"},{minute:34,type:GENERIC,description:"Some activity on the Chapel Olympic bench as Hicks starts warming up"},{minute:35,type:GENERIC,description:"The Chapel Olympic fans are chanting Reece Robertson's name"},{minute:42,type:GENERIC,description:"Mc Cart (Hadleigh Albion) seems to be getting a stern warning from the ref"},{minute:44,type:GENERIC,description:"Meaty Chapel Olympic defender Shaw heads the ball clear"},{minute:51,type:INJURY,description:"Husher (Chapel Olympic) goes down after colliding with the opposing defender"},{minute:63,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:64,type:GENERIC,description:"Burly Hadleigh Albion defender Wright cuts out the attack with a mean sliding tackle"},{minute:65,type:GENERIC,description:"Chapel Olympic Striker Mcquillen is caught offside"},{minute:69,type:GENERIC,description:"Burly Hadleigh Albion defender Mitchell cuts out the attack with a mean sliding tackle"},{minute:72,type:GENERIC,description:"The Hadleigh Albion manager points angrily at keeper Rukin"},{minute:80,type:GENERIC,description:"Chapel Olympic Striker Bennett is caught offside"},{minute:82,type:GENERIC,description:"Chapel Olympic manager Reece Robertson seems to be giving sub Hoffman some instructions"},{minute:101,type:GENERIC,description:"Some activity on the Hadleigh Albion bench as Kennedy starts warming up"}]},{home_goals:[{time:88,scorer_id:"Lucas Henry"}],first_half_length:48,second_half_length:48,gate:173,away_goals:[{time:19,scorer_id:"Lewis Diaz"}],match_events:[{minute:4,type:GENERIC,description:"Shirdley Hill's manager Kian Gonzalez is furious with the referee"},{minute:7,type:INJURY,description:"Weild (Hexham Borough) has broken his nose but is playing on"},{minute:17,type:GENERIC,description:"Bennett (Hexham Borough) given a lecture by the ref"},{minute:19,type:YELLOWCARD,description:"Yellow card for Mc Cart (Shirdley Hill)"},{minute:30,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:58,type:GENERIC,description:"Hexham Borough manager Dominic Moreno seems to be giving sub Harrison some instructions"},{minute:72,type:GENERIC,description:"Dominic Moreno is gesticulating wildy at his Hexham Borough players"},{minute:74,type:GENERIC,description:"The Shirdley Hill manager points angrily at keeper Smith"},{minute:76,type:INJURY,description:"The physio comes on to see to Ferguson (Shirdley Hill)"},{minute:78,type:GENERIC,description:"Defender Martinez (Shirdley Hill) hoofs the ball upfield"},{minute:88,type:YELLOWCARD,description:"Yellow card for Bennett (Hexham Borough)"}]},{home_goals:[{time:42,scorer_id:"Ellis Scott"},{time:77,scorer_id:"Gethin Ferguson"}],first_half_length:51,second_half_length:48,gate:214,away_goals:[{time:13,scorer_id:"Stanley Hamilton"},{time:13,scorer_id:"Jacob Stone"},{time:39,scorer_id:"Maxwell Hoffman"}],match_events:[{minute:8,type:GENERIC,description:"Striker Gordon is brought down by the big centre half, but the ref waves it away"},{minute:21,type:GENERIC,description:"The ref is talking to Ferguson (Cross Heath) after a vicious tackle"},{minute:29,type:GENERIC,description:"Cross Heath's manager Sam Ellis is holding his head in frustration"},{minute:32,type:GENERIC,description:"Defender Gardner (Wheatley Harriers) clears the ball for a throw-in"},{minute:46,type:GENERIC,description:"The ref is talking to Ferguson (Cross Heath) after a vicious tackle"},{minute:53,type:INJURY,description:"Daniels (Cross Heath) seems to be limping slightly"},{minute:61,type:GENERIC,description:"Toby Cabrera is gesticulating wildy at his Wheatley Harriers players"},{minute:70,type:GENERIC,description:"A cheer from the Cross Heath fans as a rude inflatable is thrown on the pitch"},{minute:70,type:YELLOWCARD,description:"Yellow card for Daniels (Cross Heath)"},{minute:81,type:GENERIC,description:"Ferguson (Cross Heath) given a lecture by the ref"},{minute:82,type:GENERIC,description:"Defender Flores (Cross Heath) clears the ball for a throw-in"},{minute:90,type:GENERIC,description:"The Cross Heath fans are chanting Sam Ellis's name"},{minute:93,type:GENERIC,description:"Sam Ellis is gesticulating wildy at his Cross Heath players"},{minute:97,type:GENERIC,description:"The Cross Heath manager points angrily at keeper Grant"}]}],current_week:19}